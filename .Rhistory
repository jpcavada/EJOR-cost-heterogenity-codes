library(scales)
ggplot(data5,
aes(y = factor(nivel_de_ingreso,
labels = c("1",
"2",
"3",
"4",
"5")),
x = last_prime,
color = nivel_de_ingreso)) +
geom_jitter(alpha = 0.7,
size = 1.5) + theme_minimal()+theme(legend.position = "none")+
labs(title = "Última Prima por Nivel de Ingreso",
subtitle = "Datos últimos 5-Años",
x = "Valor Prima (CLP)",
y = "")
#Graph-4
# plot survival curve
library(survival)
library(survminer)
pkgs <- c("ggplot2", "dplyr", "tidyr",
"mosaicData", "carData",
"VIM", "scales", "treemapify",
"gapminder", "ggmap", "choroplethr",
"choroplethrMaps", "CGPfunctions",
"ggcorrplot", "visreg",
"gcookbook", "forcats",
"survival", "survminer",
"ggalluvial", "ggridges",
"GGally", "superheat",
"waterfalls", "factoextra",
"networkD3", "ggthemes",
"hrbrthemes", "ggpol",
"ggbeeswarm")
install.packages(pkgs)
install.packages(pkgs)
install.packages(pkgs)
#Graph-4
# plot survival curve
library(survival)
library(survminer)
install.packages(pkgs)
#Graph-4
# plot survival curve
library(survival)
library(survminer)
data(data5)
data(data5)
data(data5)
#Cargar Data y Librerias
library(readr)
library(varhandle)
data_5 <- read_delim("data5.csv", "\t", escape_double = FALSE,
trim_ws = TRUE)
#Cargar Data y Librerias
library(readr)
library(varhandle)
data_5 <- read_delim("data5.csv", "\t", escape_double = FALSE,
trim_ws = TRUE)
ingresoDum <- to.dummy(data$nivel_de_ingreso, "nivelIngreso")
data_5 <- read.delim("C:/Users/juanignacio.zambrano/Desktop/Logit-ModeloFuga/data5.csv")
View(data_5)
#Graph-4
# plot survival curve
library(survival)
library(survminer)
data(data_5)
sfit <- survfit(Surv(data5$tenure_months__per_root_policy_number, data5$target_churn) ~  1, data=data5)
sfit <- survfit(Surv(data_5$tenure_months__per_root_policy_number, data_5$target_churn) ~  1, data=data5)
surv <- data.frame(cbind(data_5$target_churn, data_5$tenure_months__per_root_policy_number))
surv <- data.frame(cbind(data_5$target_churn, data_5$tenure_months__per_root_policy_number))
data(surv)
sfit <- survfit(Surv(tenure_months__per_root_policy_number, target_churn) ~  1, data=surv)
View(surv)
surv <- data.frame(cbind(data_5$target_churn, data_5$tenure_months__per_root_policy_number))
data(surv)
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier curve for lung cancer survival")
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier curve for lung cancer survival")
data(surv)
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier curve for Policy Survival")
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier curve for Policy Survival")
surv <- data.frame(cbind(data_5$target_churn, data_5$tenure_months__per_root_policy_number))
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier Curve for Policy Survival")
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier Curve for Policy Survival")+
labs(y = "Survival Probability",
x = "Tiempo en Meses",
caption = "Source: BD Bee-Mining")
ggsurvplot(sfit,
title="Kaplan-Meier Curve for Policy Survival")+
labs(y = "Survival Probability",
x = "Tiempo en Meses")
surv <- data.frame(cbind(data_5$target_churn,
data_5$tenure_months__per_root_policy_number,
data_5$product_name))
View(surv)
surv <- data.frame(cbind(data_5$target_churn,
data_5$tenure_months__per_root_policy_number,
data_5$canal_venta))
sfit <- survfit(Surv(X2, X1) ~  1, data=surv)
ggsurvplot(sfit,
title="Kaplan-Meier Curve for Policy Survival")+
labs(y = "Survival Probability",
x = "Tiempo en Meses")
#Graph-4-b.
# plot survival curve for men and women
sfit <- survfit(Surv(X2, X1) ~  X3, data=surv)
View(surv)
summary.factor(surv$X3)
#Graph-4-b.
# plot survival curve for men and women
sfit <- survfit(Surv(X2, X1) ~  X3, data=surv)
ggsurvplot(sfit,
conf.int=TRUE,
pval=TRUE,
legend.labs=c("1", "2", "3"),
legend.title="Canal Venta",
palette=c("cornflowerblue", "indianred3"),
title="Kaplan-Meier Curve for SVI Policy survival",
xlab = "Time (Months)")
#Graph-4-b.
# plot survival curve for men and women
sfit <- survfit(Surv(X2, X1) ~  X3+1, data=surv)
ggsurvplot(sfit,
conf.int=TRUE,
pval=TRUE,
legend.labs=c("1", "2", "3"),
legend.title="Canal Venta",
palette=c("cornflowerblue", "indianred3"),
title="Kaplan-Meier Curve for SVI Policy survival",
xlab = "Time (Months)")
#Graph-4-b.
# plot survival curve for men and women
sfit <- survfit(Surv(X2, X1) ~  X3, data=surv)
View(sfit)
View(surv)
ggsurvplot(sfit,
conf.int=TRUE,
pval=TRUE,
legend.labs=c("1", "2", "3"),
legend.title="Canal Venta",
palette=c("cornflowerblue", "indianred3"),
title="Kaplan-Meier Curve for SVI Policy survival",
xlab = "Time (Months)")
#Graph-4-b.
# plot survival curve for men and women
sfit <- survfit(Surv(X2, X1) ~  X3, data=surv)
ggsurvplot(sfit,
conf.int=TRUE,
pval=TRUE,
legend.labs=c("1", "2", "3"),
legend.title="Canal Venta",
title="Kaplan-Meier Curve for SVI Policy survival",
xlab = "Time (Months)")
#Graph-4-b.
# plot survival curve for men and women
sfit <- survfit(Surv(X2, X1) ~  X3, data=surv)
ggsurvplot(sfit,
conf.int=FALSE,
pval=FALSE,
legend.labs=c("1", "2", "3"),
legend.title="Canal Venta",
title="Kaplan-Meier Curve for SVI Policy survival",
xlab = "Time (Months)")
View(surv)
View(sfit)
rm(list=ls())
graphics.off()
options(digits = 3)
data5 <- read.delim("C:/Users/juanignacio.zambrano/Desktop/Logit-ModeloFuga/data5.csv")
View(data5)
rm(list=ls())
graphics.off()
options(digits = 3)
#Cargo datos BD SVI Bee-Mining
data5 <- read.delim("C:/Users/juanignacio.zambrano/Desktop/Logit-ModeloFuga/data5.csv")
View(data5)
cols <- c(21)
df <- data5[,cols]
df <- data.frame(data5[,cols])
View(df)
#Edad del agente de venta cuando inicia la poliza
cumpleañosagente <- as-Date(data5$sales_agent_birth_date)
#Edad del agente de venta cuando inicia la poliza
cumpleañosagente <- as.Date(data5$sales_agent_birth_date)
inicioPol <- as.Date(data5$policy_start_date)
#Edad del agente de venta cuando inicia la poliza
cumpleagente <- as.Date(data5$sales_agent_birth_date)
edadAgenteVentas <- inicioPol-cumpleagente
View(edadAgenteVentas
)
edadAgenteVentas <- (inicioPol-cumpleagente) / 360
#Edad Agente
summary(edadAgenteVentas)
#Edad Agente
summary(data.frame(edadAgenteVentas))
edadAgenteVentas <- data.frame((inicioPol-cumpleagente) / 360)
#Edad Agente
summary(edadAgenteVentas)
#Edad Agente
summary(edadAgenteVentas$X.inicioPol...cumpleagente..360)
edadAgenteVentas <- (inicioPol-cumpleagente) / 360
#Edad Agente
View(edadAgenteVentas)
edadAgenteVentas <- round((inicioPol-cumpleagente) / 360)
#Edad Agente
View(edadAgenteVentas)
edadAgenteVentas <- as.int(round((inicioPol-cumpleagente) / 360))
help(int)
help("as.integer")
edadAgenteVentas <- as.integer(round((inicioPol-cumpleagente) / 360))
#Edad Agente
View(edadAgenteVentas)
summary(edadAgenteVentas)
rm(cumpleagente)
rm(cumpleagente)
View(data5)
#Var2. Edad del cliente
cumplecliente <- as.Date(data5$customer_age_years)
#Var2. Edad del cliente
cumplecliente <- data5$customer_age_years
library(RPostgres)
library(DBI)
pw<- {
"Lunes.123;"
}
con <- dbConnect(RPostgres::Postgres()
, host='beemining.crsjjimsvmff.us-east-1.rds.amazonaws.com'
, port='5432'
, dbname='beemining'
, user='emilio.varas'
, password=pw)
rm(pw) # removes the password
clientes <- dbGetQuery(con,
"SELECT
bee_seguros.udim_customer.customer_id,
bee_seguros.udim_customer.sex_id,
bee_seguros.udim_customer.birth_date,
bee_seguros.udim_customer.death_date,
CASE WHEN rut::float > 50000000 THEN 'YES' ELSE 'NO' END is_company,
--bee_seguros.udim_customer.marital_status_id,
--bee_seguros.dim_geography.country_name,
bee_seguros.dim_geography.region_name,
bee_seguros.dim_geography.province_name,
bee_seguros.dim_geography.district_name
FROM
bee_seguros.udim_customer
INNER JOIN bee_seguros.dim_geography ON
bee_seguros.udim_customer.district_id = bee_seguros.dim_geography.district_id
WHERE
bee_seguros.udim_customer.customer_id IN (SELECT customer_id FROM bee_seguros.fact_role_policy WHERE role_id = 19 )
;")
View(clientes)
rm(list=ls())
graphics.off()
options(digits = 3)
#Cargo datos BD SVI Bee-Mining
data5 <- read.delim("C:/Users/juanignacio.zambrano/Desktop/Logit-ModeloFuga/data5.csv")
#Var 1. Edad del agente de Venta (Cuando inicia la poliza)
cumpleagente <- as.Date(data5$sales_agent_birth_date)
inicioPol <- as.Date(data5$policy_start_date)
edadAgenteVentas <- as.integer(round((inicioPol-cumpleagente) / 360))
View(edadAgenteVentas)
#Var2. Edad del cliente
source("sql/getClientes.R")
#Var2. Edad del cliente
source("/sql/getClientes.R")
wd(getwd())
setwd(getwd())
#Var2. Edad del cliente
source("/sql/getClientes.R")
#Var2. Edad del cliente
source(r"sql/getClientes.R")
#Var2. Edad del cliente
source("sql/getClientes.R")
mu <- log(21600)
N <- 249
Data_data <- read.csv("C:/Users/juanignacio.zambrano/Downloads/Data_data.csv")
View(Data_data)
summary.factor(Data_data$nomComuna)
d <- subset(Data_data, nomComuna = "Vitacura")
d <- subset(Data_data, nomComuna == "Vitacura")
d <- subset(Data_data, nomComuna == "Vitacura" or nomComuna == "Las Condes" )
d <- subset(Data_data, nomComuna == "Vitacura" | nomComuna == "Las Condes" )
d <- subset(Data_data, nomComuna == "Vitacura" | nomComuna == "Las Condes" |
nomComuna == "Santiago" | nomComuna == "Ñuñoa" | nomComuna == "Providencia")
View(d)
custList <- aggregate(d$razonSocial, by=list(d$razonSocial), FUN = length )
View(custList)
custList <- aggregate(d$razonSocial, by=list(d$razonSocia, d$Weekdayl), FUN = length )
custList <- aggregate(d$razonSocial, by=list(d$razonSocia, d$Weekday), FUN = length )
custList <- aggregate(d$razonSocial, by=list(d$razonSocial, d$Weekday), FUN = length )
custList <- aggregate(d$razonSocial, by=list(d$Weekday), FUN = length )
custList <- aggregate(d$razonSocial, by=list(d$razonSocial, d$weekday), FUN = length )
View(custList)
custList <- aggregate(d$razonSocial, by=list(d$razonSocial, d$weekday), FUN = length )
View(custList)
tabulate(d$nomComuna)
tabulate(d$monthofCall)
tabulate(d$monthofCall)
tabulate(d$monthofCall)
library(readr)
baseInst100 <- read_csv("C:/Users/juanignacio.zambrano/Desktop/xerox-paper/Data/ins_backup/baseInst100.csv")
View(baseInst100)
rm(list=ls())
graphics.off()
options(digits = 3)
library(readr)
baseInst100 <- read_csv("C:/Users/juanignacio.zambrano/Desktop/xerox-paper/Data/ins_backup/baseInst100.csv")
View(baseInst100)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
View(custList)
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
View(custData)
setwd("C:/Users/juanignacio.zambrano/Desktop/xerox-paper")
#Abir instancia aleatoria generada
baseInst100 <- read.csv("~/xerox-paper/Data/baseInst100.csv")
library(readr)
baseInst100 <- read_csv("Data/ins_backup/baseInst100.csv")
View(baseInst100)
log(21600)
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial, oriente$monthofCall), FUN = length )
#Abir instancia aleatoria generada
baseInst100 <- read.csv("~/xerox-paper/Data/baseInst100.csv")
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial, oriente$monthofCall), FUN = length )
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial, oriente$monthofCall), FUN = length )
View(baseInst100)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
View(baseInst100)
View(custList)
N <- 249
mu <- 28800
p <- data.frame(rep(mu, N))
p05 <- data.frame(sort(rnorm(N, mean = mu, sd = mu*0.05)))
p10 <- data.frame(sort(rnorm(N, mean = mu, sd = mu*0.1)))
p20 <- data.frame(sort(rnorm(N, mean = mu, sd = mu*0.2)))
p25 <- data.frame(sort(rnorm(N, mean = mu, sd = mu*0.25)))
p15 <- data.frame(sort(rnorm(N, mean = mu, sd = mu*0.15)))
p50 <- data.frame(sort(abs(rnorm(N, mean = mu, sd =mu*0.50))))
p100 <- data.frame(sort(abs(rnorm(N, mean = mu, sd =mu))))
custData <- cbind(custList[,1], p, p05,p10, p15, p20, p25, p50,p100)
colnames(custData) <- c('razonSocial','p', 'p05', 'p10', 'p15', 'p20', 'p25', 'p50', 'p100')
baseInst100 <-merge(baseInst100,custData, by='razonSocial')
write.csv(baseInst100, file = "baseInst100_2.csv")
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial, oriente$monthofCall), FUN = length )
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
rm(list=ls())
graphics.off()
options(digits = 3)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial, oriente$monthofCall), FUN = length )
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
library(readr)
baseInst100 <- read_csv("Data/ins_backup/baseInst100.csv")
View(baseInst100)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial, oriente$monthofCall), FUN = length )
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
N <- 249
mu <- log(21600)
set.seed(1)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
set.seed(1)
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
base<-merge(baseInst100,custData, by='razonSocial')
View(base)
View(baseInst100)
View(baseInst100)
baseInst100 <- baseInst100[,-penalty]
View(baseInst100)
baseInst100 <- baseInst100[,-10]
View(baseInst100)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
set.seed(1)
N <- 249
mu <- log(21600)
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
base<-merge(baseInst100,custData, by='razonSocial')
View(base)
setwd("C:/Users/juanignacio.zambrano/Desktop/xerox-paper")
write.csv(base, file="base.csv")
log(21600)*1.3
log(21600)
log(21600)/1.3
7.68/9.98
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
set.seed(1)
N <- 249
mu <- log(21600)*1.3
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
base<-merge(baseInst100,custData, by='razonSocial')
write.csv(base, file="base1.csv")
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
set.seed(1)
N <- 249
mu <- log(21600)/1.3
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
baseInst100 <- baseInst100[,-10]
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
set.seed(1)
View(baseInst100)
custList <- aggregate(baseInst100$razonSocial, by=list(baseInst100$razonSocial), FUN = length )
set.seed(1)
N <- 249
mu <- log(21600)/1.3
p10 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.10))))
p15 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.15)))))
p20 <- data.frame(exp(sort(rnorm(N, mean = mu, sd = 0.20))))
p25 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd = 0.25)))))
p30 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.30)))))
p35 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.35)))))
p40 <- data.frame(exp(sort(abs(rnorm(N, mean = mu, sd =0.4)))))
custData <- cbind(custList[,1], p10, p15, p20, p25, p30,p35,p40)
colnames(custData) <- c('razonSocial', 'p10', 'p15', 'p20', 'p25', 'p30', 'p35', 'p40')
base<-merge(baseInst100,custData, by='razonSocial')
write.csv(base, file="base2.csv")
library(readr)
base1 <- read_csv("Data/nuevas instancias/base1.csv")
View(base1)
library(readr)
base <- read_csv("Data/nuevas instancias/base.csv")
View(base)
library(readr)
base2 <- read_csv("Data/nuevas instancias/base2.csv")
View(base2)
