Iter 101
MasterProb = 77593.9

s [*] :=
1  71
2  96
3  80
4  84
5  69
;

SubProb = -12536.2
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5390

Iter 102
MasterProb = 76358.4

s [*] :=
1  96
2  52
3  97
4  73
5  29
;

SubProb = -4257.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 103
MasterProb = 75767.1

s [*] :=
1  18
2  32
3  42
4  82
5  98
;

SubProb = -7849.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 104
MasterProb = 73199

s [*] :=
1  65
2  93
3  77
4  92
5  84
;

SubProb = -5421.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 105
MasterProb = 72204.8

s [*] :=
1  37
2  80
3  98
4  84
5   4
;

SubProb = -4608.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 106
MasterProb = 71362.1

s [*] :=
1  30
2  45
3  25
4  39
5  37
;

SubProb = -8048.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 107
MasterProb = 69770.1

s [*] :=
1  37
2  42
3  24
4  52
5   3
;

SubProb = -5638.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 108
MasterProb = 69389.2

s [*] :=
1  23
2  32
3  52
4  21
5  58
;

SubProb = -7905.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 109
MasterProb = 67060

s [*] :=
1   23
2    5
3   61
4   40
5  101
;

SubProb = -3144.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 110
MasterProb = 66704.2

s [*] :=
1   6
2  38
3  41
4   4
5  82
;

SubProb = -3136.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 66561

s [*] :=
1  75
2   5
3  58
4  37
5  86
;

SubProb = -2365.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 112
MasterProb = 66413.7

s [*] :=
1   75
2   86
3   36
4   88
5  100
;

SubProb = -2962.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 113
MasterProb = 66239.1

s [*] :=
1   41
2   32
3   94
4   63
5  101
;

SubProb = -2724.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 114
MasterProb = 66054.3

s [*] :=
1  31
2  57
3  25
4  69
5  60
;

SubProb = -3058.74
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 115
MasterProb = 65733.9

s [*] :=
1  64
2  18
3   3
4  49
5  77
;

SubProb = -3902.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 116
MasterProb = 65244.2

s [*] :=
1  98
2  86
3  33
4  69
5  89
;

SubProb = -3409.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 117
MasterProb = 64677.8

s [*] :=
1  92
2  80
3  85
4  23
5  75
;

SubProb = -1331.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 118
MasterProb = 64546.6

s [*] :=
1   4
2   1
3  75
4   2
5  64
;

SubProb = -1643.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 119
MasterProb = 64372

s [*] :=
1  31
2  44
3  52
4  42
5  19
;

SubProb = -1659.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 120
MasterProb = 64185.4

s [*] :=
1  49
2  40
3  64
4  28
5  53
;

SubProb = -396.953
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 121
MasterProb = 64178.2

s [*] :=
1   42
2  100
3   46
4   65
5   28
;

SubProb = -365.287
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 122
MasterProb = 64125.1

s [*] :=
1  87
2   5
3  32
4  42
5  92
;

SubProb = -1820.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 123
MasterProb = 63856.1

s [*] :=
1  100
2   97
3   94
4   98
5   63
;

SubProb = -1673.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 124
MasterProb = 63698.4

s [*] :=
1  52
2   4
3  84
4  34
5  75
;

SubProb = -805.127
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 125
MasterProb = 63650.4

s [*] :=
1  100
2   60
3  101
4  102
5  103
;

SubProb = -708.617
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 126
MasterProb = 63626

s [*] :=
1  16
2  63
3  80
4  40
5  31
;

SubProb = -2135.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 127
MasterProb = 63252.4

s [*] :=
1   96
2   91
3  100
4  101
5  102
;

SubProb = -1324.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1540

Iter 128
MasterProb = 62906.6

s [*] :=
1  87
2   3
3  82
4  62
5  65
;

SubProb = -1911.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 129
MasterProb = 62707.2

s [*] :=
1  94
2  59
3  63
4   3
5  65
;

SubProb = -2087.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 130
MasterProb = 62519

s [*] :=
1   73
2    5
3  101
4  102
5  103
;

SubProb = -523.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 131
MasterProb = 62478.2

s [*] :=
1   65
2   36
3   50
4  101
5  102
;

SubProb = -1250.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 132
MasterProb = 62387.5

s [*] :=
1  55
2  86
3  80
4  29
5  23
;

SubProb = -1342.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 133
MasterProb = 62357.8

s [*] :=
1  98
2  42
3  22
4  96
5  53
;

SubProb = -1911.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 62329.3

s [*] :=
1  23
2  63
3  38
4  69
5  75
;

SubProb = -871.462
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 135
MasterProb = 62310.5

s [*] :=
1  72
2  18
3  81
4  63
5  21
;

SubProb = -1034.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 136
MasterProb = 62219.9

s [*] :=
1  53
2  21
3  37
4  20
5  80
;

SubProb = -1677.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 137
MasterProb = 61794.7

s [*] :=
1  20
2  51
3   3
4  58
5   8
;

SubProb = -1928.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 138
MasterProb = 61518.2

s [*] :=
1   96
2   98
3  100
4   84
5  101
;

SubProb = -1343.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 139
MasterProb = 61261.8

s [*] :=
1  25
2  21
3  10
4  39
5  55
;

SubProb = -1018.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 140
MasterProb = 61112.7

s [*] :=
1   5
2  48
3  32
4  80
5  55
;

SubProb = -1115.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 141
MasterProb = 61047.3

s [*] :=
1  96
2  89
3  17
4  64
5  10
;

SubProb = -1437.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 142
MasterProb = 60967.5

s [*] :=
1   37
2   22
3  101
4  102
5  103
;

SubProb = -525.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 143
MasterProb = 60917.2

s [*] :=
1   33
2   89
3  101
4  102
5  103
;

SubProb = -502.666
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 144
MasterProb = 60848.5

s [*] :=
1  59
2  32
3  98
4  91
5  37
;

SubProb = -1947.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 145
MasterProb = 60724.7

s [*] :=
1   58
2   75
3  101
4  102
5  103
;

SubProb = -358.571
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 146
MasterProb = 60694.3

s [*] :=
1  24
2  53
3  25
4  50
5  55
;

SubProb = -1800.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 147
MasterProb = 60559.4

s [*] :=
1  30
2  97
3  84
4  89
5  73
;

SubProb = 421.836
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Problema Entero
MasterProb = 77073

fo1 = 47850
fo2 = 29223

x[j] [*] :=
 45  1
 70  1
 71  1
 94  1
100  1
134  1
149  1
151  1
160  1
239  1
256  1
269  1
278  1
295  1
313  1
315  1
324  1
331  1
340  1
343  1
;

aa[i,j] [*,*]
:    45  70  71  94 100 134 149 151 160 239 256 269 278 295 313 315 324 331 340 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
22    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
24    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
33    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
38    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
43    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
45    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
60    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
64    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
70    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
83    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
88    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   343    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    1
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    1
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    1
85    0
86    0
87    0
88    0
89    1
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    1
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 4  1
 9  1
10  1
11  1
12  1
13  1
14  1
17  1
26  1
27  1
28  1
35  1
39  1
41  1
46  1
49  1
55  1
56  1
58  1
66  1
68  1
74  1
76  1
78  1
79  1
90  1
93  1
95  1
99  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
45    1       0       0       0
70    1       0       0       0
71    1       0       0       0
94    1       0       0       0
100   1       0       0       0
134   1     880     880       0
149   1    4180    4180       0
151   1     880     880       0
160   1    2145    2145       0
239   1    1595    1595       0
256   1    3300    3300       0
269   1    3520    3520       0
278   1    3905    3905       0
295   1    3795    3795       0
313   1    4070    4070       0
315   1    3630    3630       0
324   1    4730    4730       0
331   1    4180    4180       0
340   1    3355    3355       0
343   1    3685    3685       0
;

