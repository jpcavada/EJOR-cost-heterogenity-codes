Iter 78
MasterProb = 47712.7

s [*] :=
1  21
2  30
3  31
4  58
5  62
;

SubProb = -2614
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 79
MasterProb = 47103.1

s [*] :=
1  71
2  23
3  17
4  47
5  54
;

SubProb = -3007.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 80
MasterProb = 46903

s [*] :=
1  71
2  23
3   3
4  38
5  67
;

SubProb = -3022
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 81
MasterProb = 46398.3

s [*] :=
1  62
2   9
3  36
4  22
5  78
;

SubProb = -2037
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 82
MasterProb = 45893.3

s [*] :=
1  32
2  60
3  65
4  56
5   1
;

SubProb = -1826.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 83
MasterProb = 45756.1

s [*] :=
1   1
2  33
3  61
4  47
5  62
;

SubProb = -2517.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 84
MasterProb = 45351

s [*] :=
1  28
2  34
3   8
4  54
5  36
;

SubProb = -1275.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 85
MasterProb = 45131.8

s [*] :=
1   9
2  17
3  52
4  28
5  71
;

SubProb = -1115
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 86
MasterProb = 45035

s [*] :=
1  46
2  56
3  48
4  24
5  52
;

SubProb = -2543
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 87
MasterProb = 44508.7

s [*] :=
1   6
2  24
3  23
4  72
5  57
;

SubProb = -326.708
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 88
MasterProb = 44499.8

s [*] :=
1  71
2  23
3  32
4  50
5   6
;

SubProb = -769.38
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 89
MasterProb = 44447.8

s [*] :=
1  23
2  71
3  62
4  57
5  47
;

SubProb = -1204.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 90
MasterProb = 44219.8

s [*] :=
1  62
2  61
3  30
4  47
5  42
;

SubProb = -2067.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 91
MasterProb = 43820

s [*] :=
1  60
2  39
3   3
4  15
5  75
;

SubProb = -446.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 92
MasterProb = 43771.5

s [*] :=
1  26
2   8
3  58
4  38
5  33
;

SubProb = -766
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 93
MasterProb = 43771.4

s [*] :=
1   1
2  11
3  21
4  73
5  57
;

SubProb = -268.989
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 94
MasterProb = 43769.8

s [*] :=
1  75
2  28
3  61
4  33
5  21
;

SubProb = -1133.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 95
MasterProb = 43546.2

s [*] :=
1  29
2  28
3  52
4  36
5  59
;

SubProb = -892.087
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 96
MasterProb = 43459.3

s [*] :=
1  64
2  45
3  31
4  52
5  14
;

SubProb = -1014.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 97
MasterProb = 43436.1

s [*] :=
1  47
2  56
3   8
4  57
5  25
;

SubProb = -762.448
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 98
MasterProb = 43328

s [*] :=
1  21
2  63
3  37
4  28
5  78
;

SubProb = -818.379
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 99
MasterProb = 43286.9

s [*] :=
1   1
2  57
3  52
4   7
5   8
;

SubProb = -595.669
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 100
MasterProb = 43175.2

s [*] :=
1  75
2  48
3  36
4  54
5  35
;

SubProb = -971.862
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 101
MasterProb = 42870.8

s [*] :=
1  37
2  64
3  29
4  57
5  52
;

SubProb = -248.368
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 102
MasterProb = 42860.5

s [*] :=
1   6
2   4
3   3
4  39
5  51
;

SubProb = -1703.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2420

Iter 103
MasterProb = 42609.8

s [*] :=
1  39
2  19
3  30
4  29
5   7
;

SubProb = -880.185
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 104
MasterProb = 42374.7

s [*] :=
1  45
2  25
3  41
4   7
5  59
;

SubProb = -523.389
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 105
MasterProb = 42335.3

s [*] :=
1  50
2  52
3  57
4   7
5  78
;

SubProb = -379.008
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 106
MasterProb = 42328.8

s [*] :=
1  34
2  35
3  78
4  79
5  80
;

SubProb = -484.138
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 107
MasterProb = 42181.1

s [*] :=
1  21
2  64
3  14
4  42
5  15
;

SubProb = -1070.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 108
MasterProb = 42011.5

s [*] :=
1  26
2  63
3   7
4  19
5  28
;

SubProb = -362.871
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 109
MasterProb = 41975.8

s [*] :=
1   9
2  17
3  52
4  28
5  71
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Problema Entero
MasterProb = 45062

fo1 = 29040
fo2 = 16022

x[j] [*] :=
  6  1
  8  1
 24  1
 40  1
 46  1
 48  1
 50  1
 52  1
 57  1
 80  1
109  1
112  1
114  1
115  1
122  1
138  1
146  1
156  1
164  1
172  1
;

aa[i,j] [*,*]
:    6   8  24  40  46  48  50  52  57  80 109 112 114 115 122 138 146 156 164 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
4    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
8    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
10   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
18   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
22   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
24   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
27   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
30   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
31   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
38   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
39   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
40   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
42   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
44   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
46   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
48   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
50   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
57   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
60   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
64   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:  172    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   1
35   1
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
;

vi[i] [*] :=
 2  1
 5  1
10  1
11  1
12  1
13  1
16  1
25  1
44  1
55  1
64  1
65  1
66  1
68  1
69  1
70  1
72  1
73  1
74  1
75  1
76  1
77  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
6     1       0       0       0
8     1       0       0       0
24    1       0       0       0
40    1       0       0       0
46    1       0       0       0
48    1       0       0       0
50    1       0       0       0
52    1       0       0       0
57    1       0       0       0
80    1    2805    2805       0
109   1    3410    3410       0
112   1     660     660       0
114   1    2805    2805       0
115   1    3520    3520       0
122   1    1760    1760       0
138   1    3520    3520       0
146   1    3410    3410       0
156   1    3795    3795       0
164   1    2695    2695       0
172   1     660     660       0
;

