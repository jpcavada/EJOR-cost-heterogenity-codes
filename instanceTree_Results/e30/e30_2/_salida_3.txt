Iter 102
MasterProb = 70725

s [*] :=
1   5
2  52
3  91
4  81
5  80
;

SubProb = -10734.6
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 103
MasterProb = 69516.1

s [*] :=
1  81
2  26
3  23
4  51
5  56
;

SubProb = -3745.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 104
MasterProb = 67715.1

s [*] :=
1   2
2  33
3  98
4  40
5  80
;

SubProb = -4444.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 105
MasterProb = 66641.8

s [*] :=
1  40
2  61
3  97
4  48
5  91
;

SubProb = -2628.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 106
MasterProb = 66318.7

s [*] :=
1  29
2  12
3  65
4  16
5  77
;

SubProb = -1182.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 107
MasterProb = 66125.8

s [*] :=
1  83
2  98
3  97
4  84
5  91
;

SubProb = -2937.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 108
MasterProb = 64546

s [*] :=
1  84
2  18
3  80
4   8
5  36
;

SubProb = -1637.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 109
MasterProb = 64247.2

s [*] :=
1  25
2   6
3  73
4  83
5  59
;

SubProb = -2396.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 110
MasterProb = 63471.8

s [*] :=
1  13
2  62
3  71
4  74
5  97
;

SubProb = -1443.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 63336.7

s [*] :=
1  61
2   2
3   8
4  37
5  86
;

SubProb = -1627.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 112
MasterProb = 63109.6

s [*] :=
1  43
2   6
3  85
4  12
5  91
;

SubProb = -2339.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 113
MasterProb = 62436.2

s [*] :=
1  32
2  64
3  40
4  86
5  92
;

SubProb = -581.664
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 114
MasterProb = 62408.4

s [*] :=
1  12
2  34
3  43
4  67
5  98
;

SubProb = -663.397
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 115
MasterProb = 62319.8

s [*] :=
1  56
2  44
3  54
4  76
5  48
;

SubProb = -2211.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 116
MasterProb = 62046.1

s [*] :=
1  36
2  29
3  92
4  37
5  80
;

SubProb = -886.455
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 117
MasterProb = 61924.3

s [*] :=
1  91
2  88
3   5
4  67
5  38
;

SubProb = -2060.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 118
MasterProb = 61370.5

s [*] :=
1  26
2  51
3  97
4  37
5  52
;

SubProb = -1612.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 119
MasterProb = 61182.8

s [*] :=
1  59
2  62
3  81
4  85
5  21
;

SubProb = -2093.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 120
MasterProb = 60723.2

s [*] :=
1  54
2  84
3  77
4  75
5  32
;

SubProb = -919.631
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 121
MasterProb = 60633.2

s [*] :=
1  71
2   1
3   3
4  82
5  92
;

SubProb = 167.298
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Problema Entero
MasterProb = 67261

fo1 = 45320
fo2 = 21941

x[j] [*] :=
 12  1
 20  1
 63  1
 79  1
 81  1
 98  1
111  1
123  1
144  1
145  1
193  1
196  1
221  1
224  1
257  1
258  1
259  1
262  1
264  1
266  1
;

aa[i,j] [*,*]
:    12  20  63  79  81  98 111 123 144 145 193 196 221 224 257 258 259 262 264 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
7     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
12    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
26    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
33    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
49    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
57    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
60    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
63    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
65    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
75    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
77    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
81    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
98    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   266    :=
1     0
2     0
3     0
4     0
5     1
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    1
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    1
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    1
89    0
90    0
91    1
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
;

vi[i] [*] :=
  1  1
  3  1
 14  1
 15  1
 19  1
 30  1
 35  1
 39  1
 41  1
 42  1
 45  1
 53  1
 55  1
 58  1
 68  1
 69  1
 70  1
 72  1
 82  1
 85  1
 87  1
 89  1
 90  1
 93  1
 94  1
 95  1
 96  1
 99  1
100  1
101  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
12    1       0       0       0
20    1       0       0       0
63    1       0       0       0
79    1       0       0       0
81    1       0       0       0
98    1       0       0       0
111   1    3135    3135       0
123   1    3520    3520       0
144   1    3795    3795       0
145   1    3630    3630       0
193   1    3850    3850       0
196   1    2805    2805       0
221   1     825     825       0
224   1    2750    2750       0
257   1    3355    3355       0
258   1    3795    3795       0
259   1    3520    3520       0
262   1    2860    2860       0
264   1    3960    3960       0
266   1    3520    3520       0
;

