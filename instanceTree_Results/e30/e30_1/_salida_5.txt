Iter 78
MasterProb = 46921.2

s [*] :=
1  34
2  72
3  68
4  75
5  74
;

SubProb = -8813.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 79
MasterProb = 44564

s [*] :=
1   1
2  23
3  52
4  31
5   6
;

SubProb = -2000
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 80
MasterProb = 44304

s [*] :=
1  37
2   8
3  33
4  68
5  51
;

SubProb = -778
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 81
MasterProb = 44304

s [*] :=
1  25
2  62
3  75
4  37
5  46
;

SubProb = -1780
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 82
MasterProb = 44058.3

s [*] :=
1  74
2  59
3  72
4  31
5  23
;

SubProb = -2087.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 83
MasterProb = 43640.3

s [*] :=
1  74
2  56
3  22
4  42
5   6
;

SubProb = -2020.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 84
MasterProb = 43547.7

s [*] :=
1  65
2  72
3  21
4  48
5  36
;

SubProb = -2147
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 85
MasterProb = 43243.4

s [*] :=
1  29
2  30
3  28
4  21
5  23
;

SubProb = -884.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 86
MasterProb = 43199

s [*] :=
1  15
2   3
3   1
4  21
5  59
;

SubProb = -1306.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 87
MasterProb = 43143.4

s [*] :=
1  30
2   1
3  62
4  61
5  38
;

SubProb = -877.355
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 88
MasterProb = 43111.7

s [*] :=
1  50
2   4
3  32
4  78
5  79
;

SubProb = -775
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1210

Iter 89
MasterProb = 42874.4

s [*] :=
1  24
2  35
3  31
4  58
5  62
;

SubProb = -2210.74
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 90
MasterProb = 42232.1

s [*] :=
1   3
2  51
3  68
4  38
5   8
;

SubProb = -1716.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 91
MasterProb = 42000

s [*] :=
1  65
2  18
3  68
4   8
5  75
;

SubProb = -593.754
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 92
MasterProb = 41968.5

s [*] :=
1   9
2  73
3  28
4  27
5  36
;

SubProb = -2419
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 93
MasterProb = 41627.6

s [*] :=
1  29
2  46
3  62
4  65
5  60
;

SubProb = -1320.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 94
MasterProb = 41471.1

s [*] :=
1  49
2  57
3  63
4  59
5  47
;

SubProb = -1827.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 95
MasterProb = 41146.6

s [*] :=
1  29
2  57
3  59
4  61
5  75
;

SubProb = -466.496
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 96
MasterProb = 41068.5

s [*] :=
1  52
2  35
3  28
4  45
5   7
;

SubProb = -1578.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 97
MasterProb = 40712.1

s [*] :=
1  29
2  30
3   8
4  27
5  42
;

SubProb = -921.672
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 98
MasterProb = 40599.6

s [*] :=
1  40
2  23
3  20
4  42
5  63
;

SubProb = -302.915
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 99
MasterProb = 40581.5

s [*] :=
1  22
2  60
3  11
4  72
5  42
;

SubProb = -202.265
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 100
MasterProb = 40580.2

s [*] :=
1  20
2  40
3  31
4  21
5  34
;

SubProb = -171
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 101
MasterProb = 40580.1

s [*] :=
1  61
2  30
3   1
4   8
5  28
;

SubProb = -726
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 102
MasterProb = 40479.2

s [*] :=
1   9
2  21
3  38
4  68
5  35
;

SubProb = -819.225
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 103
MasterProb = 40457.8

s [*] :=
1  19
2  65
3  41
4   1
5  34
;

SubProb = -210.409
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 104
MasterProb = 40443.6

s [*] :=
1   1
2  36
3   6
4  42
5  68
;

SubProb = -519
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 105
MasterProb = 40419.1

s [*] :=
1  17
2  74
3   7
4  31
5  65
;

SubProb = -546.937
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 106
MasterProb = 40374.8

s [*] :=
1  18
2  32
3  78
4  79
5  80
;

SubProb = -191.733
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 107
MasterProb = 40374.8

s [*] :=
1  56
2   8
3  14
4  65
5  52
;

SubProb = -686.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 108
MasterProb = 40337.4

s [*] :=
1  58
2  21
3  74
4  45
5  30
;

SubProb = -139.094
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 109
MasterProb = 40329.3

s [*] :=
1  22
2  57
3  24
4  53
5  65
;

SubProb = -269.977
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 110
MasterProb = 40327.5

s [*] :=
1  24
2  31
3  78
4  79
5  80
;

SubProb = 192.643
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Problema Entero
MasterProb = 42334

fo1 = 30800
fo2 = 11534

x[j] [*] :=
  6  1
 21  1
 22  1
 36  1
 40  1
 41  1
 48  1
 52  1
 80  1
113  1
114  1
115  1
122  1
131  1
140  1
144  1
154  1
159  1
160  1
167  1
;

aa[i,j] [*,*]
:    6  21  22  36  40  41  48  52  80 113 114 115 122 131 140 144 154 159 160 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
10   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
18   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
21   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
30   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
33   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
35   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
36   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
40   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
44   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
47   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
48   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
50   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
51   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
58   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
60   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
64   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
66   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
69   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:  167    :=
1    1
2    0
3    0
4    0
5    0
6    0
7    0
8    1
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   1
29   0
30   1
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   1
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
;

vi[i] [*] :=
 5  1
10  1
11  1
12  1
13  1
16  1
25  1
37  1
44  1
55  1
64  1
66  1
67  1
69  1
70  1
71  1
73  1
76  1
77  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
6     1       0       0       0
21    1       0       0       0
22    1       0       0       0
36    1       0       0       0
40    1       0       0       0
41    1       0       0       0
48    1       0       0       0
52    1       0       0       0
80    1    2805    2805       0
113   1    2915    2915       0
114   1    2805    2805       0
115   1    3520    3520       0
122   1    1760    1760       0
131   1     825     825       0
140   1     660     660       0
144   1    3355    3355       0
154   1    1210    1210       0
159   1    3630    3630       0
160   1    3520    3520       0
167   1    3795    3795       0
;

