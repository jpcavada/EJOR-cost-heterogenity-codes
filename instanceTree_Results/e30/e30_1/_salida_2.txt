Iter 123
MasterProb = 98544.7

s [*] :=
1  80
2   8
3  17
4  12
5  25
;

SubProb = -7060.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 124
MasterProb = 96757.5

s [*] :=
1  120
2  110
3   90
4   69
5   15
;

SubProb = -7275.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 125
MasterProb = 94061

s [*] :=
1    2
2   20
3    1
4   15
5  110
;

SubProb = -4505.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 126
MasterProb = 92163.9

s [*] :=
1   24
2  110
3   92
4   82
5   40
;

SubProb = -7298.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 127
MasterProb = 91387

s [*] :=
1  10
2  57
3  59
4  18
5  94
;

SubProb = -2418.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 128
MasterProb = 90880.1

s [*] :=
1  74
2  11
3   2
4   1
5  98
;

SubProb = -4215.05
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 129
MasterProb = 90115

s [*] :=
1   2
2   1
3   6
4   3
5  84
;

SubProb = -1596.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 130
MasterProb = 89900.8

s [*] :=
1   21
2   37
3   42
4  105
5   60
;

SubProb = -2217.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 131
MasterProb = 89164.2

s [*] :=
1  74
2  79
3  33
4  89
5  40
;

SubProb = -7261.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 132
MasterProb = 87913.3

s [*] :=
1  26
2   1
3   2
4  74
5  34
;

SubProb = -2738.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 133
MasterProb = 87665.8

s [*] :=
1    3
2   39
3   84
4    9
5  120
;

SubProb = -210.797
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 134
MasterProb = 87609.9

s [*] :=
1   92
2    5
3  123
4  124
5  125
;

SubProb = -3167
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 135
MasterProb = 85848.3

s [*] :=
1    1
2   31
3   25
4  108
5   84
;

SubProb = -2792.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 136
MasterProb = 85314.5

s [*] :=
1  117
2   69
3  110
4   11
5   40
;

SubProb = -4582.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 137
MasterProb = 84542.3

s [*] :=
1   66
2  110
3   75
4   65
5   72
;

SubProb = -3008.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 138
MasterProb = 84007.3

s [*] :=
1    3
2   49
3  108
4    6
5    8
;

SubProb = -2369.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 139
MasterProb = 83453

s [*] :=
1   39
2   51
3  101
4   95
5  108
;

SubProb = -3414.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 140
MasterProb = 82098.7

s [*] :=
1  33
2   2
3  30
4  74
5  38
;

SubProb = -2832.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 141
MasterProb = 81946.9

s [*] :=
1  90
2  63
3  56
4   2
5   1
;

SubProb = -639.184
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 142
MasterProb = 81886.3

s [*] :=
1    8
2  111
3   10
4   33
5   54
;

SubProb = -120.781
d = 47

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 143
MasterProb = 81882

s [*] :=
1   54
2   32
3    9
4  105
5  111
;

SubProb = -3201.05
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 144
MasterProb = 81226.1

s [*] :=
1  38
2   7
3   2
4  43
5   8
;

SubProb = -2034
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 145
MasterProb = 81073.7

s [*] :=
1  27
2   1
3  95
4  11
5  25
;

SubProb = -2006.05
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 146
MasterProb = 80935.4

s [*] :=
1   34
2   39
3   90
4   62
5  111
;

SubProb = -2000.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 147
MasterProb = 80735.6

s [*] :=
1  67
2   9
3  40
4  70
5   8
;

SubProb = -1625.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 148
MasterProb = 80585.7

s [*] :=
1   95
2   84
3   59
4  111
5   56
;

SubProb = -2604.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 149
MasterProb = 80220

s [*] :=
1   68
2   95
3  101
4   63
5   80
;

SubProb = -1679.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 150
MasterProb = 79998.1

s [*] :=
1   43
2   98
3    8
4  111
5   52
;

SubProb = -1995.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 151
MasterProb = 79655.3

s [*] :=
1  103
2   56
3  111
4   37
5   85
;

SubProb = -2043.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 152
MasterProb = 79438.2

s [*] :=
1  33
2  48
3  59
4  75
5  10
;

SubProb = -1326.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 153
MasterProb = 79361

s [*] :=
1    6
2   60
3    2
4   34
5  123
;

SubProb = -1395.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 154
MasterProb = 79202.7

s [*] :=
1  34
2  12
3  69
4  62
5  66
;

SubProb = -3317.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 155
MasterProb = 78537

s [*] :=
1  98
2  62
3  65
4  56
5  15
;

SubProb = -2614.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 156
MasterProb = 78228.3

s [*] :=
1    2
2    3
3    1
4  105
5   59
;

SubProb = -2029.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 157
MasterProb = 77680.6

s [*] :=
1  49
2  13
3   3
4  60
5  39
;

SubProb = -1340.43
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 158
MasterProb = 77522.9

s [*] :=
1    2
2   66
3    1
4  103
5  101
;

SubProb = -725.698
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 159
MasterProb = 77487.5

s [*] :=
1   53
2   96
3  101
4  123
5  124
;

SubProb = -1512.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 160
MasterProb = 77415.3

s [*] :=
1  74
2  89
3  82
4  79
5  66
;

SubProb = -2377.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 161
MasterProb = 76956.5

s [*] :=
1   25
2  101
3   60
4   79
5   14
;

SubProb = -2661.11
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 162
MasterProb = 76832.7

s [*] :=
1  110
2   73
3  123
4  124
5  125
;

SubProb = -1401.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 163
MasterProb = 76663.9

s [*] :=
1   27
2    5
3  123
4  124
5  125
;

SubProb = -1287.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 164
MasterProb = 76663.9

s [*] :=
1  69
2  74
3  25
4  95
5  40
;

SubProb = -893.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 165
MasterProb = 76625.2

s [*] :=
1    2
2   85
3  105
4    1
5    3
;

SubProb = -881.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 166
MasterProb = 76558.3

s [*] :=
1    2
2   17
3    3
4   15
5  105
;

SubProb = -1087.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 167
MasterProb = 76365.8

s [*] :=
1  117
2   96
3   89
4    1
5   79
;

SubProb = -1408.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 168
MasterProb = 76076.9

s [*] :=
1   10
2  117
3   35
4   11
5   25
;

SubProb = -1187.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 169
MasterProb = 75950.9

s [*] :=
1   31
2   64
3  105
4  123
5  124
;

SubProb = -932.243
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1210

Iter 170
MasterProb = 75821.3

s [*] :=
1  72
2  39
3  60
4  37
5  80
;

SubProb = -1822.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 171
MasterProb = 75581.5

s [*] :=
1  78
2   7
3  37
4  80
5  52
;

SubProb = -1139.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 172
MasterProb = 75570.2

s [*] :=
1   74
2    1
3   60
4  100
5   38
;

SubProb = 316.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Problema Entero
MasterProb = 83664

fo1 = 48180
fo2 = 35484

x[j] [*] :=
247  1
274  1
292  1
313  1
317  1
321  1
336  1
341  1
363  1
366  1
387  1
393  1
400  1
403  1
404  1
423  1
424  1
428  1
437  1
442  1
;

aa[i,j] [*,*]
:   247 274 292 313 317 321 336 341 363 366 387 393 400 403 404 423 424 428 437 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
6     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
7     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
9     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
13    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
38    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
53    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
55    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
64    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
65    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
67    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
70    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
85    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
114   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
115   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
116   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
117   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
118   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
119   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
120   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
121   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
122   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   442    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    1
11    1
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    1
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    1
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
113   0
114   0
115   0
116   0
117   1
118   0
119   0
120   0
121   0
122   0
;

vi[i] [*] :=
  4  1
 17  1
 19  1
 20  1
 22  1
 23  1
 28  1
 29  1
 30  1
 36  1
 41  1
 44  1
 45  1
 46  1
 49  1
 50  1
 57  1
 59  1
 76  1
 77  1
 78  1
 83  1
 86  1
 88  1
 91  1
 93  1
 94  1
 96  1
 97  1
 99  1
100  1
102  1
103  1
104  1
106  1
107  1
108  1
109  1
112  1
113  1
114  1
115  1
116  1
118  1
119  1
120  1
121  1
122  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
247   1     880     880       0
274   1     660     660       0
292   1    4235    4235       0
313   1     880     880       0
317   1     880     880       0
321   1    1760    1760       0
336   1     660     660       0
341   1    2585    2585       0
363   1    3520    3520       0
366   1    3905    3905       0
387   1     605     605       0
393   1     605     605       0
400   1    3905    3905       0
403   1    3905    3905       0
404   1    3685    3685       0
423   1    3850    3850       0
424   1    3685    3685       0
428   1    3520    3520       0
437   1     935     935       0
442   1    3520    3520       0
;

