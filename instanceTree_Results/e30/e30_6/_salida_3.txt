Iter 103
MasterProb = 69105.6

s [*] :=
1  59
2  25
3   2
4  96
5  17
;

SubProb = -3408.18
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 104
MasterProb = 68465.5

s [*] :=
1   88
2   94
3   84
4   79
5  103
;

SubProb = -2193.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 105
MasterProb = 67868.3

s [*] :=
1  67
2  33
3  21
4   5
5   6
;

SubProb = -2453.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 106
MasterProb = 67304.3

s [*] :=
1    7
2   96
3   94
4  103
5  104
;

SubProb = -1167.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2310

Iter 107
MasterProb = 66995.2

s [*] :=
1  87
2  43
3  29
4  48
5   6
;

SubProb = -1911.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 108
MasterProb = 66486.8

s [*] :=
1  25
2  56
3  44
4  93
5  74
;

SubProb = -1741.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 109
MasterProb = 66222.1

s [*] :=
1  13
2  68
3  54
4  18
5   1
;

SubProb = -1854.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 110
MasterProb = 65832.2

s [*] :=
1   18
2   54
3    2
4  103
5  104
;

SubProb = -847.739
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 111
MasterProb = 65670.6

s [*] :=
1  95
2  84
3  23
4  73
5   8
;

SubProb = -2581
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 112
MasterProb = 64782.8

s [*] :=
1  52
2  44
3  37
4  71
5  59
;

SubProb = -1701.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 113
MasterProb = 64408.2

s [*] :=
1  100
2   25
3   31
4   97
5   84
;

SubProb = -1772.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 114
MasterProb = 63702.3

s [*] :=
1  31
2  56
3  87
4  28
5  26
;

SubProb = -1177.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 115
MasterProb = 63465.2

s [*] :=
1   1
2   2
3   4
4  37
5   3
;

SubProb = -344.005
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 116
MasterProb = 63445.9

s [*] :=
1  83
2  54
3  79
4  41
5  48
;

SubProb = -1557.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 117
MasterProb = 63274.4

s [*] :=
1  76
2  13
3  18
4   8
5  64
;

SubProb = -1206.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 118
MasterProb = 63181.3

s [*] :=
1  40
2   4
3   5
4  97
5  72
;

SubProb = -777.431
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 119
MasterProb = 63106.4

s [*] :=
1  75
2  93
3  74
4  97
5  73
;

SubProb = -984.147
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 120
MasterProb = 63059.4

s [*] :=
1   2
2   3
3  44
4  80
5   1
;

SubProb = -148.689
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 121
MasterProb = 63057.1

s [*] :=
1   2
2   3
3  44
4  16
5  96
;

SubProb = -1229.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 122
MasterProb = 62965.3

s [*] :=
1   2
2  21
3   1
4   3
5  37
;

SubProb = -1029.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 123
MasterProb = 62782.3

s [*] :=
1  80
2  33
3   2
4   1
5  47
;

SubProb = -911.722
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 124
MasterProb = 62687

s [*] :=
1   12
2   51
3  103
4  104
5  105
;

SubProb = -617.594
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 125
MasterProb = 62546.5

s [*] :=
1  37
2  13
3  42
4  34
5  61
;

SubProb = -968.404
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 126
MasterProb = 62523.6

s [*] :=
1  59
2  93
3  83
4  67
5  72
;

SubProb = -2036
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 127
MasterProb = 61926.5

s [*] :=
1  16
2  95
3  87
4  83
5  26
;

SubProb = -1385.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 128
MasterProb = 61610.4

s [*] :=
1   6
2  54
3   4
4   1
5   2
;

SubProb = -403.825
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 129
MasterProb = 61607.3

s [*] :=
1   52
2  100
3  103
4  104
5  105
;

SubProb = -232.029
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 130
MasterProb = 61581.5

s [*] :=
1    4
2    3
3  100
4   61
5   96
;

SubProb = -837.939
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 131
MasterProb = 61435.2

s [*] :=
1  102
2   40
3   47
4  100
5   56
;

SubProb = -630.055
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 132
MasterProb = 61381.3

s [*] :=
1   8
2   2
3  65
4  13
5  54
;

SubProb = -334.994
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 133
MasterProb = 61350.1

s [*] :=
1   96
2   28
3   54
4  103
5  104
;

SubProb = -881.995
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 134
MasterProb = 61238.2

s [*] :=
1  49
2  23
3  87
4  47
5  13
;

SubProb = -580.048
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 135
MasterProb = 61224.9

s [*] :=
1  52
2  65
3  25
4  49
5  26
;

SubProb = -706.889
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 136
MasterProb = 61164.1

s [*] :=
1  96
2  84
3  62
4  41
5  97
;

SubProb = -1054.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 137
MasterProb = 61095.5

s [*] :=
1  51
2  38
3   8
4  32
5  56
;

SubProb = -801.717
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 138
MasterProb = 61030.6

s [*] :=
1  26
2   4
3   6
4  73
5  28
;

SubProb = -383.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 139
MasterProb = 60992.1

s [*] :=
1  43
2  97
3  77
4  66
5  68
;

SubProb = -58.3823
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 140
MasterProb = 60991.8

s [*] :=
1   9
2  41
3  86
4   7
5  38
;

SubProb = -1097.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 141
MasterProb = 60757.2

s [*] :=
1  99
2  96
3  54
4  73
5  23
;

SubProb = -374.547
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 142
MasterProb = 60754.7

s [*] :=
1  25
2  42
3  90
4  54
5  83
;

SubProb = -130.432
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 143
MasterProb = 60749.3

s [*] :=
1  87
2  18
3  97
4  38
5  74
;

SubProb = -732.944
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 144
MasterProb = 60694.2

s [*] :=
1   2
2  75
3   4
4  32
5  96
;

SubProb = -514.334
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 145
MasterProb = 60653.6

s [*] :=
1  80
2  67
3   6
4  38
5  23
;

SubProb = -573.233
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 146
MasterProb = 60639.8

s [*] :=
1   20
2    6
3  103
4  104
5  105
;

SubProb = -472.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 147
MasterProb = 60578.9

s [*] :=
1   5
2  25
3  40
4  33
5  16
;

SubProb = -1024.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 148
MasterProb = 60535

s [*] :=
1  62
2  28
3  51
4  32
5  80
;

SubProb = -581.535
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 149
MasterProb = 60481.2

s [*] :=
1  44
2  37
3  77
4   4
5  47
;

SubProb = -588.876
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 150
MasterProb = 60389.3

s [*] :=
1   65
2   25
3   66
4   77
5  100
;

SubProb = -440.088
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 151
MasterProb = 60372

s [*] :=
1  100
2   50
3   16
4   36
5   81
;

SubProb = -114.787
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 152
MasterProb = 60353.9

s [*] :=
1   36
2  100
3  103
4  104
5  105
;

SubProb = -168.291
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 153
MasterProb = 60314.8

s [*] :=
1  49
2  63
3  87
4  67
5  68
;

SubProb = -656.566
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 154
MasterProb = 60248.9

s [*] :=
1   2
2  44
3  56
4  61
5  16
;

SubProb = -302.167
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 155
MasterProb = 60227.9

s [*] :=
1  16
2  96
3   1
4  34
5  75
;

SubProb = -621.776
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 156
MasterProb = 60165.6

s [*] :=
1   2
2  22
3  44
4  80
5  33
;

SubProb = -60.9868
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 157
MasterProb = 60159.7

s [*] :=
1  26
2  13
3  84
4  90
5  80
;

SubProb = -705.694
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 158
MasterProb = 60086.2

s [*] :=
1    5
2   26
3   76
4   80
5  103
;

SubProb = -430.654
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 159
MasterProb = 60029.1

s [*] :=
1   96
2   93
3  103
4  104
5  105
;

SubProb = 202.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Problema Entero
MasterProb = 66076

fo1 = 44770
fo2 = 21306

x[j] [*] :=
  8  1
 11  1
 12  1
 21  1
 31  1
 59  1
114  1
119  1
138  1
151  1
228  1
253  1
256  1
258  1
268  1
270  1
280  1
284  1
289  1
297  1
;

aa[i,j] [*,*]
:     8  11  12  21  31  59 114 119 138 151 228 253 256 258 268 270 280 284 289 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
4     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
8     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
10    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
11    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
19    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
21    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
42    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
50    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
57    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
76    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
87    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0

:   297    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    1
29    0
30    0
31    0
32    1
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    1
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    1
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    1
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
;

vi[i] [*] :=
 14  1
 15  1
 17  1
 27  1
 30  1
 35  1
 37  1
 39  1
 45  1
 46  1
 53  1
 55  1
 58  1
 66  1
 67  1
 69  1
 70  1
 78  1
 81  1
 82  1
 83  1
 85  1
 89  1
 90  1
 91  1
 92  1
 95  1
 98  1
 99  1
101  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
8     1       0       0       0
11    1       0       0       0
12    1       0       0       0
21    1       0       0       0
31    1       0       0       0
59    1       0       0       0
114   1    3520    3520       0
119   1    3135    3135       0
138   1    3575    3575       0
151   1    2970    2970       0
228   1     880     880       0
253   1    2640    2640       0
256   1    3520    3520       0
258   1    3795    3795       0
268   1    3795    3795       0
270   1    3135    3135       0
280   1    3080    3080       0
284   1    3630    3630       0
289   1    3520    3520       0
297   1    3575    3575       0
;

