Iter 123
MasterProb = 114178

s [*] :=
1    7
2   15
3    1
4    2
5  101
;

SubProb = -14564.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 124
MasterProb = 111082

s [*] :=
1   80
2    3
3  100
4   52
5   64
;

SubProb = -2954.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 125
MasterProb = 109669

s [*] :=
1   60
2  110
3   69
4  101
5   90
;

SubProb = -10660.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 126
MasterProb = 106335

s [*] :=
1  121
2    7
3  101
4  105
5   25
;

SubProb = -6631.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 127
MasterProb = 103715

s [*] :=
1    5
2    8
3  106
4  100
5   42
;

SubProb = -5650.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 128
MasterProb = 101031

s [*] :=
1  105
2   77
3  110
4  121
5  123
;

SubProb = -6894
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 129
MasterProb = 97562.3

s [*] :=
1  115
2    2
3   79
4  121
5  123
;

SubProb = -3168.18
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 130
MasterProb = 97562.3

s [*] :=
1   33
2   13
3  108
4  105
5   30
;

SubProb = -3940.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 131
MasterProb = 96678.3

s [*] :=
1   90
2   10
3  111
4   89
5   84
;

SubProb = -3275.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 132
MasterProb = 96235.3

s [*] :=
1  12
2  25
3   3
4  74
5  67
;

SubProb = -7303.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 94375.5

s [*] :=
1   75
2  101
3   18
4  121
5   32
;

SubProb = -2532.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 134
MasterProb = 94318.7

s [*] :=
1  58
2  83
3  35
4  62
5  10
;

SubProb = -1205.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 135
MasterProb = 94272.1

s [*] :=
1  13
2  74
3   1
4  27
5  32
;

SubProb = -2677.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 136
MasterProb = 93930.5

s [*] :=
1   18
2   65
3   15
4  101
5   89
;

SubProb = -2509.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 137
MasterProb = 93715.3

s [*] :=
1   66
2   94
3  103
4  121
5  123
;

SubProb = -3032.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 138
MasterProb = 93169.3

s [*] :=
1   51
2   12
3   84
4   34
5  116
;

SubProb = -1902.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 139
MasterProb = 93087.9

s [*] :=
1   38
2  108
3  105
4   47
5    4
;

SubProb = -2534.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 140
MasterProb = 92770.8

s [*] :=
1  79
2  26
3  60
4   9
5   1
;

SubProb = -3061.44
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 141
MasterProb = 92371.7

s [*] :=
1  116
2  117
3  118
4  123
5  124
;

SubProb = -2370
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 142
MasterProb = 90771.7

s [*] :=
1   2
2  18
3  34
4   9
5  39
;

SubProb = -3246.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 143
MasterProb = 90421.2

s [*] :=
1   94
2    8
3  103
4   36
5   14
;

SubProb = -1670.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 144
MasterProb = 90167.6

s [*] :=
1   2
2  27
3   7
4   1
5  78
;

SubProb = -780.947
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 145
MasterProb = 90063

s [*] :=
1   15
2   72
3  100
4   59
5    2
;

SubProb = -1779.64
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 146
MasterProb = 89949.2

s [*] :=
1   89
2   26
3    8
4  103
5   80
;

SubProb = -5820.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 147
MasterProb = 88249.6

s [*] :=
1   25
2   84
3   40
4   30
5  108
;

SubProb = -114.802
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5445

Iter 148
MasterProb = 88245.8

s [*] :=
1   35
2   57
3   74
4  110
5    7
;

SubProb = -4107
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 149
MasterProb = 87704.4

s [*] :=
1   53
2   34
3   49
4  123
5  124
;

SubProb = -1154.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 150
MasterProb = 87456.2

s [*] :=
1  35
2  37
3  60
4  42
5  40
;

SubProb = -4691.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 151
MasterProb = 86439.7

s [*] :=
1  10
2   3
3   7
4   1
5  40
;

SubProb = -3222.71
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 152
MasterProb = 86136.4

s [*] :=
1   69
2  117
3   38
4   40
5   74
;

SubProb = -902.738
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 153
MasterProb = 86136.4

s [*] :=
1  66
2  48
3  25
4  10
5  15
;

SubProb = -94.8466
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 154
MasterProb = 86132.1

s [*] :=
1  30
2   3
3  11
4   1
5  40
;

SubProb = -1000.64
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 155
MasterProb = 86030.2

s [*] :=
1  72
2  69
3  66
4  39
5  84
;

SubProb = -1471.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 156
MasterProb = 85948.1

s [*] :=
1  118
2  121
3  123
4  124
5  125
;

SubProb = -1940.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 157
MasterProb = 85736

s [*] :=
1   10
2   15
3   37
4  106
5   36
;

SubProb = -1338.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 158
MasterProb = 85517.9

s [*] :=
1   27
2  121
3  123
4  124
5  125
;

SubProb = -729.244
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 159
MasterProb = 85344.4

s [*] :=
1   80
2    9
3  100
4   52
5  110
;

SubProb = -2457.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 160
MasterProb = 85287.5

s [*] :=
1   52
2   89
3   61
4  110
5   18
;

SubProb = -1101.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 161
MasterProb = 85210.5

s [*] :=
1   33
2  111
3   65
4   75
5   84
;

SubProb = -1236.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 162
MasterProb = 85148

s [*] :=
1    9
2   66
3    6
4  101
5   35
;

SubProb = -1224.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 163
MasterProb = 85099.8

s [*] :=
1   33
2   71
3  121
4   43
5  123
;

SubProb = -1113.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 164
MasterProb = 84939.3

s [*] :=
1   2
2  74
3  32
4  64
5   7
;

SubProb = -1676.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 165
MasterProb = 84543

s [*] :=
1    2
2   97
3   79
4  106
5  108
;

SubProb = -1782.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 166
MasterProb = 84150.7

s [*] :=
1   48
2  101
3   52
4   70
5   40
;

SubProb = -3327.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 167
MasterProb = 83872.2

s [*] :=
1  10
2  39
3  56
4  26
5   6
;

SubProb = -1457.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 168
MasterProb = 83766.4

s [*] :=
1   56
2   31
3  110
4   32
5  123
;

SubProb = -1230.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 169
MasterProb = 83590.6

s [*] :=
1  67
2  56
3  66
4  15
5  71
;

SubProb = -490.886
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 170
MasterProb = 83554.3

s [*] :=
1   65
2   11
3  116
4    7
5  100
;

SubProb = -2803.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 171
MasterProb = 83413.7

s [*] :=
1  121
2  100
3   97
4   11
5  117
;

SubProb = -1747.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 172
MasterProb = 83191.8

s [*] :=
1   31
2    7
3   60
4  110
5   90
;

SubProb = -430.401
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 173
MasterProb = 83166.5

s [*] :=
1  69
2  90
3   1
4  92
5  20
;

SubProb = -1214.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 174
MasterProb = 82948.4

s [*] :=
1  106
2   38
3   94
4   66
5    3
;

SubProb = -2144.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 175
MasterProb = 82420.7

s [*] :=
1   26
2   58
3   10
4    3
5  123
;

SubProb = -1192.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 176
MasterProb = 82350.7

s [*] :=
1   84
2   74
3    9
4  103
5  123
;

SubProb = -1750.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 177
MasterProb = 82195.8

s [*] :=
1   3
2   1
3  64
4  59
5  39
;

SubProb = -906.685
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 178
MasterProb = 82172.9

s [*] :=
1   92
2   53
3  123
4  124
5  125
;

SubProb = -1329.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 179
MasterProb = 81761.4

s [*] :=
1   70
2    5
3  123
4  124
5  125
;

SubProb = -1700.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 180
MasterProb = 81346.7

s [*] :=
1   60
2   52
3   40
4   69
5  105
;

SubProb = -1554.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 181
MasterProb = 81166.9

s [*] :=
1  100
2   96
3   84
4   15
5  105
;

SubProb = -2020.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 182
MasterProb = 80840.4

s [*] :=
1   53
2    5
3  123
4  124
5  125
;

SubProb = -685.439
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 183
MasterProb = 80660.6

s [*] :=
1   33
2   30
3  116
4  117
5   59
;

SubProb = -1403.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 184
MasterProb = 80492.8

s [*] :=
1   13
2   37
3  111
4   78
5  116
;

SubProb = -223.745
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 185
MasterProb = 80491.3

s [*] :=
1    3
2   21
3   62
4   60
5  105
;

SubProb = -410.785
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 186
MasterProb = 80476.3

s [*] :=
1   16
2   74
3  116
4   37
5  108
;

SubProb = -1978.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 187
MasterProb = 80346.4

s [*] :=
1  10
2  60
3  47
4  82
5   3
;

SubProb = -1399.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 188
MasterProb = 80279.2

s [*] :=
1   65
2   74
3   38
4  117
5   13
;

SubProb = -3147.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 189
MasterProb = 80232.6

s [*] :=
1  40
2  62
3  13
4  14
5  82
;

SubProb = -2535.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 190
MasterProb = 80192

s [*] :=
1   6
2  32
3  10
4  38
5  92
;

SubProb = -2145.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 191
MasterProb = 80093.5

s [*] :=
1  25
2  74
3   1
4  40
5   2
;

SubProb = 670.307
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Problema Entero
MasterProb = 94644

fo1 = 47545
fo2 = 47099

x[j] [*] :=
 51  1
 73  1
145  1
163  1
225  1
239  1
247  1
248  1
256  1
275  1
308  1
313  1
340  1
341  1
399  1
404  1
416  1
420  1
432  1
452  1
;

aa[i,j] [*,*]
:    51  73 145 163 225 239 247 248 256 275 308 313 340 341 399 404 416 420 432 :=
1     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
10    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
31    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
38    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
40    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
55    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
70    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
73    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
75    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
81    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
114   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
115   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
116   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
117   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
118   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
119   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
120   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
121   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
122   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   452    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    1
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    1
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
113   0
114   0
115   0
116   0
117   0
118   0
119   0
120   0
121   0
122   0
;

vi[i] [*] :=
  4  1
 16  1
 17  1
 19  1
 21  1
 22  1
 23  1
 24  1
 28  1
 29  1
 32  1
 36  1
 41  1
 43  1
 44  1
 45  1
 46  1
 47  1
 50  1
 57  1
 63  1
 64  1
 68  1
 77  1
 83  1
 86  1
 88  1
 91  1
 93  1
 94  1
 95  1
 96  1
 97  1
 98  1
 99  1
100  1
102  1
104  1
106  1
107  1
109  1
111  1
112  1
113  1
114  1
115  1
116  1
117  1
118  1
119  1
120  1
122  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
51    1       0       0         0
73    1       0       0         0
145   1    3080    3080         0
163   1    4655    4015       640
225   1    2640    2640         0
239   1    4730    4730         0
247   1     880     880         0
248   1     660     660         0
256   1    4500    3300      1200
275   1    3520    3520         0
308   1     605     605         0
313   1     880     880         0
340   1     880     880         0
341   1    2585    2585         0
399   1    4840    4840         0
404   1    4675    4675         0
416   1    3520    3520         0
420   1    2805    2805         0
432   1    1155    1155         0
452   1     935     935         0
;

