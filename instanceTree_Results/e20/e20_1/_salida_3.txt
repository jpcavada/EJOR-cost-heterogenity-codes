Iter 105
MasterProb = 77815.4

s [*] :=
1   89
2  104
3   81
4   17
5  105
;

SubProb = -4325.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 106
MasterProb = 77815.4

s [*] :=
1   61
2    2
3   31
4   25
5  100
;

SubProb = -3976.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 107
MasterProb = 76054.4

s [*] :=
1  67
2  93
3  90
4  77
5  59
;

SubProb = -8390.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 108
MasterProb = 74187.6

s [*] :=
1   90
2   48
3   98
4   81
5  105
;

SubProb = -6095
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 109
MasterProb = 70911.4

s [*] :=
1  86
2  87
3  44
4  26
5  52
;

SubProb = -2150.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5665

Iter 110
MasterProb = 70713.3

s [*] :=
1   26
2    7
3   36
4  100
5   23
;

SubProb = -3734.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 111
MasterProb = 69958.5

s [*] :=
1  24
2  23
3  99
4   8
5  48
;

SubProb = -1583.88
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 112
MasterProb = 69958.5

s [*] :=
1    5
2   99
3  105
4  106
5  107
;

SubProb = -3327.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 113
MasterProb = 68995.5

s [*] :=
1  23
2  83
3  99
4  65
5  51
;

SubProb = -1143.92
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 114
MasterProb = 68879.4

s [*] :=
1  89
2  21
3  56
4  52
5  79
;

SubProb = -2500.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 115
MasterProb = 68123.7

s [*] :=
1   1
2  38
3  18
4  81
5  43
;

SubProb = -488.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 116
MasterProb = 68123.3

s [*] :=
1  98
2  33
3  89
4  73
5  59
;

SubProb = -3653.98
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 117
MasterProb = 67706.3

s [*] :=
1  60
2  84
3  12
4  33
5  44
;

SubProb = -1631.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 118
MasterProb = 67258.9

s [*] :=
1   48
2   51
3    4
4  102
5   49
;

SubProb = -513.955
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 119
MasterProb = 67177.5

s [*] :=
1   89
2   64
3    8
4  105
5  106
;

SubProb = -1794.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Iter 120
MasterProb = 66564

s [*] :=
1  31
2  13
3  83
4   6
5  28
;

SubProb = -1673.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 121
MasterProb = 66265.5

s [*] :=
1   23
2   34
3   25
4   16
5  105
;

SubProb = -616.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 122
MasterProb = 66241.9

s [*] :=
1  33
2  77
3  58
4  72
5  74
;

SubProb = -625.802
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 123
MasterProb = 66218.9

s [*] :=
1   7
2  21
3   4
4   6
5  72
;

SubProb = -889.266
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 124
MasterProb = 66103.2

s [*] :=
1  67
2  87
3  33
4  37
5  98
;

SubProb = -644.022
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 125
MasterProb = 66095.6

s [*] :=
1   6
2  40
3  80
4  61
5  89
;

SubProb = -1320.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 126
MasterProb = 65829

s [*] :=
1  76
2  41
3  78
4  13
5  87
;

SubProb = -1321.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 127
MasterProb = 65642.3

s [*] :=
1  81
2  51
3  49
4  82
5  19
;

SubProb = -1294.55
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 128
MasterProb = 65509.8

s [*] :=
1  72
2  36
3  61
4  16
5  56
;

SubProb = -966.595
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 129
MasterProb = 65454.2

s [*] :=
1  98
2  84
3  16
4  87
5  54
;

SubProb = -1464.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 130
MasterProb = 65159.2

s [*] :=
1  29
2  73
3  79
4  90
5  37
;

SubProb = -1785.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 131
MasterProb = 64804.3

s [*] :=
1  57
2   8
3   2
4  34
5  22
;

SubProb = -49.1627
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 132
MasterProb = 64804.1

s [*] :=
1  23
2   5
3  29
4  41
5  83
;

SubProb = -827.989
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 64688.3

s [*] :=
1  48
2  27
3  43
4  82
5  51
;

SubProb = -357.739
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 64632.2

s [*] :=
1   8
2  65
3   2
4  31
5  42
;

SubProb = -889.069
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 135
MasterProb = 64614.8

s [*] :=
1   23
2   34
3   25
4   16
5  105
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Problema Entero
MasterProb = 74204

fo1 = 47015
fo2 = 27189

x[j] [*] :=
 11  1
 12  1
 59  1
 64  1
 74  1
 93  1
113  1
116  1
118  1
122  1
127  1
174  1
177  1
228  1
259  1
274  1
276  1
278  1
279  1
280  1
;

aa[i,j] [*,*]
:    11  12  59  64  74  93 113 116 118 122 127 174 177 228 259 274 276 278 279 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
11    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
20    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
30    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
38    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
50    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
52    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
56    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
66    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
74    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   280    :=
1     0
2     1
3     0
4     0
5     0
6     0
7     0
8     1
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    1
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    1
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    1
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
;

vi[i] [*] :=
  1  1
 14  1
 15  1
 17  1
 18  1
 28  1
 35  1
 41  1
 45  1
 46  1
 58  1
 62  1
 69  1
 70  1
 78  1
 83  1
 85  1
 86  1
 88  1
 91  1
 92  1
 94  1
 95  1
 96  1
 97  1
 99  1
101  1
102  1
103  1
104  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
11    1       0       0        0
12    1       0       0        0
59    1       0       0        0
64    1       0       0        0
74    1       0       0        0
93    1       0       0        0
113   1    3355    3355        0
116   1    3520    3520        0
118   1    3300    3300        0
122   1    3520    3520        0
127   1    2530    2530        0
174   1    3520    3520        0
177   1    3025    3025        0
228   1    1760    1760        0
259   1    3850    3850        0
274   1    3080    3080        0
276   1    3840    3520      320
278   1    4070    4070        0
279   1    4235    4235        0
280   1    3410    3410        0
;

