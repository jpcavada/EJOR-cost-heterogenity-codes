Iter 122
MasterProb = 102054

s [*] :=
1   1
2   7
3   3
4   2
5  34
;

SubProb = -5678.24
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 123
MasterProb = 99589.8

s [*] :=
1   94
2  109
3  118
4   90
5  105
;

SubProb = -4195.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 124
MasterProb = 97931

s [*] :=
1   25
2   15
3   72
4   18
5  117
;

SubProb = -3324.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 125
MasterProb = 97337.4

s [*] :=
1   12
2   33
3  105
4    8
5  109
;

SubProb = -6781
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 126
MasterProb = 95350.5

s [*] :=
1   20
2   58
3   54
4   38
5  106
;

SubProb = -2154.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 127
MasterProb = 94581.1

s [*] :=
1   97
2   70
3   19
4   80
5  109
;

SubProb = -2125.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 128
MasterProb = 94581.1

s [*] :=
1  101
2    3
3    2
4   90
5   94
;

SubProb = -1480.98
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 129
MasterProb = 94450.4

s [*] :=
1   60
2   80
3    6
4   42
5  110
;

SubProb = -4321.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 130
MasterProb = 92458.4

s [*] :=
1   2
2   1
3  40
4  78
5  74
;

SubProb = -3762.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 131
MasterProb = 91872.8

s [*] :=
1   74
2   39
3   13
4  117
5   12
;

SubProb = -5006.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 132
MasterProb = 90961.2

s [*] :=
1   65
2  117
3    8
4   38
5    3
;

SubProb = -3416.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 133
MasterProb = 90812.6

s [*] :=
1  45
2  42
3  60
4  15
5  79
;

SubProb = -1080.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 134
MasterProb = 90614.9

s [*] :=
1    2
2   62
3   69
4    1
5  117
;

SubProb = -3637.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 135
MasterProb = 90129.8

s [*] :=
1  56
2  62
3  74
4  59
5   5
;

SubProb = -3470.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 136
MasterProb = 89411.2

s [*] :=
1  114
2   66
3   59
4   74
5   69
;

SubProb = -3041.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 137
MasterProb = 88772.4

s [*] :=
1   36
2  106
3  117
4   11
5   27
;

SubProb = -901.979
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 138
MasterProb = 88746.9

s [*] :=
1   89
2   66
3  110
4   78
5   27
;

SubProb = -2160.49
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 139
MasterProb = 88092.9

s [*] :=
1   68
2   63
3   64
4   78
5  105
;

SubProb = -964.209
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 140
MasterProb = 88000.1

s [*] :=
1   60
2   79
3   49
4  109
5   74
;

SubProb = -2048.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 141
MasterProb = 87475.8

s [*] :=
1    8
2   72
3  101
4   51
5   65
;

SubProb = -2055.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 142
MasterProb = 87411.3

s [*] :=
1   92
2   66
3   71
4  109
5    6
;

SubProb = -1965.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5170

Iter 143
MasterProb = 87314.3

s [*] :=
1  12
2  22
3  80
4  40
5  89
;

SubProb = -1232.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 144
MasterProb = 87163.7

s [*] :=
1  105
2   79
3   19
4   64
5   14
;

SubProb = -314.78
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 145
MasterProb = 87156.6

s [*] :=
1    7
2  105
3   80
4  117
5   69
;

SubProb = -2851.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 146
MasterProb = 86946.4

s [*] :=
1  84
2  97
3  10
4  92
5  40
;

SubProb = -4027.61
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 147
MasterProb = 86440.7

s [*] :=
1   69
2    9
3   79
4  106
5   42
;

SubProb = -997.88
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 148
MasterProb = 86240.3

s [*] :=
1  22
2   3
3  34
4  95
5  25
;

SubProb = -2643.18
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 149
MasterProb = 85226.1

s [*] :=
1   65
2   62
3   30
4   60
5  115
;

SubProb = -785.016
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 150
MasterProb = 85199.7

s [*] :=
1  20
2  96
3   2
4   1
5   6
;

SubProb = -274.661
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 151
MasterProb = 85162.5

s [*] :=
1   65
2   32
3  115
4   15
5    8
;

SubProb = -2691.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 152
MasterProb = 84834.4

s [*] :=
1  106
2   89
3   51
4  109
5  115
;

SubProb = -1711.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 153
MasterProb = 84476.9

s [*] :=
1   70
2   85
3  117
4  106
5   92
;

SubProb = -2052.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 154
MasterProb = 84388.4

s [*] :=
1  35
2  10
3  60
4  38
5  82
;

SubProb = -2962.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 155
MasterProb = 84095.1

s [*] :=
1  115
2  120
3  109
4  117
5   24
;

SubProb = -306.131
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 156
MasterProb = 84076.2

s [*] :=
1  46
2  95
3   7
4  11
5  72
;

SubProb = -903.531
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 157
MasterProb = 84076.2

s [*] :=
1  38
2  11
3  28
4  98
5  67
;

SubProb = -322.581
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 158
MasterProb = 84063.2

s [*] :=
1    5
2   36
3   31
4  122
5  123
;

SubProb = -1227.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1540

Iter 159
MasterProb = 83474.1

s [*] :=
1  110
2    6
3   33
4   11
5   39
;

SubProb = -1721.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 160
MasterProb = 83267.3

s [*] :=
1   39
2  110
3   56
4   60
5   64
;

SubProb = -1107.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 161
MasterProb = 82960.6

s [*] :=
1  101
2    1
3    6
4    2
5   95
;

SubProb = -768
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 162
MasterProb = 82684.1

s [*] :=
1  15
2  92
3  85
4  51
5  62
;

SubProb = -2080.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 163
MasterProb = 82498.8

s [*] :=
1   74
2   67
3  119
4   72
5   92
;

SubProb = -1216.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 164
MasterProb = 82395.5

s [*] :=
1   98
2    1
3    9
4   65
5  122
;

SubProb = -264.481
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 165
MasterProb = 82395.5

s [*] :=
1   97
2   34
3   11
4  117
5    9
;

SubProb = -738.923
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 166
MasterProb = 82283.5

s [*] :=
1  110
2   85
3   25
4   54
5   72
;

SubProb = -1541.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 167
MasterProb = 82133

s [*] :=
1    2
2   51
3   66
4   60
5  122
;

SubProb = -482.727
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 168
MasterProb = 82130.5

s [*] :=
1   89
2   56
3  101
4   75
5   66
;

SubProb = -2446.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 169
MasterProb = 81892

s [*] :=
1   26
2  106
3  117
4   40
5   59
;

SubProb = -966.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 170
MasterProb = 81834

s [*] :=
1  109
2   89
3  100
4    8
5   72
;

SubProb = -727.083
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 171
MasterProb = 81828.6

s [*] :=
1  48
2  58
3  82
4   8
5  40
;

SubProb = -1730.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 172
MasterProb = 81751.2

s [*] :=
1  117
2   24
3   95
4   61
5  110
;

SubProb = -1247.15
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 173
MasterProb = 81559

s [*] :=
1    1
2   97
3  109
4    2
5   74
;

SubProb = -967.412
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 174
MasterProb = 81422.3

s [*] :=
1   76
2   94
3   49
4   33
5  109
;

SubProb = -483.276
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 175
MasterProb = 81287.7

s [*] :=
1  103
2  115
3   33
4   37
5  109
;

SubProb = -300.543
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 176
MasterProb = 81277

s [*] :=
1  63
2  70
3  48
4  62
5  84
;

SubProb = -769.503
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 177
MasterProb = 81257.8

s [*] :=
1  90
2  60
3  37
4  96
5  66
;

SubProb = -1415.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 178
MasterProb = 81161.5

s [*] :=
1   3
2   2
3  67
4   1
5   7
;

SubProb = 60.9555
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Problema Entero
MasterProb = 91045

fo1 = 51300
fo2 = 39745

x[j] [*] :=
 51  1
 73  1
117  1
186  1
193  1
231  1
233  1
289  1
293  1
319  1
332  1
396  1
397  1
417  1
421  1
425  1
428  1
432  1
437  1
450  1
;

aa[i,j] [*,*]
:    51  73 117 186 193 231 233 289 293 319 332 396 397 417 421 425 428 432 437 :=
1     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
6     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
11    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
13    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
33    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
37    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
39    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
43    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
61    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
66    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
75    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
114   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
115   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
116   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
117   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
118   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
119   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
120   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
121   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   450    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    1
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    1
63    1
64    0
65    0
66    0
67    0
68    0
69    0
70    1
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    1
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
113   0
114   0
115   0
116   0
117   0
118   0
119   0
120   0
121   0
;

vi[i] [*] :=
  4  1
 16  1
 17  1
 19  1
 20  1
 21  1
 23  1
 24  1
 28  1
 41  1
 44  1
 46  1
 47  1
 49  1
 50  1
 52  1
 57  1
 58  1
 68  1
 76  1
 77  1
 78  1
 81  1
 83  1
 86  1
 88  1
 91  1
 93  1
 95  1
 96  1
 97  1
 98  1
 99  1
100  1
101  1
102  1
103  1
104  1
107  1
108  1
110  1
111  1
112  1
113  1
114  1
116  1
120  1
121  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
51    1       0       0        0
73    1       0       0        0
117   1       0       0        0
186   1    3905    3905        0
193   1    1155    1155        0
231   1    3355    3355        0
233   1    3520    3520        0
289   1     605     605        0
293   1     880     880        0
319   1     605     605        0
332   1    3685    3685        0
396   1    3975    3575      400
397   1    4235    4235        0
417   1    4180    4180        0
421   1    3710    3630       80
425   1    3850    3850        0
428   1    3630    3630        0
432   1    1540    1540        0
437   1    4180    4180        0
450   1    4290    4290        0
;

