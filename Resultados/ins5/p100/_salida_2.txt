Iter 105
MasterProb = 237697

s [*] :=
1  103
2  101
3   74
4  104
5  102
;

SubProb = -151076
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 106
MasterProb = 160133

s [*] :=
1  103
2  100
3  102
4  104
5   99
;

SubProb = -70937.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 107
MasterProb = 156804

s [*] :=
1  103
2   99
3  102
4  100
5  101
;

SubProb = -62169.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 108
MasterProb = 156804

s [*] :=
1   99
2  100
3  102
4  104
5  101
;

SubProb = -61729.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 109
MasterProb = 156804

s [*] :=
1  104
2   99
3  103
4  100
5  101
;

SubProb = -61234.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 110
MasterProb = 142600

s [*] :=
1   98
2   43
3   74
4   55
5  100
;

SubProb = -45200.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 132038

s [*] :=
1  54
2  98
3  87
4  96
5  99
;

SubProb = -32887.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 112
MasterProb = 121112

s [*] :=
1  96
2  94
3  97
4  98
5  95
;

SubProb = -26388
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 113
MasterProb = 115089

s [*] :=
1  43
2  99
3  74
4  55
5  97
;

SubProb = -33894.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 114
MasterProb = 108843

s [*] :=
1   95
2  100
3   31
4   54
5   53
;

SubProb = -28052.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 115
MasterProb = 104049

s [*] :=
1  49
2  94
3  33
4  32
5  96
;

SubProb = -12487.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 116
MasterProb = 102268

s [*] :=
1  89
2  95
3  93
4  94
5  49
;

SubProb = -15815.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 117
MasterProb = 100667

s [*] :=
1  92
2  55
3  53
4  97
5  86
;

SubProb = -18674.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 118
MasterProb = 93608.8

s [*] :=
1  103
2   52
3   26
4   93
5   88
;

SubProb = -5965.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 119
MasterProb = 91837

s [*] :=
1  69
2  90
3  97
4  96
5  92
;

SubProb = -18004
d = 27

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 120
MasterProb = 89085.8

s [*] :=
1  97
2  87
3  94
4  31
5  92
;

SubProb = -18003.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 121
MasterProb = 88011.8

s [*] :=
1   17
2   93
3  104
4   55
5   92
;

SubProb = -8073.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 122
MasterProb = 87461.7

s [*] :=
1  66
2  21
3  34
4  81
5  45
;

SubProb = -2188.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 123
MasterProb = 87217

s [*] :=
1  43
2  21
3  71
4  28
5  57
;

SubProb = -8998.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 124
MasterProb = 85573.4

s [*] :=
1  41
2  55
3  31
4  61
5  89
;

SubProb = -5323.5
d = 107

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 125
MasterProb = 85312.7

s [*] :=
1  55
2  31
3  91
4  41
5  61
;

SubProb = -8515.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 126
MasterProb = 84119.7

s [*] :=
1  61
2  92
3  86
4  91
5  98
;

SubProb = -10015.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 127
MasterProb = 83458.2

s [*] :=
1  87
2  17
3  15
4  86
5  97
;

SubProb = -7734.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 128
MasterProb = 82694

s [*] :=
1  73
2  20
3  54
4  63
5  69
;

SubProb = -3606.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 129
MasterProb = 82607.3

s [*] :=
1  91
2  77
3  38
4  24
5  25
;

SubProb = -4825.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 130
MasterProb = 82035.4

s [*] :=
1  71
2  52
3  99
4  53
5  91
;

SubProb = -4428.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 131
MasterProb = 81601.8

s [*] :=
1  41
2  54
3  80
4  91
5  72
;

SubProb = -1317.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 132
MasterProb = 81565.4

s [*] :=
1  16
2  36
3  90
4  13
5  10
;

SubProb = -1180.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 133
MasterProb = 81523.1

s [*] :=
1  23
2  40
3  15
4  66
5  22
;

SubProb = -1227.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 134
MasterProb = 81313

s [*] :=
1    9
2   78
3   93
4  103
5   63
;

SubProb = -1362.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 135
MasterProb = 81221.3

s [*] :=
1  100
2   10
3   33
4   87
5  104
;

SubProb = -3415.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 136
MasterProb = 80819.1

s [*] :=
1  101
2   40
3   12
4   93
5   31
;

SubProb = -10901.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 137
MasterProb = 80721

s [*] :=
1   63
2   82
3   45
4   93
5  102
;

SubProb = -10305.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 138
MasterProb = 80487.2

s [*] :=
1  103
2   29
3  100
4   91
5   97
;

SubProb = -4745.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 139
MasterProb = 80221.5

s [*] :=
1  91
2  95
3  24
4   8
5  90
;

SubProb = -1272.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 140
MasterProb = 80175

s [*] :=
1  34
2  92
3  75
4   7
5  97
;

SubProb = -1215.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 141
MasterProb = 80150.3

s [*] :=
1  96
2  86
3  91
4  80
5  99
;

SubProb = -700.971
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 142
MasterProb = 80131.2

s [*] :=
1  25
2  82
3  70
4  35
5  49
;

SubProb = -3732.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 143
MasterProb = 79989.2

s [*] :=
1  37
2   6
3  58
4  20
5  83
;

SubProb = -1647.68
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 144
MasterProb = 79770.5

s [*] :=
1  43
2  44
3  83
4  51
5   9
;

SubProb = -2277.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 145
MasterProb = 79590

s [*] :=
1   26
2  103
3   27
4   83
5   73
;

SubProb = -2735.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 146
MasterProb = 79391.2

s [*] :=
1  79
2  62
3  45
4  52
5  40
;

SubProb = -594.412
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 147
MasterProb = 79375.7

s [*] :=
1  92
2  95
3  89
4  29
5  70
;

SubProb = -3261.63
d = 33

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 148
MasterProb = 79068.6

s [*] :=
1  83
2  72
3  21
4  64
5  19
;

SubProb = -1231.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 149
MasterProb = 78888.4

s [*] :=
1  32
2  28
3  75
4  31
5  40
;

SubProb = -2226.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 150
MasterProb = 78696.8

s [*] :=
1  70
2  37
3  54
4  42
5   8
;

SubProb = -2450.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 151
MasterProb = 78268.2

s [*] :=
1  25
2  31
3  72
4  42
5  26
;

SubProb = -1994.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 152
MasterProb = 78176.7

s [*] :=
1  55
2  70
3  20
4  58
5  64
;

SubProb = -136.179
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 153
MasterProb = 78172.8

s [*] :=
1   25
2  101
3   42
4  105
5  106
;

SubProb = -31.3523
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 154
MasterProb = 78172.4

s [*] :=
1  83
2  15
3  42
4  18
5  16
;

SubProb = -559.523
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 155
MasterProb = 78156.2

s [*] :=
1  68
2  95
3  57
4   9
5  96
;

SubProb = -3049.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 156
MasterProb = 77895.6

s [*] :=
1   21
2   76
3   25
4  101
5   43
;

SubProb = -2504.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 157
MasterProb = 77696.3

s [*] :=
1  30
2  75
3  10
4  15
5  88
;

SubProb = -1861.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 158
MasterProb = 77619.2

s [*] :=
1  46
2  99
3  60
4  12
5  83
;

SubProb = -1586.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 159
MasterProb = 77469.7

s [*] :=
1  44
2  85
3  99
4  63
5  16
;

SubProb = -1364.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 160
MasterProb = 77390.1

s [*] :=
1  48
2  38
3  19
4  83
5  25
;

SubProb = -485.419
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 161
MasterProb = 77335.2

s [*] :=
1  20
2  40
3  46
4  16
5  87
;

SubProb = -1400.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 162
MasterProb = 77266.8

s [*] :=
1   98
2   90
3  105
4  106
5  107
;

SubProb = 365.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 137881

fo1 = 71130
fo2 = 66751

x[j] [*] :=
100  1
147  1
161  1
169  1
188  1
196  1
239  1
242  1
262  1
272  1
289  1
293  1
360  1
362  1
371  1
379  1
385  1
390  1
414  1
426  1
;

aa[i,j] [*,*]
:   100 147 161 169 188 196 239 242 262 272 289 293 360 362 371 379 385 390 414 :=
1     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
8     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
9     0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
14    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
19    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
24    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
35    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
41    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
44    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
50    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
57    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
68    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
76    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
80    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
85    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
88    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
90    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
100   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0

:   426    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    1
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    1
56    0
57    0
58    1
59    0
60    0
61    0
62    0
63    0
64    1
65    0
66    0
67    0
68    0
69    0
70    1
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
;

vi[i] [*] :=
 3  1
 5  1
10  1
12  1
15  1
21  1
27  1
28  1
29  1
47  1
51  1
91  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
100   1       0       0         0
147   1    3575    3575         0
161   1    4235    4235         0
169   1    3905    3905         0
188   1    4235    4235         0
196   1    5460    4180      1280
239   1    2860    2860         0
242   1    3520    3520         0
262   1    4235    4235         0
272   1     605     605         0
289   1    4070    4070         0
293   1    3740    3740         0
360   1    1870    1870         0
362   1    4125    4125         0
371   1    3520    3520         0
379   1    4290    4290         0
385   1    4070    4070         0
390   1    3795    3795         0
414   1    4070    4070         0
426   1    4950    4950         0
;

