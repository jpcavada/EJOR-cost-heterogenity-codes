Iter 101
MasterProb = 183015

s [*] :=
1  40
2  43
3   7
4  67
5  71
;

SubProb = -47021.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 102
MasterProb = 168772

s [*] :=
1  43
2  70
3  57
4  33
5  37
;

SubProb = -36149
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 103
MasterProb = 163679

s [*] :=
1   71
2   83
3  101
4  102
5  103
;

SubProb = -14897.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 104
MasterProb = 159050

s [*] :=
1   1
2   2
3   7
4  99
5  72
;

SubProb = -3777.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 105
MasterProb = 158090

s [*] :=
1  62
2  77
3   7
4  58
5  88
;

SubProb = -4042.47
d = 42

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 106
MasterProb = 157773

s [*] :=
1  68
2  63
3  92
4   7
5  71
;

SubProb = -18719.1
d = 67

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 107
MasterProb = 155094

s [*] :=
1  83
2   4
3  56
4  90
5  15
;

SubProb = -14597
d = 33

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 108
MasterProb = 150630

s [*] :=
1   42
2   26
3   95
4  101
5  102
;

SubProb = -3824.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1870

Iter 109
MasterProb = 150398

s [*] :=
1  50
2  69
3  45
4  35
5  83
;

SubProb = -10721.9
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 110
MasterProb = 149531

s [*] :=
1  34
2  39
3  54
4  52
5  70
;

SubProb = -10971.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 111
MasterProb = 146691

s [*] :=
1   99
2   78
3   72
4  101
5  102
;

SubProb = -13714.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 112
MasterProb = 143584

s [*] :=
1  67
2  75
3  36
4  32
5  18
;

SubProb = -14519.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 113
MasterProb = 142069

s [*] :=
1  27
2  55
3  71
4  49
5  83
;

SubProb = -13759.5
d = 42

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 114
MasterProb = 142037

s [*] :=
1  25
2  26
3  87
4  51
5  88
;

SubProb = -12269
d = 69

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 115
MasterProb = 140189

s [*] :=
1   96
2   92
3  101
4  102
5  103
;

SubProb = -4033.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1485

Iter 116
MasterProb = 139721

s [*] :=
1  56
2  54
3  60
4  11
5  23
;

SubProb = -6763.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 117
MasterProb = 138878

s [*] :=
1   68
2  100
3   26
4  101
5  102
;

SubProb = -11858
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 118
MasterProb = 135672

s [*] :=
1  24
2  80
3   5
4   3
5  92
;

SubProb = -3420.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 119
MasterProb = 135371

s [*] :=
1  82
2   4
3  39
4  94
5  26
;

SubProb = -7788.84
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 120
MasterProb = 134138

s [*] :=
1  92
2  63
3  14
4  51
5  25
;

SubProb = -2071.58
d = 37

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 121
MasterProb = 133923

s [*] :=
1  41
2  57
3  20
4  28
5  96
;

SubProb = -3610.4
d = 58

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 122
MasterProb = 133669

s [*] :=
1  72
2  97
3  37
4  29
5  58
;

SubProb = -9331.54
d = 76

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 123
MasterProb = 131985

s [*] :=
1   53
2   26
3   95
4   58
5  101
;

SubProb = -5764.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 124
MasterProb = 131415

s [*] :=
1  32
2  45
3  56
4  61
5  31
;

SubProb = -4014.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 125
MasterProb = 131361

s [*] :=
1   68
2   95
3   83
4   11
5  101
;

SubProb = -6967.11
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 126
MasterProb = 130272

s [*] :=
1  84
2  27
3  22
4  35
5  51
;

SubProb = -6337.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 127
MasterProb = 129940

s [*] :=
1  17
2  19
3  83
4  81
5  75
;

SubProb = -6136.92
d = 26

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 128
MasterProb = 129714

s [*] :=
1   99
2  100
3  101
4  102
5  103
;

SubProb = -1603.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 129
MasterProb = 129671

s [*] :=
1   34
2   94
3   95
4  101
5  102
;

SubProb = -3418.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2420

Iter 130
MasterProb = 129587

s [*] :=
1  100
2   73
3    6
4   10
5  101
;

SubProb = -4492.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 131
MasterProb = 128002

s [*] :=
1  76
2  79
3  52
4  19
5  11
;

SubProb = -4262.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 132
MasterProb = 127503

s [*] :=
1  79
2  47
3  88
4  26
5  17
;

SubProb = -6199.71
d = 28

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 133
MasterProb = 126851

s [*] :=
1  21
2  33
3  66
4  97
5  34
;

SubProb = -2809.33
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 134
MasterProb = 126760

s [*] :=
1  78
2  17
3   1
4  97
5  18
;

SubProb = -3064.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 135
MasterProb = 126489

s [*] :=
1  94
2  32
3  19
4  30
5  21
;

SubProb = -2000.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 136
MasterProb = 126207

s [*] :=
1  76
2  81
3  36
4  27
5  69
;

SubProb = -5826.25
d = 27

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 137
MasterProb = 125388

s [*] :=
1  32
2  20
3  80
4  76
5  85
;

SubProb = -4022.69
d = 44

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 138
MasterProb = 125144

s [*] :=
1  42
2  57
3  45
4  31
5  44
;

SubProb = -3369.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 139
MasterProb = 124645

s [*] :=
1  13
2  77
3  16
4  91
5  80
;

SubProb = -3851.23
d = 49

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 140
MasterProb = 124207

s [*] :=
1   72
2   93
3   90
4  101
5  102
;

SubProb = -5021.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 141
MasterProb = 123676

s [*] :=
1  100
2   96
3  101
4  102
5  103
;

SubProb = -1989.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 142
MasterProb = 123324

s [*] :=
1  95
2  20
3  47
4  16
5  31
;

SubProb = -5162.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 143
MasterProb = 122794

s [*] :=
1  44
2  24
3  26
4  67
5  84
;

SubProb = -6582.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 144
MasterProb = 122105

s [*] :=
1  97
2  44
3  18
4  17
5  42
;

SubProb = -4988.28
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 145
MasterProb = 120722

s [*] :=
1  100
2   56
3   74
4  101
5  102
;

SubProb = -4041.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 146
MasterProb = 120477

s [*] :=
1  33
2  34
3  79
4  59
5  44
;

SubProb = -2142.12
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 147
MasterProb = 120314

s [*] :=
1  43
2  80
3  13
4  18
5  90
;

SubProb = -5992.07
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 148
MasterProb = 119326

s [*] :=
1   96
2   82
3  101
4  102
5  103
;

SubProb = 2269.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Problema Entero
MasterProb = 240248

fo1 = 109710
fo2 = 130538

x[j] [*] :=
 82  1
 92  1
145  1
161  1
165  1
170  1
172  1
176  1
178  1
273  1
284  1
294  1
298  1
301  1
309  1
313  1
325  1
327  1
330  1
336  1
;

aa[i,j] [*,*]
:    82  92 145 161 165 170 172 176 178 273 284 294 298 301 309 313 325 327 330 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
2     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
12    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
22    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
30    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
35    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
38    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
44    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
50    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
51    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
53    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
56    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
59    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
60    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
63    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
69    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
74    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
80    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
82    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
84    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
89    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
92    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
96    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
98    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0

:   336    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    1
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    1
91    0
92    0
93    1
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 3  1
 5  1
 6  1
 8  1
 9  1
10  1
15  1
20  1
25  1
28  1
36  1
40  1
42  1
46  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
82    1        0       0         0
92    1        0       0         0
145   1     4070    4070         0
161   1     8940    4620      4320
165   1     4290    4290         0
170   1     7315    3795      3520
172   1    14815    4895      9920
176   1     6370    3410      2960
178   1     9750    4950      4800
273   1    12680    3960      8720
284   1     3520    3520         0
294   1     4235    4235         0
298   1     4840    4840         0
301   1     7595    4235      3360
309   1     7320    3960      3360
313   1     1760    1760         0
325   1     2420    2420         0
327   1     4070    4070         0
330   1     3685    3685         0
336   1     2035    2035         0
;

