Iter 101
MasterProb = 220732

s [*] :=
1  70
2  71
3  37
4   9
5  63
;

SubProb = -64689.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 102
MasterProb = 198269

s [*] :=
1   92
2   70
3  101
4  102
5  103
;

SubProb = -6632.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 103
MasterProb = 197665

s [*] :=
1  71
2  83
3  82
4   7
5  92
;

SubProb = -60520.8
d = 149

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 104
MasterProb = 183039

s [*] :=
1  68
2  43
3  15
4  49
5  83
;

SubProb = -40221.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 105
MasterProb = 173358

s [*] :=
1   9
2  79
3   5
4  78
5  72
;

SubProb = -22252.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 106
MasterProb = 166978

s [*] :=
1  73
2  26
3  13
4  43
5  70
;

SubProb = -28358.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 107
MasterProb = 161869

s [*] :=
1  54
2  23
3   7
4  49
5  90
;

SubProb = -13837.6
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 108
MasterProb = 160030

s [*] :=
1  57
2  26
3  94
4   7
5  86
;

SubProb = -15012.8
d = 79

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 109
MasterProb = 157077

s [*] :=
1  33
2  51
3  91
4  27
5  39
;

SubProb = -20327.5
d = 23

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 110
MasterProb = 154076

s [*] :=
1   82
2   26
3   90
4   22
5  101
;

SubProb = -7991.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 111
MasterProb = 152834

s [*] :=
1  11
2  40
3  97
4  55
5   4
;

SubProb = -9136.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 112
MasterProb = 151352

s [*] :=
1  50
2   8
3  72
4  71
5  26
;

SubProb = -16851.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5170

Iter 113
MasterProb = 149814

s [*] :=
1  72
2   6
3  88
4  69
5   9
;

SubProb = -14827.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 114
MasterProb = 147928

s [*] :=
1    4
2   16
3   19
4   35
5  100
;

SubProb = -11680.4
d = 27

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 115
MasterProb = 146145

s [*] :=
1   5
2  72
3  57
4  32
5  80
;

SubProb = -11767.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 116
MasterProb = 144133

s [*] :=
1  92
2  68
3  17
4  35
5  11
;

SubProb = -14679
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 117
MasterProb = 142746

s [*] :=
1  31
2  84
3  66
4  21
5  68
;

SubProb = -6603.04
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 118
MasterProb = 142335

s [*] :=
1  55
2  27
3  85
4  56
5  34
;

SubProb = -10916.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 119
MasterProb = 141104

s [*] :=
1  30
2  88
3  74
4  42
5  13
;

SubProb = -12737.9
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 120
MasterProb = 138331

s [*] :=
1  57
2  27
3  50
4   9
5  92
;

SubProb = -8653.41
d = 53

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 121
MasterProb = 137818

s [*] :=
1   3
2  77
3  24
4   2
5  95
;

SubProb = -9616.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 122
MasterProb = 137403

s [*] :=
1   2
2  30
3  89
4  57
5  75
;

SubProb = -9293.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 123
MasterProb = 136260

s [*] :=
1  14
2  51
3  15
4  80
5  95
;

SubProb = -3454.15
d = 47

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 124
MasterProb = 136183

s [*] :=
1   1
2  37
3  85
4  92
5  43
;

SubProb = -10067
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 125
MasterProb = 135716

s [*] :=
1   1
2  38
3  84
4  96
5  26
;

SubProb = -1436.65
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 126
MasterProb = 135702

s [*] :=
1  68
2  14
3  10
4  37
5  96
;

SubProb = -10949.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 127
MasterProb = 134723

s [*] :=
1  30
2  33
3  52
4  58
5  75
;

SubProb = -4546.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 128
MasterProb = 134233

s [*] :=
1  38
2  67
3  61
4  71
5  58
;

SubProb = -6158.29
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 129
MasterProb = 133550

s [*] :=
1  25
2  32
3  89
4  67
5  41
;

SubProb = -4159.65
d = 42

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 130
MasterProb = 133206

s [*] :=
1  83
2  51
3  26
4  10
5  67
;

SubProb = -8176.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 131
MasterProb = 132936

s [*] :=
1  53
2  87
3  78
4  18
5   6
;

SubProb = -1808.59
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 132
MasterProb = 132815

s [*] :=
1  62
2   3
3  84
4  36
5  96
;

SubProb = -6695.82
d = 62

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 133
MasterProb = 131872

s [*] :=
1  72
2  70
3  11
4  85
5  21
;

SubProb = -6420.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 134
MasterProb = 131401

s [*] :=
1  28
2  21
3  24
4  74
5  89
;

SubProb = -4201.04
d = 23

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 135
MasterProb = 131230

s [*] :=
1  33
2  89
3  56
4  28
5  10
;

SubProb = -6694.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 136
MasterProb = 130223

s [*] :=
1  62
2   4
3   2
4  86
5  95
;

SubProb = 689.792
d = 45

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5500

Problema Entero
MasterProb = 291495

fo1 = 143945
fo2 = 147550

x[j] [*] :=
 93  1
126  1
137  1
142  1
144  1
153  1
156  1
187  1
205  1
219  1
225  1
243  1
251  1
261  1
275  1
282  1
303  1
305  1
308  1
330  1
;

aa[i,j] [*,*]
:    93 126 137 142 144 153 156 187 205 219 225 243 251 261 275 282 303 305 308 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
9     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
18    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
34    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
38    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
40    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
42    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
46    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
56    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
58    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
61    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
76    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
79    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
81    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
84    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
88    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
92    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
93    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
99    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0

:   330    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    1
22    0
23    0
24    1
25    0
26    0
27    0
28    1
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    1
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    1
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 2  1
 3  1
 4  1
 5  1
12  1
13  1
14  1
16  1
20  1
31  1
52  1
63  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
93    1        0       0         0
126   1    13475    4675      8800
137   1     4515    3795       720
142   1    13830    4070      9760
144   1     8915    3795      5120
153   1     3985    3905        80
156   1     4805    4565       240
187   1     6515    3795      2720
205   1    24855    4455     20400
219   1      880     880         0
225   1     7200    4400      2800
243   1     7015    3575      3440
251   1    11290    2970      8320
261   1      880     880         0
275   1     1155    1155         0
282   1    12515    3795      8720
303   1     4795    4235       560
305   1     6130    4290      1840
308   1     5170    5170         0
330   1     6020    4180      1840
;

