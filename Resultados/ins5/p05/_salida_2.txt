Iter 96
MasterProb = 213557

s [*] :=
1  17
2  94
3  72
4  43
5  95
;

SubProb = -67483.4
d = 80

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 97
MasterProb = 150937

s [*] :=
1   5
2  94
3  53
4  93
5  92
;

SubProb = -111226
d = 21

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 98
MasterProb = 106588

s [*] :=
1  93
2  91
3  92
4  19
5  95
;

SubProb = -129216
d = 63

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 99
MasterProb = 76243

s [*] :=
1  91
2  92
3  95
4   9
5  48
;

SubProb = -14037.3
d = 8

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 100
MasterProb = 76243

s [*] :=
1  95
2  91
3   6
4  94
5  32
;

SubProb = -9795.51
d = 30

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 101
MasterProb = 73081.3

s [*] :=
1  91
2  95
3  93
4  16
5   5
;

SubProb = -11968.7
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 102
MasterProb = 69703.2

s [*] :=
1  91
2   6
3  58
4  15
5  94
;

SubProb = -5453.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 103
MasterProb = 69535.1

s [*] :=
1  22
2  87
3  25
4  19
5  95
;

SubProb = -4025.1
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 104
MasterProb = 68754.7

s [*] :=
1   4
2   7
3  26
4  80
5  93
;

SubProb = -1819.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 105
MasterProb = 68754.7

s [*] :=
1  89
2  95
3  96
4  97
5  98
;

SubProb = -1446.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 106
MasterProb = 68643.2

s [*] :=
1  56
2  20
3  21
4  73
5  64
;

SubProb = -1490.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 107
MasterProb = 68420.2

s [*] :=
1   6
2  41
3  76
4  70
5  92
;

SubProb = -1288.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 108
MasterProb = 68381.1

s [*] :=
1  12
2  31
3  43
4  41
5  94
;

SubProb = -2062.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4895

Iter 109
MasterProb = 68156.2

s [*] :=
1  12
2  26
3  61
4  70
5  86
;

SubProb = -2055.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 110
MasterProb = 67964

s [*] :=
1  53
2  55
3  50
4  69
5  21
;

SubProb = -1486.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 111
MasterProb = 67674.9

s [*] :=
1  92
2  91
3  67
4  54
5  38
;

SubProb = -902.094
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 112
MasterProb = 67613.7

s [*] :=
1  95
2  60
3  47
4  92
5  96
;

SubProb = -2249.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 113
MasterProb = 67298.5

s [*] :=
1  87
2  73
3  91
4   7
5  10
;

SubProb = -1662.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 114
MasterProb = 67213.4

s [*] :=
1  28
2  51
3  14
4  24
5  88
;

SubProb = -360.572
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 115
MasterProb = 67204.4

s [*] :=
1  89
2  95
3  43
4  96
5  97
;

SubProb = -599.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1815

Iter 116
MasterProb = 67127.4

s [*] :=
1  40
2  31
3  93
4  75
5  28
;

SubProb = -2816.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 117
MasterProb = 66699.3

s [*] :=
1   5
2  33
3   9
4  90
5  17
;

SubProb = -2583.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 118
MasterProb = 66416.8

s [*] :=
1  83
2  63
3  22
4  33
5  55
;

SubProb = -964.559
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 119
MasterProb = 66301

s [*] :=
1  80
2  94
3  29
4  42
5  37
;

SubProb = -2386.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 120
MasterProb = 65526

s [*] :=
1  17
2  49
3  79
4  92
5  38
;

SubProb = -1606.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 121
MasterProb = 65273

s [*] :=
1  13
2  76
3   5
4  88
5  94
;

SubProb = -1227.42
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 122
MasterProb = 65213.7

s [*] :=
1  22
2  11
3  21
4  93
5  83
;

SubProb = -869.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 123
MasterProb = 65109.7

s [*] :=
1  37
2  23
3  22
4  43
5  86
;

SubProb = -811.552
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 124
MasterProb = 65064.3

s [*] :=
1  94
2  52
3  92
4  71
5   5
;

SubProb = -874.331
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 125
MasterProb = 64965.8

s [*] :=
1  30
2  22
3  64
4  37
5  88
;

SubProb = -1237.74
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 126
MasterProb = 64879.1

s [*] :=
1  91
2  76
3   3
4  94
5  70
;

SubProb = -2222.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 127
MasterProb = 64615.4

s [*] :=
1  82
2  42
3  38
4  15
5  19
;

SubProb = -995.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 128
MasterProb = 64421.1

s [*] :=
1   2
2  29
3  95
4  31
5  60
;

SubProb = -376.438
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 129
MasterProb = 64404.1

s [*] :=
1  67
2  12
3  80
4  19
5  93
;

SubProb = -196.955
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 130
MasterProb = 64400.3

s [*] :=
1  31
2   6
3  53
4  60
5  37
;

SubProb = -1467.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 131
MasterProb = 64297

s [*] :=
1  48
2   5
3  56
4  73
5  93
;

SubProb = -351.422
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 132
MasterProb = 64251.2

s [*] :=
1  38
2  59
3  73
4  17
5  12
;

SubProb = -891.005
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 133
MasterProb = 63961.8

s [*] :=
1  52
2  81
3   4
4  12
5   2
;

SubProb = -824.202
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 134
MasterProb = 63924.4

s [*] :=
1  53
2   3
3  20
4  74
5  95
;

SubProb = -540.585
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 135
MasterProb = 63888.5

s [*] :=
1  79
2   9
3  49
4  13
5  93
;

SubProb = -747.784
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 136
MasterProb = 63811.1

s [*] :=
1  95
2  37
3   1
4  83
5  66
;

SubProb = -968.424
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 137
MasterProb = 63740

s [*] :=
1  91
2  39
3  20
4   8
5  70
;

SubProb = -821.077
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 138
MasterProb = 63699

s [*] :=
1  66
2  16
3  91
4  22
5  53
;

SubProb = -1066.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 139
MasterProb = 63567.2

s [*] :=
1   3
2  14
3  48
4  34
5  43
;

SubProb = -658.908
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 140
MasterProb = 63516

s [*] :=
1  89
2   5
3  20
4  91
5  16
;

SubProb = -341.407
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 141
MasterProb = 63495.7

s [*] :=
1  89
2  95
3  96
4  97
5  98
;

SubProb = 214.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Problema Entero
MasterProb = 123682

fo1 = 82190
fo2 = 41492

x[j] [*] :=
107  1
138  1
157  1
173  1
189  1
217  1
257  1
270  1
277  1
302  1
353  1
387  1
428  1
470  1
483  1
500  1
528  1
539  1
547  1
549  1
;

aa[i,j] [*,*]
:  107 138 157 173 189 217 257 270 277 302 353 387 428 470 483 500 528 539 547 :=
1    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
6    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
8    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
10   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
13   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
15   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
18   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
20   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
27   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
40   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
41   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
45   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
53   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
55   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
58   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
60   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
62   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
71   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
72   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
74   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
76   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
78   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
79   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
82   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
83   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
85   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
87   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
89   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
90   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
91   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
92   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
93   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
94   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0

:  549    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   1
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   1
38   0
39   0
40   0
41   0
42   1
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   1
81   0
82   0
83   0
84   0
85   0
86   0
87   0
88   0
89   0
90   0
91   0
92   0
93   0
94   1
95   0
;

vi[i] [*] :=
31  1
47  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
107   1    3355    3355         0
138   1    4400    4400         0
157   1    4565    4565         0
173   1    3520    3520         0
189   1    3520    3520         0
217   1    8240    3520      4720
257   1    3575    3575         0
270   1    3520    3520         0
277   1    3410    3410         0
302   1    4620    4620         0
353   1    4830    3630      1200
387   1    2860    2860         0
428   1    1595    1595         0
470   1     880     880         0
483   1    4625    3905       720
500   1    3520    3520         0
528   1    9055    4015      5040
539   1    3630    3630         0
547   1    4235    4235         0
549   1    4235    4235         0
;

