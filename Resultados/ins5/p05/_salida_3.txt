Iter 83
MasterProb = 59595.9

s [*] :=
1  82
2  15
3  81
4  53
5  74
;

SubProb = -80176.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 84
MasterProb = 55687.7

s [*] :=
1  20
2  76
3  41
4  12
5  19
;

SubProb = -3838.08
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 85
MasterProb = 54137.2

s [*] :=
1  81
2  82
3  11
4   7
5  79
;

SubProb = -5099.97
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 86
MasterProb = 52475.4

s [*] :=
1  40
2  36
3  33
4  44
5  81
;

SubProb = -1946.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 87
MasterProb = 52470.9

s [*] :=
1  78
2  62
3  83
4  84
5  85
;

SubProb = -1113.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 88
MasterProb = 52135.6

s [*] :=
1  54
2  20
3  43
4  82
5  11
;

SubProb = -1945.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 89
MasterProb = 51692.9

s [*] :=
1  77
2  63
3   2
4  83
5  84
;

SubProb = -272.642
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2420

Iter 90
MasterProb = 51662.1

s [*] :=
1  71
2  73
3  75
4  83
5  84
;

SubProb = -885.701
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 91
MasterProb = 51549.3

s [*] :=
1  79
2  76
3  83
4  84
5  85
;

SubProb = -976.419
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 92
MasterProb = 51317.9

s [*] :=
1   6
2  53
3  72
4  25
5  19
;

SubProb = -254.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 93
MasterProb = 51302.3

s [*] :=
1  63
2  29
3   8
4  52
5  11
;

SubProb = -742.707
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 94
MasterProb = 51222.4

s [*] :=
1  58
2  81
3  82
4  83
5  84
;

SubProb = -648.978
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2090

Iter 95
MasterProb = 51177.8

s [*] :=
1  56
2  80
3  83
4  84
5  85
;

SubProb = -883.743
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 96
MasterProb = 50778.4

s [*] :=
1  77
2  81
3  83
4  84
5  85
;

SubProb = -473.124
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 97
MasterProb = 50723.8

s [*] :=
1   4
2  24
3  40
4  33
5  82
;

SubProb = -597.678
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 98
MasterProb = 50689.5

s [*] :=
1   5
2  55
3  63
4  29
5  20
;

SubProb = -1393.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 99
MasterProb = 50332

s [*] :=
1  12
2   8
3  44
4  82
5  11
;

SubProb = -745.773
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 100
MasterProb = 50195.8

s [*] :=
1  63
2  74
3  33
4  82
5  83
;

SubProb = -884.297
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 101
MasterProb = 50050.2

s [*] :=
1  80
2  81
3  83
4  84
5  85
;

SubProb = -298.642
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 102
MasterProb = 50015.4

s [*] :=
1  80
2  11
3  83
4  84
5  85
;

SubProb = -74.6109
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 103
MasterProb = 50006

s [*] :=
1  64
2  77
3  47
4  83
5  84
;

SubProb = -701.534
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1210

Iter 104
MasterProb = 49687

s [*] :=
1   4
2  56
3  13
4  27
5  72
;

SubProb = -849.621
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 105
MasterProb = 49550.2

s [*] :=
1  76
2   7
3  38
4  60
5   6
;

SubProb = -299.129
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 106
MasterProb = 49544.8

s [*] :=
1  27
2   2
3  25
4  38
5  62
;

SubProb = -480.023
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 107
MasterProb = 49457.3

s [*] :=
1  27
2  38
3  40
4  64
5  81
;

SubProb = -1110.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 108
MasterProb = 49323.6

s [*] :=
1  72
2  76
3  83
4  84
5  85
;

SubProb = -582.301
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 109
MasterProb = 49116.8

s [*] :=
1  35
2  62
3  15
4  43
5  54
;

SubProb = -577.799
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 110
MasterProb = 49044.5

s [*] :=
1  77
2  25
3  83
4  84
5  85
;

SubProb = -154.177
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 111
MasterProb = 49029.2

s [*] :=
1   5
2  17
3  78
4  58
5  83
;

SubProb = -427.446
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 112
MasterProb = 48962.3

s [*] :=
1   1
2   2
3  13
4  23
5  71
;

SubProb = -388.489
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 113
MasterProb = 48934.1

s [*] :=
1  11
2   8
3  25
4  53
5  76
;

SubProb = -319.689
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 114
MasterProb = 48925.6

s [*] :=
1  80
2  34
3  83
4  84
5  85
;

SubProb = -52.9325
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 115
MasterProb = 48922.1

s [*] :=
1  18
2  71
3  82
4  11
5  53
;

SubProb = -199.699
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 116
MasterProb = 48914.2

s [*] :=
1  59
2  55
3  83
4  84
5  85
;

SubProb = -104.588
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 117
MasterProb = 48912.8

s [*] :=
1  56
2  16
3  47
4  24
5  36
;

SubProb = -341.327
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 118
MasterProb = 48898.3

s [*] :=
1  68
2  58
3  71
4  83
5  84
;

SubProb = -745.557
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 119
MasterProb = 48744.3

s [*] :=
1  80
2  61
3  83
4  84
5  85
;

SubProb = -136.606
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 120
MasterProb = 48727.9

s [*] :=
1  31
2  36
3  81
4  65
5  72
;

SubProb = -546.317
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 121
MasterProb = 48628.5

s [*] :=
1  73
2  15
3  60
4  13
5  17
;

SubProb = -596.765
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 122
MasterProb = 48573.7

s [*] :=
1  29
2  43
3  42
4  61
5  81
;

SubProb = -868.148
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 123
MasterProb = 48460.2

s [*] :=
1  63
2   2
3   4
4  29
5  62
;

SubProb = -130.581
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 124
MasterProb = 48453.9

s [*] :=
1  54
2  82
3  46
4  24
5  56
;

SubProb = -728.666
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 125
MasterProb = 48376.1

s [*] :=
1  13
2   6
3  72
4  71
5  20
;

SubProb = -913.572
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 126
MasterProb = 48199.4

s [*] :=
1   5
2   6
3  55
4  29
5  74
;

SubProb = -455.454
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 127
MasterProb = 48123.3

s [*] :=
1  40
2  50
3  35
4   9
5  59
;

SubProb = -312.891
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 128
MasterProb = 48091.3

s [*] :=
1  76
2  78
3  83
4  84
5  85
;

SubProb = -47.048
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 129
MasterProb = 48086.3

s [*] :=
1  56
2  11
3  83
4  84
5  85
;

SubProb = -430.688
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 130
MasterProb = 47974.8

s [*] :=
1  15
2  53
3  12
4  67
5  27
;

SubProb = -392.133
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 131
MasterProb = 47906.5

s [*] :=
1  37
2  11
3   3
4  75
5  58
;

SubProb = -951.855
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 132
MasterProb = 47835.8

s [*] :=
1   5
2  60
3  59
4  20
5  57
;

SubProb = -241.783
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 47824.7

s [*] :=
1  61
2  16
3  54
4   5
5  71
;

SubProb = -387.729
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 134
MasterProb = 47789.1

s [*] :=
1  40
2  77
3  83
4  84
5  85
;

SubProb = -75.1971
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 135
MasterProb = 47787.9

s [*] :=
1  73
2  72
3  83
4  84
5  85
;

SubProb = -124.383
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 136
MasterProb = 47786.1

s [*] :=
1  46
2  38
3  73
4  12
5   6
;

SubProb = 431.234
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Problema Entero
MasterProb = 81230

fo1 = 60290
fo2 = 20940

x[j] [*] :=
 63  1
119  1
123  1
144  1
156  1
177  1
289  1
321  1
350  1
417  1
419  1
458  1
464  1
489  1
520  1
522  1
548  1
577  1
591  1
596  1
;

aa[i,j] [*,*]
:   63 119 123 144 156 177 289 321 350 417 419 458 464 489 520 522 548 577 591 :=
1    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
4    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
8    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
10   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
15   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
18   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
21   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
23   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
27   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
32   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
35   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
38   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
39   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
41   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
44   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
49   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
53   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
58   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
60   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
63   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
74   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
77   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
78   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
79   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
80   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0

:  596    :=
1    0
2    0
3    0
4    0
5    1
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   1
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   1
55   0
56   0
57   0
58   0
59   0
60   0
61   1
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   1
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   0
;

vi[i] [*] :=
29  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
63    1       0       0         0
119   1    4240    3520       720
123   1    2475    2475         0
144   1    3850    3850         0
156   1       0       0         0
177   1    6115    3795      2320
289   1    4070    4070         0
321   1    3575    3575         0
350   1    5990    4070      1920
417   1    3435    3355        80
419   1    2530    2530         0
458   1    3025    3025         0
464   1    5455    4015      1440
489   1    3520    3520         0
520   1    1760    1760         0
522   1     880     880         0
548   1    4255    4015       240
577   1     660     660         0
591   1     880     880         0
596   1    3575    3575         0
;

