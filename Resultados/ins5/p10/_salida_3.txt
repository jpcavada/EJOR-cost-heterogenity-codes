Iter 85
MasterProb = 90305.3

s [*] :=
1  82
2  83
3  81
4  84
5  49
;

SubProb = -135267
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 86
MasterProb = 58801.9

s [*] :=
1  40
2  11
3  83
4  42
5  46
;

SubProb = -6775.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 87
MasterProb = 58801.9

s [*] :=
1  25
2  63
3  35
4  23
5  82
;

SubProb = -4332.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 88
MasterProb = 58610.7

s [*] :=
1  11
2  84
3  85
4  86
5  87
;

SubProb = -3228.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 89
MasterProb = 57749.1

s [*] :=
1  81
2  79
3  36
4  85
5  86
;

SubProb = -3574.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 90
MasterProb = 56762.8

s [*] :=
1   2
2  12
3  38
4  72
5  82
;

SubProb = -3792.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 91
MasterProb = 56221.2

s [*] :=
1  76
2   4
3  34
4  65
5  11
;

SubProb = -3062.99
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 92
MasterProb = 55591.3

s [*] :=
1  79
2  63
3  85
4  86
5  87
;

SubProb = -1661.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 93
MasterProb = 54964.9

s [*] :=
1  83
2  64
3  45
4  22
5  81
;

SubProb = -1866.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 94
MasterProb = 54550.2

s [*] :=
1  74
2  54
3  82
4   5
5  53
;

SubProb = -1876.51
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 95
MasterProb = 54183.3

s [*] :=
1   2
2  72
3  38
4  55
5  83
;

SubProb = -1601.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 96
MasterProb = 53965.7

s [*] :=
1  75
2   1
3  54
4  60
5  81
;

SubProb = -936.563
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 97
MasterProb = 53889.8

s [*] :=
1  78
2  76
3  85
4  86
5  87
;

SubProb = -1478.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 98
MasterProb = 53151

s [*] :=
1  39
2  15
3  53
4  28
5  74
;

SubProb = -1022.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 99
MasterProb = 53102.2

s [*] :=
1   2
2  71
3  38
4  72
5   6
;

SubProb = -593.117
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 100
MasterProb = 53013.7

s [*] :=
1  81
2  59
3  15
4  74
5  85
;

SubProb = -1059.68
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 101
MasterProb = 52847.3

s [*] :=
1  12
2  43
3  27
4  64
5  46
;

SubProb = -1170.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 102
MasterProb = 52678.1

s [*] :=
1  22
2  25
3   8
4  72
5  81
;

SubProb = -930.871
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 103
MasterProb = 52594.1

s [*] :=
1  49
2  83
3  85
4  86
5  87
;

SubProb = -397.814
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 104
MasterProb = 52580.8

s [*] :=
1  65
2  64
3   4
4  18
5  49
;

SubProb = -864.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 105
MasterProb = 52548.7

s [*] :=
1  57
2  83
3  85
4  86
5  87
;

SubProb = -340.366
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 106
MasterProb = 52525.3

s [*] :=
1  83
2  80
3  85
4  86
5  87
;

SubProb = -523.402
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 107
MasterProb = 52506.5

s [*] :=
1  39
2  62
3  20
4  18
5  67
;

SubProb = -486.264
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 108
MasterProb = 52483.7

s [*] :=
1  30
2  50
3  32
4  36
5  25
;

SubProb = -75.3082
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 109
MasterProb = 52480.3

s [*] :=
1  33
2  80
3  29
4  85
5  86
;

SubProb = -380.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1815

Iter 110
MasterProb = 52429.8

s [*] :=
1  17
2  27
3  72
4  63
5  18
;

SubProb = -869.048
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 52301.6

s [*] :=
1  79
2  83
3  85
4  86
5  87
;

SubProb = -714.994
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 112
MasterProb = 52161.8

s [*] :=
1  46
2  84
3  85
4  86
5  87
;

SubProb = -407.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 113
MasterProb = 52140.6

s [*] :=
1  25
2  33
3   4
4  64
5  62
;

SubProb = -471.501
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 114
MasterProb = 52124.9

s [*] :=
1  61
2  84
3  85
4  86
5  87
;

SubProb = -28.5706
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 115
MasterProb = 52123.8

s [*] :=
1  79
2  77
3  85
4  86
5  87
;

SubProb = -243.516
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Iter 116
MasterProb = 52068.9

s [*] :=
1  55
2  81
3   2
4  46
5  24
;

SubProb = -221.494
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 117
MasterProb = 52066.2

s [*] :=
1  79
2  84
3  34
4  85
5  86
;

SubProb = -163.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 118
MasterProb = 52063.2

s [*] :=
1  77
2  84
3  85
4  86
5  87
;

SubProb = -313.485
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 119
MasterProb = 52008.5

s [*] :=
1  71
2  82
3  85
4  86
5  87
;

SubProb = -330.328
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 120
MasterProb = 51965.9

s [*] :=
1   2
2   6
3  38
4  82
5  73
;

SubProb = -225.544
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 121
MasterProb = 51959.5

s [*] :=
1  71
2  14
3  40
4  16
5  56
;

SubProb = -686.463
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 122
MasterProb = 51845.6

s [*] :=
1   2
2   7
3  82
4  62
5  81
;

SubProb = -287.915
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 123
MasterProb = 51828.5

s [*] :=
1  30
2  34
3  42
4  64
5  82
;

SubProb = -569.737
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 124
MasterProb = 51797.8

s [*] :=
1  31
2  81
3  39
4  58
5  71
;

SubProb = -609.778
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 125
MasterProb = 51731.4

s [*] :=
1  68
2  60
3  58
4  10
5  85
;

SubProb = -188.101
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 126
MasterProb = 51725.2

s [*] :=
1  79
2  83
3  85
4  86
5  87
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 88208

fo1 = 67520
fo2 = 20688

x[j] [*] :=
 71  1
 78  1
 92  1
146  1
187  1
189  1
204  1
242  1
312  1
319  1
328  1
336  1
338  1
354  1
428  1
509  1
525  1
548  1
573  1
578  1
;

aa[i,j] [*,*]
:   71  78  92 146 187 189 204 242 312 319 328 336 338 354 428 509 525 548 573 :=
1    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
10   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
15   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
19   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
21   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
28   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
42   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
44   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
47   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
50   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
51   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
53   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
56   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
60   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
64   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
65   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
67   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
69   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:  578    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   1
78   0
79   1
80   0
81   0
82   0
83   0
84   0
;

vi[i] [*] :=
34  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
71    1       0       0         0
78    1       0       0         0
92    1    4290    4290         0
146   1    3850    3850         0
187   1    3135    3135         0
189   1    2035    2035         0
204   1    3905    3905         0
242   1    2310    2310         0
312   1    3905    3905         0
319   1    3685    3685         0
328   1    2595    2035       560
336   1    3355    3355         0
338   1    4070    4070         0
354   1    7680    3520      4160
428   1    8390    4070      4320
509   1     660     660         0
525   1    3520    3520         0
548   1    5350    4950       400
573   1    3520    3520         0
578   1    1265    1265         0
;

