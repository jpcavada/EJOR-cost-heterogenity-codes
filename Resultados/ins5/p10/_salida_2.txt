Iter 96
MasterProb = 207794

s [*] :=
1  31
2  93
3  94
4  92
5  95
;

SubProb = -135392
d = 210

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5500

Iter 97
MasterProb = 93925.2

s [*] :=
1  94
2  92
3  53
4  91
5  93
;

SubProb = -74119.6
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 98
MasterProb = 77168.5

s [*] :=
1  91
2  86
3  92
4  93
5  95
;

SubProb = -48758.9
d = 189

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 99
MasterProb = 77168.5

s [*] :=
1  91
2   5
3  95
4  92
5  15
;

SubProb = -51784.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 100
MasterProb = 77168.5

s [*] :=
1  14
2  93
3   5
4  95
5  91
;

SubProb = -47729.4
d = 18

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 101
MasterProb = 75103

s [*] :=
1  94
2  38
3  53
4  55
5   5
;

SubProb = -11274.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 102
MasterProb = 72128.5

s [*] :=
1  19
2   7
3  26
4  42
5  93
;

SubProb = -6342.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 103
MasterProb = 69698.3

s [*] :=
1  54
2  95
3  96
4  97
5  98
;

SubProb = -1779.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 104
MasterProb = 69152

s [*] :=
1  66
2  21
3  51
4  93
5  92
;

SubProb = -7628.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 105
MasterProb = 68881.9

s [*] :=
1  95
2  94
3  96
4  97
5  98
;

SubProb = -3391.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 106
MasterProb = 68401.6

s [*] :=
1  70
2  53
3  80
4   2
5  48
;

SubProb = -1824.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 107
MasterProb = 68267.5

s [*] :=
1  83
2  38
3  31
4   6
5   7
;

SubProb = -2611.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 108
MasterProb = 67651.4

s [*] :=
1  73
2  91
3   2
4  87
5  57
;

SubProb = -2657.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 109
MasterProb = 66975.3

s [*] :=
1  53
2  24
3  12
4  37
5  38
;

SubProb = -976.834
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 110
MasterProb = 66953.9

s [*] :=
1  56
2  15
3  55
4  37
5  78
;

SubProb = -2340.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 111
MasterProb = 66609.5

s [*] :=
1  95
2  93
3  53
4  96
5  97
;

SubProb = -1612.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2310

Iter 112
MasterProb = 66439.6

s [*] :=
1  20
2  94
3  93
4  31
5  29
;

SubProb = -1687.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 113
MasterProb = 66363.6

s [*] :=
1  65
2  55
3  72
4  44
5  17
;

SubProb = -206.239
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 114
MasterProb = 66362.1

s [*] :=
1  86
2  72
3  64
4  96
5  97
;

SubProb = 111.391
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Problema Entero
MasterProb = 171805

fo1 = 86920
fo2 = 84885

x[j] [*] :=
150  1
153  1
196  1
229  1
232  1
253  1
269  1
328  1
335  1
348  1
358  1
380  1
390  1
403  1
424  1
443  1
471  1
478  1
529  1
542  1
;

aa[i,j] [*,*]
:  150 153 196 229 232 253 269 328 335 348 358 380 390 403 424 443 471 478 529 :=
1    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
4    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
6    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
8    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
9    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
13   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
16   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
18   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
38   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
41   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
44   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
48   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
51   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
55   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
59   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
60   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
63   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
73   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
75   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
78   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
79   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
80   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
81   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
84   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
87   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
88   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
89   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
90   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
91   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
92   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
93   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1

:  542    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   1
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   1
30   0
31   1
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   0
83   0
84   0
85   0
86   0
87   0
88   0
89   0
90   0
91   0
92   0
93   1
94   1
95   0
;

vi[i] [*] :=
21  1
35  1
65  1
82  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
150   1     2640    2640         0
153   1     3905    3905         0
196   1     3575    3575         0
229   1     4640    3520      1120
232   1     2970    2970         0
253   1     5650    4290      1360
269   1     3520    3520         0
328   1     4730    4730         0
335   1    13950    4510      9440
348   1     5280    5280         0
358   1     3245    3245         0
380   1     3795    3795         0
390   1     3520    3520         0
403   1     8500    3300      5200
424   1      880     880         0
443   1      880     880         0
471   1     2585    2585         0
478   1     2865    2145       720
529   1     4840    4840         0
542   1     4950    4950         0
;

