Iter 98
MasterProb = 447872

s [*] :=
1  94
2  22
3  25
4  70
5  93
;

SubProb = -72878.1
d = 195

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 99
MasterProb = 379083

s [*] :=
1  94
2  96
3  77
4  64
5  79
;

SubProb = -98664.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 100
MasterProb = 354849

s [*] :=
1  91
2  96
3  76
4   3
5  24
;

SubProb = -88666.3
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 101
MasterProb = 297994

s [*] :=
1  17
2  92
3  56
4  59
5  72
;

SubProb = -41530.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 102
MasterProb = 266766

s [*] :=
1  18
2  88
3  43
4  92
5  53
;

SubProb = -51236.1
d = 226

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 103
MasterProb = 253119

s [*] :=
1  42
2  69
3  38
4  91
5  97
;

SubProb = -56570.1
d = 452

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 104
MasterProb = 251093

s [*] :=
1  88
2  44
3  38
4  21
5  93
;

SubProb = -30883.2
d = 215

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 105
MasterProb = 242596

s [*] :=
1   3
2  14
3  28
4  89
5  97
;

SubProb = -16990.2
d = 485

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 106
MasterProb = 237020

s [*] :=
1  91
2  68
3  60
4  96
5  86
;

SubProb = -15577.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 107
MasterProb = 233673

s [*] :=
1  11
2  93
3  24
4  62
5  21
;

SubProb = -11834.5
d = 55

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 108
MasterProb = 230794

s [*] :=
1  29
2  17
3  10
4  92
5  91
;

SubProb = -14112.5
d = 56

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 109
MasterProb = 226876

s [*] :=
1   2
2  89
3  68
4  65
5  95
;

SubProb = -18131.3
d = 401

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 110
MasterProb = 221902

s [*] :=
1  35
2  33
3  76
4  70
5  97
;

SubProb = -10878.8
d = 463

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 111
MasterProb = 220032

s [*] :=
1  74
2  11
3  96
4  31
5  95
;

SubProb = -18870.7
d = 390

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 112
MasterProb = 214416

s [*] :=
1  85
2  26
3  52
4  76
5  95
;

SubProb = -10566.9
d = 236

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 113
MasterProb = 213215

s [*] :=
1   2
2  85
3  43
4  92
5  94
;

SubProb = -10047.7
d = 84

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 114
MasterProb = 211027

s [*] :=
1  17
2  68
3  94
4  70
5   5
;

SubProb = -3835.73
d = 137

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 115
MasterProb = 210418

s [*] :=
1  59
2  66
3  52
4  48
5  93
;

SubProb = -2581.47
d = 56

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 116
MasterProb = 210170

s [*] :=
1  39
2  33
3  44
4  70
5  97
;

SubProb = -344.943
d = 453

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 117
MasterProb = 210134

s [*] :=
1  94
2   9
3  59
4  83
5   5
;

SubProb = -2544.49
d = 81

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 118
MasterProb = 210004

s [*] :=
1  50
2  78
3  56
4  26
5  72
;

SubProb = -1599.25
d = 52

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 119
MasterProb = 209808

s [*] :=
1  92
2   1
3  84
4  50
5  16
;

SubProb = -1926.69
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 120
MasterProb = 209645

s [*] :=
1  81
2  86
3  60
4  91
5  68
;

SubProb = -4370.79
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 121
MasterProb = 208504

s [*] :=
1  42
2  60
3  61
4  15
5  63
;

SubProb = -3410.87
d = 83

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 122
MasterProb = 207833

s [*] :=
1  22
2  33
3  44
4  81
5   4
;

SubProb = -2326.89
d = 42

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 123
MasterProb = 207758

s [*] :=
1  17
2  33
3  76
4  70
5  97
;

SubProb = -396.959
d = 463

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 124
MasterProb = 207726

s [*] :=
1  63
2  33
3  32
4  82
5  97
;

SubProb = -3003.61
d = 383

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 125
MasterProb = 206953

s [*] :=
1  81
2  35
3  64
4   1
5  95
;

SubProb = -5345.87
d = 344

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 126
MasterProb = 206210

s [*] :=
1  17
2  14
3  44
4  52
5  97
;

SubProb = -1076.17
d = 329

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 127
MasterProb = 206159

s [*] :=
1  90
2  96
3  52
4  36
5  95
;

SubProb = -6761.07
d = 131

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 128
MasterProb = 204720

s [*] :=
1  69
2  11
3  12
4  28
5  91
;

SubProb = -1584.69
d = 84

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 129
MasterProb = 204610

s [*] :=
1  91
2  71
3  88
4  28
5  67
;

SubProb = -1283.47
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 130
MasterProb = 204565

s [*] :=
1   2
2  68
3  12
4  65
5  76
;

SubProb = -2433.99
d = 84

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 131
MasterProb = 204165

s [*] :=
1  18
2  94
3  44
4  70
5  97
;

SubProb = -1325.93
d = 463

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 132
MasterProb = 204083

s [*] :=
1   9
2  39
3  65
4   3
5  76
;

SubProb = -2219.73
d = 84

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 203886

s [*] :=
1  17
2  33
3  10
4  20
5  93
;

SubProb = -6106.88
d = 114

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 203120

s [*] :=
1  44
2  71
3  88
4  91
5  16
;

SubProb = -2529.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 135
MasterProb = 202789

s [*] :=
1   5
2   1
3  24
4  67
5  16
;

SubProb = -1415.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 136
MasterProb = 202755

s [*] :=
1  49
2  92
3  26
4  76
5  22
;

SubProb = -4279.14
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 137
MasterProb = 201932

s [*] :=
1   8
2  48
3  59
4  89
5  54
;

SubProb = -1620.55
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 138
MasterProb = 201855

s [*] :=
1  63
2  75
3  25
4  49
5  89
;

SubProb = -1960.24
d = 64

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 139
MasterProb = 201759

s [*] :=
1  51
2  92
3  26
4  76
5  14
;

SubProb = -213.188
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 140
MasterProb = 201756

s [*] :=
1  33
2  74
3  44
4  54
5  97
;

SubProb = -204.951
d = 480

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 141
MasterProb = 201756

s [*] :=
1  69
2  92
3  26
4  76
5  13
;

SubProb = -1165.15
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 142
MasterProb = 201708

s [*] :=
1  12
2  85
3  75
4  70
5  79
;

SubProb = 382.524
d = 68

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Problema Entero
MasterProb = 370455

fo1 = 162535
fo2 = 207920

x[j] [*] :=
112  1
141  1
166  1
185  1
196  1
217  1
286  1
295  1
302  1
324  1
331  1
372  1
391  1
409  1
474  1
528  1
550  1
554  1
557  1
571  1
;

aa[i,j] [*,*]
:  112 141 166 185 196 217 286 295 302 324 331 372 391 409 474 528 550 554 557 :=
1    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
4    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
10   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
11   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
23   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
29   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
33   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
34   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
37   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
38   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
43   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
45   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
47   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
49   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
53   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
54   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
59   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
62   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
64   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
66   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
69   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
72   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
78   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
79   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
80   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
83   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
84   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
85   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
87   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
89   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
91   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
92   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
94   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
95   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
96   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
97   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:  571    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   1
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   1
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   1
70   0
71   0
72   0
73   0
74   0
75   0
76   1
77   0
78   0
79   0
80   0
81   0
82   0
83   0
84   0
85   0
86   0
87   0
88   0
89   0
90   0
91   0
92   1
93   0
94   0
95   0
96   0
97   0
;

vi[i] [*] :=
 7  1
15  1
17  1
23  1
31  1
35  1
73  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
112   1    10790    4070      6720
141   1     3410    3410         0
166   1     8325    3685      4640
185   1     4510    4510         0
196   1     8460    1980      6480
217   1     7320    3960      3360
286   1     4915    3795      1120
295   1     4655    4015       640
302   1    11600    4400      7200
324   1     4345    4345         0
331   1     3135    3135         0
372   1     3825    3025       800
391   1     3575    3575         0
409   1      605     605         0
474   1      880     880         0
528   1    20550    4950     15600
550   1     6510    3630      2880
554   1    35205    4565     30640
557   1    14330    3850     10480
571   1     5590    4070      1520
;

