Iter 88
MasterProb = 230274

s [*] :=
1  83
2  24
3  52
4  84
5  81
;

SubProb = -131236
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 89
MasterProb = 101733

s [*] :=
1  50
2  85
3  57
4  33
5  86
;

SubProb = -85925
d = 60

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 90
MasterProb = 64957.6

s [*] :=
1  82
2  35
3  84
4  77
5  87
;

SubProb = -99365.3
d = 323

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 91
MasterProb = 64957.6

s [*] :=
1  81
2  86
3  82
4  85
5  83
;

SubProb = -40634.8
d = 50

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 92
MasterProb = 60331.2

s [*] :=
1  82
2  81
3  86
4  55
5  15
;

SubProb = -9550.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 93
MasterProb = 60331.2

s [*] :=
1  47
2  31
3  84
4  82
5  13
;

SubProb = -4696.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 94
MasterProb = 59549.9

s [*] :=
1  86
2  10
3  65
4  66
5  83
;

SubProb = -5128.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 95
MasterProb = 57549

s [*] :=
1  87
2  16
3  34
4  88
5  89
;

SubProb = -1422.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1815

Iter 96
MasterProb = 57282.4

s [*] :=
1  87
2  83
3  88
4  89
5  90
;

SubProb = -1880.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 97
MasterProb = 57273.2

s [*] :=
1  43
2  87
3  23
4  88
5  89
;

SubProb = -1321.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 98
MasterProb = 56928.8

s [*] :=
1  79
2  84
3  88
4  89
5  90
;

SubProb = -730.975
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 99
MasterProb = 56759.1

s [*] :=
1  79
2  71
3  86
4  17
5  35
;

SubProb = -1913.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 100
MasterProb = 56242.4

s [*] :=
1  11
2  12
3  88
4  89
5  90
;

SubProb = -1308.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 101
MasterProb = 56022.3

s [*] :=
1  85
2  80
3  88
4  89
5  90
;

SubProb = -884.344
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 102
MasterProb = 55715.1

s [*] :=
1  24
2  50
3  25
4  73
5  84
;

SubProb = -1255.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 103
MasterProb = 55383.2

s [*] :=
1  65
2  40
3  32
4  20
5  60
;

SubProb = -791.014
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 104
MasterProb = 55329

s [*] :=
1  32
2  85
3  88
4  89
5  90
;

SubProb = -619.698
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 105
MasterProb = 55156.2

s [*] :=
1  65
2  85
3  88
4  89
5  90
;

SubProb = -198.565
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 106
MasterProb = 55148.6

s [*] :=
1  12
2  85
3  88
4  89
5  90
;

SubProb = -480.256
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 107
MasterProb = 55034.9

s [*] :=
1  11
2  82
3  88
4  89
5  90
;

SubProb = -650.453
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 108
MasterProb = 54923.2

s [*] :=
1  56
2  11
3  88
4  89
5  90
;

SubProb = -1392.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 109
MasterProb = 54550

s [*] :=
1   5
2  34
3  30
4  51
5  81
;

SubProb = -500.447
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 110
MasterProb = 54525.2

s [*] :=
1  20
2  85
3  23
4  88
5  89
;

SubProb = -680.017
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2310

Iter 111
MasterProb = 54389.2

s [*] :=
1  34
2  30
3  85
4  47
5  81
;

SubProb = -2486.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 112
MasterProb = 53636

s [*] :=
1  84
2  49
3  88
4  89
5  90
;

SubProb = -674.528
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 113
MasterProb = 53505.8

s [*] :=
1  52
2  11
3  88
4  89
5  90
;

SubProb = 128.968
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Problema Entero
MasterProb = 102630

fo1 = 74340
fo2 = 28290

x[j] [*] :=
 17  1
 89  1
 94  1
 98  1
114  1
158  1
238  1
336  1
355  1
401  1
409  1
413  1
415  1
425  1
430  1
446  1
554  1
558  1
563  1
575  1
;

aa[i,j] [*,*]
:   17  89  94  98 114 158 238 336 355 401 409 413 415 425 430 446 554 558 563 :=
1    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
4    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
7    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
13   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
17   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
20   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
23   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
27   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
31   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
35   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
42   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
43   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
44   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
48   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
54   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
57   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
59   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
64   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
65   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
70   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
72   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
73   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
78   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
79   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
87   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:  575    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   1
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   0
83   0
84   1
85   0
86   0
87   0
;

vi[i] [*] :=
9  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
17    1       0       0         0
89    1    3795    3795         0
94    1    7870    4510      3360
98    1    1760    1760         0
114   1    6240    3520      2720
158   1    3795    3795         0
238   1    2530    2530         0
336   1    4345    4345         0
355   1    4070    4070         0
401   1    3905    3905         0
409   1    3355    3355         0
413   1    3520    3520         0
415   1    3300    3300         0
425   1    3135    3135         0
430   1    4730    4730         0
446   1    5575    3575      2000
554   1    8125    4125      4000
558   1    1815    1815         0
563   1    1595    1595         0
575   1     880     880         0
;

