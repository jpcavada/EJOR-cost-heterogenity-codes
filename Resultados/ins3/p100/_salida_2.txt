Iter 101
MasterProb = 236174

s [*] :=
1  100
2   39
3   98
4   97
5  101
;

SubProb = -86352.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 102
MasterProb = 180979

s [*] :=
1  100
2   92
3   97
4   23
5   71
;

SubProb = -29429.4
d = 47

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 103
MasterProb = 180979

s [*] :=
1  65
2  56
3  40
4  97
5  98
;

SubProb = -32033.9
d = 75

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 104
MasterProb = 180979

s [*] :=
1  100
2   73
3  101
4  102
5  103
;

SubProb = -21586.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 105
MasterProb = 176256

s [*] :=
1   98
2   95
3  101
4  102
5  103
;

SubProb = -15979
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 106
MasterProb = 176242

s [*] :=
1   99
2   36
3  101
4  102
5  103
;

SubProb = -13930.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 107
MasterProb = 175234

s [*] :=
1   7
2  82
3   8
4  88
5  96
;

SubProb = -8201.13
d = 30

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 108
MasterProb = 172948

s [*] :=
1   49
2   95
3  101
4  102
5  103
;

SubProb = -3602.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 109
MasterProb = 171562

s [*] :=
1  95
2  89
3  47
4  54
5  83
;

SubProb = -11794.6
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 110
MasterProb = 165933

s [*] :=
1  68
2  35
3  48
4  97
5  96
;

SubProb = -9656.05
d = 124

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 163982

s [*] :=
1  30
2  98
3  19
4  63
5  95
;

SubProb = -10676.8
d = 61

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 112
MasterProb = 160997

s [*] :=
1  13
2  38
3  80
4  49
5  97
;

SubProb = -3913.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 113
MasterProb = 160747

s [*] :=
1  52
2  29
3  76
4  75
5  98
;

SubProb = -5957.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 114
MasterProb = 159580

s [*] :=
1  97
2   6
3  81
4  90
5  95
;

SubProb = -7025.31
d = 44

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4895

Iter 115
MasterProb = 158721

s [*] :=
1  38
2  48
3  49
4  98
5  39
;

SubProb = -6890.45
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 116
MasterProb = 157097

s [*] :=
1  89
2  45
3  40
4  98
5  15
;

SubProb = -6317.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 117
MasterProb = 155515

s [*] :=
1   6
2  16
3  76
4  22
5  21
;

SubProb = -4418.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 118
MasterProb = 154811

s [*] :=
1  96
2  12
3  16
4  52
5  81
;

SubProb = -4943.21
d = 118

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 119
MasterProb = 154363

s [*] :=
1  44
2  19
3  79
4  42
5  81
;

SubProb = -5049.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 120
MasterProb = 153562

s [*] :=
1  26
2  20
3  81
4  97
5  85
;

SubProb = -6434.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 121
MasterProb = 152871

s [*] :=
1   6
2  17
3  50
4  85
5  32
;

SubProb = -4617.31
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 122
MasterProb = 152551

s [*] :=
1  81
2  42
3  71
4  29
5  49
;

SubProb = -2736.73
d = 57

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 123
MasterProb = 152315

s [*] :=
1  10
2  64
3  69
4  32
5  95
;

SubProb = -2453.09
d = 68

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 124
MasterProb = 152249

s [*] :=
1   96
2   11
3   22
4   17
5  101
;

SubProb = -3681.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 125
MasterProb = 151943

s [*] :=
1   73
2   48
3  101
4  102
5  103
;

SubProb = -4256.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 126
MasterProb = 151943

s [*] :=
1  100
2   97
3   56
4   13
5   95
;

SubProb = -4399.51
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 127
MasterProb = 151328

s [*] :=
1   70
2  100
3    6
4   68
5   75
;

SubProb = -3084.98
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 128
MasterProb = 150627

s [*] :=
1   8
2  72
3  46
4  17
5  64
;

SubProb = -3838.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 129
MasterProb = 150340

s [*] :=
1  21
2  26
3  40
4  74
5  38
;

SubProb = -2585.84
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 130
MasterProb = 150227

s [*] :=
1  19
2  24
3  30
4  97
5  57
;

SubProb = -4285.4
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 131
MasterProb = 149312

s [*] :=
1  95
2  26
3  83
4  81
5  60
;

SubProb = -4471.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 132
MasterProb = 148997

s [*] :=
1   34
2   21
3   27
4    8
5  100
;

SubProb = -4071
d = 45

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 133
MasterProb = 148701

s [*] :=
1   49
2   26
3   40
4   81
5  101
;

SubProb = -2145.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 134
MasterProb = 148407

s [*] :=
1  75
2  57
3  17
4  39
5  25
;

SubProb = -4749.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 135
MasterProb = 147769

s [*] :=
1  65
2  26
3  40
4  67
5  14
;

SubProb = -1209.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 136
MasterProb = 147745

s [*] :=
1  78
2  39
3  61
4  44
5  14
;

SubProb = -2961.87
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 137
MasterProb = 147483

s [*] :=
1  98
2  76
3  74
4  10
5  80
;

SubProb = -3058.92
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 138
MasterProb = 147343

s [*] :=
1   8
2  97
3  63
4  16
5  95
;

SubProb = -3270.15
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 139
MasterProb = 147262

s [*] :=
1  68
2  33
3  49
4  24
5  95
;

SubProb = -2758.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 140
MasterProb = 147046

s [*] :=
1   84
2   53
3  100
4   38
5   24
;

SubProb = -3657.49
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 141
MasterProb = 146859

s [*] :=
1  16
2  51
3  83
4  49
5  97
;

SubProb = -2714.86
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 142
MasterProb = 146736

s [*] :=
1   19
2   98
3   27
4   90
5  100
;

SubProb = -702.899
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 143
MasterProb = 146605

s [*] :=
1  45
2  72
3  32
4  57
5  21
;

SubProb = -1622.05
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 144
MasterProb = 146559

s [*] :=
1  56
2   8
3  81
4  42
5  37
;

SubProb = -4873.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 145
MasterProb = 145680

s [*] :=
1  61
2  60
3  78
4  44
5  14
;

SubProb = -4472.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 146
MasterProb = 143684

s [*] :=
1  100
2   64
3   74
4   97
5   15
;

SubProb = -2126.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 147
MasterProb = 143421

s [*] :=
1   9
2  26
3  40
4  13
5  20
;

SubProb = -1805.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 148
MasterProb = 143289

s [*] :=
1  100
2   54
3   38
4   66
5   56
;

SubProb = -2196.25
d = 21

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 149
MasterProb = 143174

s [*] :=
1   6
2  20
3  15
4  98
5  63
;

SubProb = -1749.44
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 150
MasterProb = 142897

s [*] :=
1  100
2   25
3   85
4   51
5   95
;

SubProb = -4170.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 151
MasterProb = 142443

s [*] :=
1   73
2   44
3  101
4  102
5  103
;

SubProb = -1623.08
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 152
MasterProb = 142399

s [*] :=
1  41
2  37
3  67
4  35
5  90
;

SubProb = -2325.35
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 153
MasterProb = 142269

s [*] :=
1  10
2  63
3  79
4  80
5  52
;

SubProb = -3679.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 154
MasterProb = 141994

s [*] :=
1   99
2    7
3  101
4  102
5  103
;

SubProb = -2591.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 155
MasterProb = 141966

s [*] :=
1  95
2  56
3  40
4  39
5  14
;

SubProb = -1129.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 156
MasterProb = 141882

s [*] :=
1  40
2  30
3  44
4  90
5  65
;

SubProb = -1400.1
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 157
MasterProb = 141786

s [*] :=
1  86
2  74
3  27
4  36
5   7
;

SubProb = 674.463
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Problema Entero
MasterProb = 196561

fo1 = 79020
fo2 = 117541

x[j] [*] :=
 99  1
110  1
175  1
260  1
282  1
322  1
338  1
354  1
373  1
376  1
381  1
382  1
394  1
486  1
537  1
539  1
543  1
549  1
555  1
576  1
;

aa[i,j] [*,*]
:    99 110 175 260 282 322 338 354 373 376 381 382 394 486 537 539 543 549 555 :=
1     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
18    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
20    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
33    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
36    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
41    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
43    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
45    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
49    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
53    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
62    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
72    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
77    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
80    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
84    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
90    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
99    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   576    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    1
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    1
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    1
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    1
98    0
99    0
100   1
;

vi[i] [*] :=
 2  1
 3  1
 4  1
 5  1
 9  1
11  1
12  1
14  1
21  1
23  1
30  1
31  1
91  1
92  1
93  1
94  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
99    1        0       0         0
110   1    10810    4730      6080
175   1     3520    3520         0
260   1     3795    3795         0
282   1     3570    3410       160
322   1     3905    3905         0
338   1      880     880         0
354   1     3850    3850         0
373   1     3795    3795         0
376   1     4070    4070         0
381   1    10555    5115      5440
382   1      880     880         0
394   1     3575    3575         0
486   1     1595    1595         0
537   1     6250    3850      2400
539   1     4110    3630       480
543   1     4455    4455         0
549   1     4070    4070         0
555   1      880     880         0
576   1     4455    4455         0
;

