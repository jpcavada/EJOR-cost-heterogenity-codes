Iter 100
MasterProb = 413693

s [*] :=
1  99
2  96
3  97
4  95
5  98
;

SubProb = -153047
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 101
MasterProb = 290442

s [*] :=
1  92
2  94
3  90
4  86
5  91
;

SubProb = -109119
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 102
MasterProb = 184682

s [*] :=
1  99
2  93
3  97
4  98
5  94
;

SubProb = -102369
d = 155

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 103
MasterProb = 184682

s [*] :=
1  95
2  94
3  96
4  97
5  98
;

SubProb = -106493
d = 75

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 104
MasterProb = 184682

s [*] :=
1  27
2  68
3  96
4  97
5  99
;

SubProb = -80095.1
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 105
MasterProb = 184682

s [*] :=
1  91
2  90
3  96
4  49
5  93
;

SubProb = -108504
d = 79

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 106
MasterProb = 184682

s [*] :=
1  92
2  86
3  87
4  90
5  45
;

SubProb = -80207.8
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 107
MasterProb = 184682

s [*] :=
1  91
2  89
3  95
4  93
5  49
;

SubProb = -102528
d = 139

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 108
MasterProb = 156034

s [*] :=
1  88
2  92
3  96
4  98
5  87
;

SubProb = -111158
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 109
MasterProb = 145046

s [*] :=
1  80
2  87
3  96
4  89
5  94
;

SubProb = -79057.3
d = 49

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 110
MasterProb = 131306

s [*] :=
1  98
2  88
3  89
4  97
5  91
;

SubProb = -82771.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 111
MasterProb = 127492

s [*] :=
1  99
2  89
3  86
4  90
5  88
;

SubProb = -72447.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 112
MasterProb = 121933

s [*] :=
1  87
2  88
3  95
4  86
5  51
;

SubProb = -49634.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 113
MasterProb = 116569

s [*] :=
1   90
2   11
3  100
4  101
5  102
;

SubProb = -13498
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 114
MasterProb = 112073

s [*] :=
1  95
2  72
3  38
4  92
5  54
;

SubProb = -36676
d = 64

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 115
MasterProb = 110934

s [*] :=
1   3
2  33
3  93
4  97
5  88
;

SubProb = -24167.4
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 116
MasterProb = 109871

s [*] :=
1  89
2  99
3  44
4  45
5  18
;

SubProb = -15622.6
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 117
MasterProb = 108726

s [*] :=
1   11
2   93
3  100
4  101
5  102
;

SubProb = -11798.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 118
MasterProb = 106956

s [*] :=
1  30
2   8
3   2
4  80
5  87
;

SubProb = -15314.2
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 119
MasterProb = 105920

s [*] :=
1  60
2  40
3  39
4  87
5  28
;

SubProb = -18798.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 120
MasterProb = 104676

s [*] :=
1  59
2  27
3  63
4   7
5   5
;

SubProb = -13987.1
d = 99

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 121
MasterProb = 103168

s [*] :=
1   20
2   27
3  100
4  101
5  102
;

SubProb = -5677.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 122
MasterProb = 101971

s [*] :=
1  38
2  99
3  24
4  23
5  98
;

SubProb = -10007.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 123
MasterProb = 101422

s [*] :=
1   4
2  52
3  85
4  95
5  10
;

SubProb = -7393.95
d = 33

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 124
MasterProb = 100441

s [*] :=
1  14
2  33
3   7
4  96
5  49
;

SubProb = -8680.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 125
MasterProb = 99603.2

s [*] :=
1   30
2   26
3   64
4   70
5  100
;

SubProb = -10992.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 126
MasterProb = 97782.5

s [*] :=
1  62
2  64
3  61
4  36
5  46
;

SubProb = -6972.86
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 127
MasterProb = 97205.7

s [*] :=
1  78
2  33
3  94
4  58
5  57
;

SubProb = -6875.36
d = 50

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 128
MasterProb = 96486.3

s [*] :=
1   56
2   37
3  100
4  101
5  102
;

SubProb = -6011.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 129
MasterProb = 96163.5

s [*] :=
1   8
2  35
3  95
4  87
5  23
;

SubProb = -17067.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 130
MasterProb = 95504.9

s [*] :=
1  56
2  23
3  79
4  68
5  73
;

SubProb = -10257.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 131
MasterProb = 94880.3

s [*] :=
1  28
2  71
3  54
4  63
5  20
;

SubProb = -8802.11
d = 114

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 132
MasterProb = 94643.8

s [*] :=
1  87
2  92
3   7
4  10
5  80
;

SubProb = -8930.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 133
MasterProb = 94341.8

s [*] :=
1  37
2  72
3  79
4  97
5  65
;

SubProb = -7345.64
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 134
MasterProb = 94070.8

s [*] :=
1    4
2   94
3   85
4   51
5  100
;

SubProb = -9930.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 135
MasterProb = 92314.8

s [*] :=
1  36
2  66
3   3
4  13
5   2
;

SubProb = -5577.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 136
MasterProb = 92073.8

s [*] :=
1  42
2  90
3  51
4  75
5  63
;

SubProb = -5371.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 137
MasterProb = 91854.4

s [*] :=
1  59
2  48
3  38
4  92
5  22
;

SubProb = -3801.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 138
MasterProb = 91649

s [*] :=
1  25
2  47
3  37
4  66
5  39
;

SubProb = -4346.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 139
MasterProb = 91553.8

s [*] :=
1   20
2   11
3  100
4  101
5  102
;

SubProb = -6015.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 140
MasterProb = 91012.8

s [*] :=
1  73
2  36
3  24
4  27
5  98
;

SubProb = -6871.33
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 141
MasterProb = 90565.2

s [*] :=
1   2
2  75
3  19
4  89
5   9
;

SubProb = -4592.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 142
MasterProb = 89965.1

s [*] :=
1  52
2  50
3  33
4  56
5  95
;

SubProb = -7176.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 143
MasterProb = 89730.5

s [*] :=
1  65
2  15
3  58
4  20
5  79
;

SubProb = -6957.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 144
MasterProb = 89140.3

s [*] :=
1  14
2  84
3  17
4  91
5  61
;

SubProb = -7903.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 145
MasterProb = 88747.7

s [*] :=
1  17
2   6
3  70
4  25
5  98
;

SubProb = -5679.97
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 146
MasterProb = 88454.1

s [*] :=
1   12
2   85
3  100
4  101
5  102
;

SubProb = -2747.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 147
MasterProb = 88384.3

s [*] :=
1  76
2  26
3  29
4  95
5   7
;

SubProb = -7780.57
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 148
MasterProb = 87798.3

s [*] :=
1   53
2   26
3   47
4   93
5  100
;

SubProb = -5050.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 149
MasterProb = 87102.1

s [*] :=
1  50
2  19
3  55
4  96
5  56
;

SubProb = -8261.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 150
MasterProb = 85782.4

s [*] :=
1  28
2  21
3  75
4  92
5  66
;

SubProb = -2934.09
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 151
MasterProb = 85679.3

s [*] :=
1  29
2  28
3  43
4  38
5  91
;

SubProb = -7104.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 152
MasterProb = 84330.1

s [*] :=
1   6
2  97
3  51
4  89
5  27
;

SubProb = -8945.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 153
MasterProb = 83256.8

s [*] :=
1  18
2   8
3  24
4  93
5  39
;

SubProb = -4152.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 154
MasterProb = 83152.3

s [*] :=
1  26
2  47
3  75
4  45
5  31
;

SubProb = -5561.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 155
MasterProb = 82876.5

s [*] :=
1  42
2  84
3  16
4  25
5   7
;

SubProb = -3396.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 156
MasterProb = 82648.8

s [*] :=
1   12
2   11
3  100
4  101
5  102
;

SubProb = -1007.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 157
MasterProb = 82601.1

s [*] :=
1   85
2   37
3  100
4  101
5  102
;

SubProb = -1537.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 158
MasterProb = 82495.9

s [*] :=
1  22
2  73
3   9
4  14
5  72
;

SubProb = -2200.39
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 159
MasterProb = 82483.4

s [*] :=
1  89
2  84
3  44
4  75
5  58
;

SubProb = -1306.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 160
MasterProb = 82466.6

s [*] :=
1   20
2   11
3  100
4  101
5  102
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Problema Entero
MasterProb = 263809

fo1 = 75955
fo2 = 187854

x[j] [*] :=
 68  1
 72  1
 89  1
101  1
115  1
120  1
121  1
155  1
157  1
178  1
184  1
190  1
199  1
220  1
251  1
261  1
262  1
293  1
298  1
299  1
;

aa[i,j] [*,*]
:   68  72  89 101 115 120 121 155 157 178 184 190 199 220 251 261 262 293 298 :=
1    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
20   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
26   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
40   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
49   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
51   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
54   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
56   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
57   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
62   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
64   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
65   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
68   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
72   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
77   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
79   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
80   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
85   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
87   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
88   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
89   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
92   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
94   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
95   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
96   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
97   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
98   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
99   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0

:  299    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   1
22   0
23   0
24   0
25   0
26   0
27   0
28   1
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   1
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   1
76   0
77   0
78   0
79   0
80   0
81   0
82   0
83   0
84   0
85   0
86   0
87   0
88   0
89   0
90   0
91   0
92   1
93   0
94   0
95   0
96   0
97   0
98   0
99   0
;

vi[i] [*] :=
 2  1
 3  1
 4  1
 5  1
 6  1
 7  1
 8  1
12  1
13  1
15  1
18  1
20  1
24  1
81  1
82  1
83  1
85  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
68    1        0       0         0
72    1        0       0         0
89    1        0       0         0
101   1     3520    3520         0
115   1     4290    4290         0
120   1     3355    3355         0
121   1     3520    3520         0
155   1     4125    4125         0
157   1     3520    3520         0
178   1     3300    3300         0
184   1     4235    4235         0
190   1     3630    3630         0
199   1     4775    3575      1200
220   1      880     880         0
251   1    16525    4125     12400
261   1     4950    4950         0
262   1      935     935         0
293   1     5225    5225         0
298   1     4510    4510         0
299   1     4660    4180       480
;

