Iter 87
MasterProb = 159766

s [*] :=
1  85
2  31
3  43
4  84
5  86
;

SubProb = -143756
d = 173

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 88
MasterProb = 74082.2

s [*] :=
1  78
2  83
3  66
4  74
5  82
;

SubProb = -103467
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 89
MasterProb = 64458

s [*] :=
1  62
2  81
3  48
4  39
5  23
;

SubProb = -40663.2
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 90
MasterProb = 64081

s [*] :=
1  19
2  75
3   4
4  85
5  81
;

SubProb = -7640.23
d = 27

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 91
MasterProb = 58512.1

s [*] :=
1  11
2  86
3  87
4  88
5  89
;

SubProb = -3820.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 92
MasterProb = 55759.4

s [*] :=
1   5
2  35
3  32
4  61
5  82
;

SubProb = -1876.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 93
MasterProb = 55707.7

s [*] :=
1  83
2  84
3  87
4  88
5  89
;

SubProb = -2378.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 94
MasterProb = 55312.5

s [*] :=
1  11
2  86
3  87
4  88
5  89
;

SubProb = -1962.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 95
MasterProb = 55312.5

s [*] :=
1   4
2  38
3   2
4  85
5  40
;

SubProb = -1459.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 96
MasterProb = 54964.3

s [*] :=
1  84
2  86
3  87
4  88
5  89
;

SubProb = -1391.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 97
MasterProb = 54964.3

s [*] :=
1  85
2  63
3  82
4   5
5  73
;

SubProb = -2631.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 98
MasterProb = 53867.5

s [*] :=
1  15
2  59
3   9
4  82
5  35
;

SubProb = -1097.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 99
MasterProb = 53583.9

s [*] :=
1  44
2  81
3  87
4  88
5  89
;

SubProb = -572.988
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 100
MasterProb = 53212.3

s [*] :=
1  82
2  19
3   5
4  85
5  16
;

SubProb = -895.945
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 101
MasterProb = 53025.1

s [*] :=
1  12
2  84
3  87
4  88
5  89
;

SubProb = -856.303
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 102
MasterProb = 53019.6

s [*] :=
1   4
2  19
3  23
4  49
5  71
;

SubProb = -424.821
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 103
MasterProb = 52996.6

s [*] :=
1  78
2  82
3  13
4  38
5  58
;

SubProb = -608.331
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 104
MasterProb = 52945.5

s [*] :=
1  82
2  48
3  71
4  57
5  83
;

SubProb = -1008.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 105
MasterProb = 52874.1

s [*] :=
1  37
2  81
3  87
4  88
5  89
;

SubProb = -1233.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 106
MasterProb = 52630.1

s [*] :=
1  35
2  14
3  13
4  72
5  74
;

SubProb = -1037.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 107
MasterProb = 52306.4

s [*] :=
1  81
2  84
3  87
4  88
5  89
;

SubProb = -658.794
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 108
MasterProb = 52248.6

s [*] :=
1  59
2  43
3  86
4  52
5   1
;

SubProb = -263.615
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 109
MasterProb = 52248.6

s [*] :=
1  83
2   9
3  13
4  70
5  62
;

SubProb = -458.041
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 110
MasterProb = 52191.5

s [*] :=
1  78
2  15
3  13
4  85
5  56
;

SubProb = -633.537
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 111
MasterProb = 52106

s [*] :=
1  81
2  86
3  87
4  88
5  89
;

SubProb = -883.981
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 112
MasterProb = 52076.9

s [*] :=
1  84
2  55
3  87
4  88
5  89
;

SubProb = -327.956
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 113
MasterProb = 51987.7

s [*] :=
1  45
2  11
3  87
4  88
5  89
;

SubProb = -149.556
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 114
MasterProb = 51943.1

s [*] :=
1  69
2  84
3  41
4  87
5  88
;

SubProb = -167.402
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 115
MasterProb = 51925.8

s [*] :=
1  11
2  86
3  87
4  88
5  89
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Problema Entero
MasterProb = 100339

fo1 = 70870
fo2 = 29469

x[j] [*] :=
 65  1
 89  1
134  1
139  1
188  1
246  1
281  1
310  1
311  1
338  1
414  1
421  1
460  1
461  1
484  1
495  1
552  1
556  1
557  1
560  1
;

aa[i,j] [*,*]
:   65  89 134 139 188 246 281 310 311 338 414 421 460 461 484 495 552 556 557 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
3    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
7    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
10   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
13   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
17   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
18   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
20   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
22   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
23   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
24   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
36   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
40   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
42   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
44   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
49   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
51   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
53   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
59   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
67   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
69   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
72   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
77   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
78   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
80   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
85   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1

:  560    :=
1    0
2    0
3    0
4    0
5    1
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   1
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   1
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   1
83   0
84   0
85   1
86   0
;

vi[i] [*] :=
26  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
65    1       0       0         0
89    1     880     880         0
134   1    4375    3575       800
139   1    9590    4070      5520
188   1    4945    4785       160
246   1    5190    4070      1120
281   1    2640    2640         0
310   1    2915    2915         0
311   1    4070    4070         0
338   1    3355    3355         0
414   1    3300    3300         0
421   1    3355    3355         0
460   1    3630    3630         0
461   1    3795    3795         0
484   1    3795    3795         0
495   1    2805    2805         0
552   1    6950    4950      2000
556   1     880     880         0
557   1     605     605         0
560   1    3795    3795         0
;

