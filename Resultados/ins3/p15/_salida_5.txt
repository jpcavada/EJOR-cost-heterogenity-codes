Iter 61
MasterProb = 26771.3

s [*] :=
1   7
2  59
3   1
4  46
5  55
;

SubProb = -614.869
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 62
MasterProb = 26633.2

s [*] :=
1  40
2  39
3  61
4  62
5  63
;

SubProb = -525.093
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 63
MasterProb = 26166.7

s [*] :=
1  57
2  42
3  35
4  53
5  37
;

SubProb = -484.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 64
MasterProb = 26115.8

s [*] :=
1  35
2  34
3  61
4  62
5  63
;

SubProb = -432.548
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 65
MasterProb = 26010.7

s [*] :=
1  24
2  54
3  53
4  35
5  61
;

SubProb = -322.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1980

Iter 66
MasterProb = 25991.7

s [*] :=
1   5
2  43
3  61
4  62
5  63
;

SubProb = -256.714
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 67
MasterProb = 25899.2

s [*] :=
1  47
2  10
3  55
4   9
5  57
;

SubProb = -840.862
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 68
MasterProb = 25624

s [*] :=
1  53
2  35
3  61
4  62
5  63
;

SubProb = -299.146
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 69
MasterProb = 25553

s [*] :=
1  26
2  47
3  61
4  62
5  63
;

SubProb = -34.6457
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 70
MasterProb = 25553

s [*] :=
1  32
2   3
3  61
4  62
5  63
;

SubProb = -266.122
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 71
MasterProb = 25487.6

s [*] :=
1  53
2  22
3  61
4  62
5  63
;

SubProb = -118.462
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 72
MasterProb = 25428.7

s [*] :=
1  55
2  47
3  46
4  13
5  61
;

SubProb = -549.329
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 73
MasterProb = 25428.3

s [*] :=
1  12
2  47
3  46
4  59
5  13
;

SubProb = -497.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 74
MasterProb = 25428.3

s [*] :=
1  42
2  28
3  61
4  62
5  63
;

SubProb = -242.541
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 75
MasterProb = 25416.8

s [*] :=
1  42
2  35
3  61
4  62
5  63
;

SubProb = -136.641
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 76
MasterProb = 25405.4

s [*] :=
1  10
2  46
3  61
4  62
5  63
;

SubProb = -82.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 77
MasterProb = 25405.4

s [*] :=
1   9
2  59
3  43
4  61
5  62
;

SubProb = -160.417
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 78
MasterProb = 25405.4

s [*] :=
1  50
2  32
3  61
4  62
5  63
;

SubProb = -318.542
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 79
MasterProb = 25372.9

s [*] :=
1   1
2  41
3  43
4  61
5  62
;

SubProb = -227.964
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 80
MasterProb = 25362.7

s [*] :=
1  15
2  20
3  61
4  62
5  63
;

SubProb = -201.061
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 81
MasterProb = 25300.8

s [*] :=
1  41
2  12
3  48
4  10
5  26
;

SubProb = -292.286
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 82
MasterProb = 25300.8

s [*] :=
1   5
2  44
3  61
4  62
5  63
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 27665

fo1 = 27665
fo2 = 0

x[j] [*] :=
 10  1
 35  1
 37  1
 44  1
 45  1
 49  1
 74  1
116  1
126  1
127  1
182  1
219  1
232  1
236  1
273  1
308  1
311  1
341  1
351  1
356  1
;

aa[i,j] [*,*]
:   10  35  37  44  45  49  74 116 126 127 182 219 232 236 273 308 311 341 351 :=
1    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
21   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
27   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
30   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
32   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
35   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
37   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
40   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
41   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
47   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
48   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
49   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
56   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0

:  356    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    1
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   1
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   1
60   0
;

vi[i] [*] :=
;

:   x[i]   c[i] travel[i] delay[i]    :=
10    1       0       0       0
35    1       0       0       0
37    1       0       0       0
44    1       0       0       0
45    1       0       0       0
49    1       0       0       0
74    1    1485    1485       0
116   1    2860    2860       0
126   1    1210    1210       0
127   1       0       0       0
182   1    3520    3520       0
219   1    1760    1760       0
232   1    2860    2860       0
236   1       0       0       0
273   1    2640    2640       0
308   1    3520    3520       0
311   1    2805    2805       0
341   1     605     605       0
351   1    2640    2640       0
356   1    1760    1760       0
;

