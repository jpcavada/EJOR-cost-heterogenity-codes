Iter 87
MasterProb = 141658

s [*] :=
1  86
2  65
3  81
4  85
5  84
;

SubProb = -166260
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 88
MasterProb = 55722.8

s [*] :=
1  23
2  86
3  77
4  82
5  83
;

SubProb = -94468.7
d = 38

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 89
MasterProb = 55722.8

s [*] :=
1  41
2  21
3  82
4  74
5  54
;

SubProb = -5920.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 90
MasterProb = 55231

s [*] :=
1  82
2  85
3  87
4  88
5  89
;

SubProb = -1308.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 91
MasterProb = 55231

s [*] :=
1  30
2  56
3  15
4  82
5  81
;

SubProb = -3004.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 92
MasterProb = 55221.2

s [*] :=
1  74
2  51
3  83
4  57
5  82
;

SubProb = -2907.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 93
MasterProb = 53735

s [*] :=
1  27
2  86
3  87
4  88
5  89
;

SubProb = -518.738
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 94
MasterProb = 53678.6

s [*] :=
1  35
2  49
3  71
4  87
5  88
;

SubProb = -616.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 95
MasterProb = 53583.3

s [*] :=
1  30
2  42
3  81
4  29
5  54
;

SubProb = -793.939
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 96
MasterProb = 53496.7

s [*] :=
1   6
2  83
3  15
4  10
5  17
;

SubProb = -904.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 97
MasterProb = 53384.9

s [*] :=
1  82
2  55
3  87
4  88
5  89
;

SubProb = -695.043
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 98
MasterProb = 53252.8

s [*] :=
1   2
2  84
3  87
4  88
5  89
;

SubProb = -575.287
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 99
MasterProb = 53156.9

s [*] :=
1  11
2  85
3  87
4  88
5  89
;

SubProb = -1619.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 100
MasterProb = 52609.3

s [*] :=
1  79
2  63
3   6
4  15
5  82
;

SubProb = -653.522
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 101
MasterProb = 52510.3

s [*] :=
1  56
2  11
3  87
4  88
5  89
;

SubProb = -955.705
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 102
MasterProb = 52384.6

s [*] :=
1  35
2  86
3  83
4   4
5  21
;

SubProb = -922.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 103
MasterProb = 52148.3

s [*] :=
1   5
2   7
3  32
4  81
5  62
;

SubProb = -159.338
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 104
MasterProb = 52140.2

s [*] :=
1  39
2  35
3  86
4  14
5  81
;

SubProb = -481.037
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 105
MasterProb = 52081.9

s [*] :=
1  33
2  84
3  32
4  87
5  88
;

SubProb = -426.503
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1210

Iter 106
MasterProb = 51982.9

s [*] :=
1  86
2  83
3  51
4  15
5  71
;

SubProb = -747.537
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 107
MasterProb = 51885.8

s [*] :=
1   5
2  41
3  17
4  10
5  73
;

SubProb = -742.567
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 108
MasterProb = 51799.1

s [*] :=
1   5
2  32
3  50
4  40
5  81
;

SubProb = -682.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 109
MasterProb = 51720.8

s [*] :=
1  77
2  84
3  87
4  88
5  89
;

SubProb = -255.535
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 110
MasterProb = 51685.8

s [*] :=
1  28
2  16
3  84
4  71
5  87
;

SubProb = -169.436
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 111
MasterProb = 51677.1

s [*] :=
1  38
2   5
3  43
4  72
5  87
;

SubProb = -380.277
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 112
MasterProb = 51629.7

s [*] :=
1  63
2  12
3  10
4   4
5  47
;

SubProb = -187.299
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 113
MasterProb = 51618.4

s [*] :=
1  14
2  84
3  50
4  42
5  40
;

SubProb = -381.312
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 114
MasterProb = 51555.3

s [*] :=
1  55
2  58
3  85
4  87
5  88
;

SubProb = -89.4422
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 115
MasterProb = 51551.9

s [*] :=
1  82
2  12
3  87
4  88
5  89
;

SubProb = 55.0186
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 90188

fo1 = 68160
fo2 = 22028

x[j] [*] :=
  4  1
 77  1
 99  1
259  1
265  1
300  1
307  1
310  1
314  1
410  1
418  1
453  1
465  1
478  1
485  1
487  1
525  1
550  1
555  1
564  1
;

aa[i,j] [*,*]
:    4  77  99 259 265 300 307 310 314 410 418 453 465 478 485 487 525 550 555 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
10   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
14   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
16   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
20   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
23   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
27   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
30   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
33   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
36   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
40   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
42   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
44   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
45   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
47   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
52   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
58   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
60   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
64   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
66   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
68   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
72   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
75   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
77   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
79   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
80   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
85   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:  564    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   1
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   1
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   0
83   0
84   0
85   0
86   0
;

vi[i] [*] :=
2  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
4     1        0       0         0
77    1        0       0         0
99    1     2915    2915         0
259   1     2035    2035         0
265   1     5500    5500         0
300   1     3740    3740         0
307   1     3520    3520         0
310   1     2915    2915         0
314   1     3905    3905         0
410   1     3135    3135         0
418   1     3520    3520         0
453   1    10795    4235      6560
465   1     3520    3520         0
478   1     3520    3520         0
485   1     4235    4235         0
487   1     3520    3520         0
525   1     2475    2475         0
550   1     4785    3905       880
555   1     3520    3520         0
564   1      605     605         0
;

