Iter 91
MasterProb = 345682

s [*] :=
1  88
2  89
3  85
4  90
5  87
;

SubProb = -216052
d = 204

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 92
MasterProb = 202377

s [*] :=
1  87
2  90
3  86
4  84
5  85
;

SubProb = -145716
d = 96

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 93
MasterProb = 193847

s [*] :=
1  83
2  24
3  89
4  84
5  49
;

SubProb = -92974.5
d = 85

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 94
MasterProb = 157174

s [*] :=
1  88
2  57
3  43
4  81
5  64
;

SubProb = -54302
d = 139

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 95
MasterProb = 136844

s [*] :=
1   8
2  86
3  88
4  79
5  85
;

SubProb = -62038.4
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 96
MasterProb = 136844

s [*] :=
1  81
2  58
3  89
4  31
5   2
;

SubProb = -54080.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 97
MasterProb = 125429

s [*] :=
1  18
2  40
3  86
4  90
5  82
;

SubProb = -98031.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 98
MasterProb = 111840

s [*] :=
1  62
2  72
3  78
4  28
5  82
;

SubProb = -42579.6
d = 100

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 99
MasterProb = 108670

s [*] :=
1  63
2  16
3  85
4  82
5  20
;

SubProb = -46231.5
d = 121

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 100
MasterProb = 100375

s [*] :=
1  81
2   1
3  88
4  34
5  18
;

SubProb = -30537.2
d = 74

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 101
MasterProb = 96563.8

s [*] :=
1   5
2  13
3  26
4  59
5  56
;

SubProb = -34819.3
d = 45

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 102
MasterProb = 94474.3

s [*] :=
1  72
2  35
3  18
4  59
5  33
;

SubProb = -18734.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 103
MasterProb = 92622.3

s [*] :=
1  51
2  12
3  90
4  31
5  82
;

SubProb = -14265.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 104
MasterProb = 90341.2

s [*] :=
1  66
2   2
3  79
4  75
5  20
;

SubProb = -14371.8
d = 135

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 105
MasterProb = 89281.5

s [*] :=
1  82
2  25
3  13
4  44
5  36
;

SubProb = -11369.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 106
MasterProb = 88790.5

s [*] :=
1  81
2  61
3  50
4  45
5  65
;

SubProb = -14817.8
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 107
MasterProb = 87558.5

s [*] :=
1  49
2  52
3  37
4  19
5  91
;

SubProb = -11000.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 108
MasterProb = 85876.2

s [*] :=
1  34
2  26
3  84
4  82
5  75
;

SubProb = -12715.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 109
MasterProb = 84600.5

s [*] :=
1  81
2   4
3  23
4  12
5   7
;

SubProb = -11985.7
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 110
MasterProb = 83955.4

s [*] :=
1  11
2  83
3  91
4  92
5  93
;

SubProb = -16771.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 111
MasterProb = 78699.4

s [*] :=
1  29
2  54
3  25
4  66
5  64
;

SubProb = -11660.3
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 112
MasterProb = 77803.6

s [*] :=
1  23
2  16
3  30
4  28
5  20
;

SubProb = -18203.5
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 113
MasterProb = 75729.2

s [*] :=
1  81
2   4
3   6
4  59
5  90
;

SubProb = -6683.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 114
MasterProb = 75213.5

s [*] :=
1  11
2  88
3  91
4  92
5  93
;

SubProb = -7617.03
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1485

Iter 115
MasterProb = 74793.6

s [*] :=
1  29
2  17
3  39
4  18
5  69
;

SubProb = -5065.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 116
MasterProb = 73917.9

s [*] :=
1  57
2  74
3  82
4  60
5  89
;

SubProb = -9084.07
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 117
MasterProb = 73417.1

s [*] :=
1  49
2  87
3   4
4  91
5  92
;

SubProb = -11498.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 118
MasterProb = 71658.6

s [*] :=
1   3
2  45
3  66
4  78
5  89
;

SubProb = -7662.08
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 119
MasterProb = 70900.3

s [*] :=
1  90
2  30
3  50
4  64
5  85
;

SubProb = -10962.2
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 120
MasterProb = 70320

s [*] :=
1  69
2  22
3  84
4  73
5  88
;

SubProb = -7713.23
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 121
MasterProb = 69276

s [*] :=
1   1
2  51
3  90
4   5
5  84
;

SubProb = -7142.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 122
MasterProb = 68713.6

s [*] :=
1  76
2  89
3  14
4  13
5  55
;

SubProb = -7496.52
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 123
MasterProb = 67579.2

s [*] :=
1  56
2  22
3  84
4  66
5  81
;

SubProb = -9190.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 124
MasterProb = 65769.3

s [*] :=
1   1
2   6
3  24
4  88
5  23
;

SubProb = -7171.81
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 125
MasterProb = 64963.1

s [*] :=
1  87
2  21
3  88
4  91
5  92
;

SubProb = -4552.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 126
MasterProb = 64591.4

s [*] :=
1  20
2  86
3  80
4  84
5   4
;

SubProb = -7590.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 127
MasterProb = 64273.7

s [*] :=
1  21
2  25
3   5
4  85
5  74
;

SubProb = -2535.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 128
MasterProb = 64135.6

s [*] :=
1  26
2   7
3  68
4  48
5   8
;

SubProb = -3557.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 129
MasterProb = 63877

s [*] :=
1   3
2  24
3  64
4  33
5   2
;

SubProb = -2588.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 130
MasterProb = 63411.6

s [*] :=
1  56
2  46
3  52
4  86
5  77
;

SubProb = -775.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 131
MasterProb = 63370.7

s [*] :=
1  77
2  23
3  20
4   6
5  51
;

SubProb = -1926.07
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 132
MasterProb = 63126.5

s [*] :=
1  70
2  88
3  91
4  92
5  93
;

SubProb = -1916.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 133
MasterProb = 62487.6

s [*] :=
1  66
2  86
3  29
4  65
5  74
;

SubProb = -2383.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 134
MasterProb = 62374.3

s [*] :=
1  87
2  20
3  91
4  92
5  93
;

SubProb = -1666.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 135
MasterProb = 61994.4

s [*] :=
1  89
2  59
3  54
4  23
5  38
;

SubProb = -1816.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 136
MasterProb = 61564

s [*] :=
1  56
2  82
3  91
4  92
5  93
;

SubProb = -846.854
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 137
MasterProb = 61528.2

s [*] :=
1  85
2  88
3  91
4  92
5  93
;

SubProb = -1111.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 138
MasterProb = 61302.2

s [*] :=
1  49
2  90
3  21
4  32
5  66
;

SubProb = -1637.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 139
MasterProb = 61219

s [*] :=
1  82
2  11
3  91
4  92
5  93
;

SubProb = -1351.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 140
MasterProb = 61219

s [*] :=
1   6
2  20
3  91
4  92
5  93
;

SubProb = -953.393
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 141
MasterProb = 61105

s [*] :=
1  45
2   1
3  72
4  14
5  91
;

SubProb = -1346.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 142
MasterProb = 61000.9

s [*] :=
1  49
2  83
3  91
4  92
5  93
;

SubProb = 22.0909
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1485

Problema Entero
MasterProb = 270411

fo1 = 63775
fo2 = 206636

x[j] [*] :=
 81  1
 87  1
 99  1
104  1
106  1
145  1
167  1
169  1
185  1
188  1
190  1
192  1
214  1
233  1
236  1
239  1
242  1
244  1
251  1
252  1
;

aa[i,j] [*,*]
:   81  87  99 104 106 145 167 169 185 188 190 192 214 233 236 239 242 244 251 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
3    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
9    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
10   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
25   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
30   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
34   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
36   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
40   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
50   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
56   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
60   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
61   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
64   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
70   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
75   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
77   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
78   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
79   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
80   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
85   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
87   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
89   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
90   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:  252    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   1
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   1
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   1
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   1
83   0
84   0
85   0
86   0
87   0
88   0
89   0
90   1
;

vi[i] [*] :=
 1  1
 6  1
11  1
13  1
15  1
19  1
28  1
57  1
65  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
81    1        0       0         0
87    1        0       0         0
99    1     3355    3355         0
104   1     3025    3025         0
106   1     4015    4015         0
145   1     3630    3630         0
167   1     3520    3520         0
169   1     2915    2915         0
185   1     2750    2750         0
188   1     3575    3575         0
190   1     4775    3575      1200
192   1     3520    3520         0
214   1     1760    1760         0
233   1      880     880         0
236   1      880     880         0
239   1      880     880         0
242   1    11750    4950      6800
244   1     5175    3575      1600
251   1     3795    3795         0
252   1     3575    3575         0
;

