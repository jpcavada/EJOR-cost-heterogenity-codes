Iter 101
MasterProb = 255999

s [*] :=
1   4
2  13
3  72
4  42
5  85
;

SubProb = -45116.3
d = 37

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 102
MasterProb = 249158

s [*] :=
1  23
2  13
3  92
4  11
5  27
;

SubProb = -49444
d = 60

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 103
MasterProb = 244394

s [*] :=
1   49
2    9
3  101
4  102
5  103
;

SubProb = -5654.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 104
MasterProb = 244394

s [*] :=
1   8
2  67
3  13
4  33
5  37
;

SubProb = -38893.9
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 105
MasterProb = 240546

s [*] :=
1   2
2  57
3  97
4  88
5  71
;

SubProb = -31202.3
d = 60

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 106
MasterProb = 231819

s [*] :=
1  51
2   1
3  10
4  49
5  78
;

SubProb = -18166.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 107
MasterProb = 230379

s [*] :=
1   3
2  37
3  11
4  82
5  72
;

SubProb = -22447.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 108
MasterProb = 227840

s [*] :=
1   42
2   71
3   74
4    6
5  101
;

SubProb = -13234.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 109
MasterProb = 224848

s [*] :=
1   15
2   71
3  101
4  102
5  103
;

SubProb = -12113.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 110
MasterProb = 223157

s [*] :=
1  90
2  78
3  72
4  68
5  19
;

SubProb = -27228
d = 164

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 111
MasterProb = 219340

s [*] :=
1   75
2   22
3   71
4   34
5  101
;

SubProb = -5221.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 112
MasterProb = 218914

s [*] :=
1  52
2  60
3  87
4  71
5  76
;

SubProb = -9199.05
d = 55

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 113
MasterProb = 217931

s [*] :=
1  47
2   1
3  90
4  74
5  49
;

SubProb = -5695.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 114
MasterProb = 216836

s [*] :=
1  57
2  61
3   7
4   6
5  63
;

SubProb = -12850.4
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 115
MasterProb = 211584

s [*] :=
1  63
2  44
3  11
4  74
5  43
;

SubProb = -14284.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 116
MasterProb = 211156

s [*] :=
1  96
2   3
3  84
4  14
5  18
;

SubProb = -10287.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 117
MasterProb = 210214

s [*] :=
1  42
2  53
3   2
4   4
5  69
;

SubProb = -16003.5
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 118
MasterProb = 208940

s [*] :=
1  79
2  67
3  10
4  32
5  19
;

SubProb = -10082.7
d = 74

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 119
MasterProb = 206460

s [*] :=
1  96
2  77
3  84
4  71
5  29
;

SubProb = -7739.5
d = 42

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 120
MasterProb = 206007

s [*] :=
1  66
2  54
3  46
4   3
5  76
;

SubProb = -8795.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 121
MasterProb = 205474

s [*] :=
1  54
2  27
3  32
4  59
5   8
;

SubProb = -6815.13
d = 38

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 122
MasterProb = 205129

s [*] :=
1  42
2  95
3  47
4  16
5  56
;

SubProb = -2106.94
d = 150

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 123
MasterProb = 204993

s [*] :=
1  93
2  25
3   4
4  23
5  40
;

SubProb = -8443.35
d = 50

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 124
MasterProb = 204411

s [*] :=
1   2
2  49
3  86
4  68
5  78
;

SubProb = -9368.34
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 125
MasterProb = 203797

s [*] :=
1  12
2  34
3  14
4  86
5  98
;

SubProb = -2742.7
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 126
MasterProb = 203722

s [*] :=
1   91
2    7
3   98
4  101
5  102
;

SubProb = -2862.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2310

Iter 127
MasterProb = 203551

s [*] :=
1   42
2   15
3   14
4  101
5  102
;

SubProb = -2007.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 128
MasterProb = 203472

s [*] :=
1  38
2  71
3  82
4  90
5   3
;

SubProb = -5725.31
d = 46

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 129
MasterProb = 203185

s [*] :=
1  11
2  29
3  10
4  12
5   7
;

SubProb = -8840.71
d = 144

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 130
MasterProb = 201464

s [*] :=
1   42
2   83
3   14
4  101
5  102
;

SubProb = -1989.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 131
MasterProb = 201425

s [*] :=
1  21
2   5
3  79
4  69
5  82
;

SubProb = -5765.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 132
MasterProb = 201304

s [*] :=
1  97
2  10
3  34
4  37
5  41
;

SubProb = -7678.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 133
MasterProb = 201150

s [*] :=
1  44
2  42
3  86
4  73
5  59
;

SubProb = -6798.27
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 134
MasterProb = 200210

s [*] :=
1  32
2  46
3  21
4   1
5  58
;

SubProb = -2746.41
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 135
MasterProb = 199944

s [*] :=
1  96
2  68
3  87
4  59
5  93
;

SubProb = -1018.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 136
MasterProb = 199916

s [*] :=
1  77
2  72
3  47
4  58
5  19
;

SubProb = -6268.64
d = 164

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 137
MasterProb = 199523

s [*] :=
1   21
2   83
3   16
4  101
5  102
;

SubProb = -990.432
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2145

Iter 138
MasterProb = 199464

s [*] :=
1  30
2  78
3  95
4  63
5  15
;

SubProb = -371.314
d = 119

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 139
MasterProb = 199462

s [*] :=
1  96
2  77
3  68
4  99
5  53
;

SubProb = -2048.56
d = 57

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 140
MasterProb = 199311

s [*] :=
1  84
2   4
3  28
4  20
5  15
;

SubProb = -4383.8
d = 53

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 141
MasterProb = 199132

s [*] :=
1   80
2    9
3  101
4  102
5  103
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 428066

fo1 = 83595
fo2 = 344471

x[j] [*] :=
119  1
132  1
169  1
170  1
187  1
188  1
212  1
246  1
251  1
257  1
258  1
276  1
277  1
282  1
283  1
308  1
311  1
314  1
323  1
333  1
;

aa[i,j] [*,*]
:   119 132 169 170 187 188 212 246 251 257 258 276 277 282 283 308 311 314 323 :=
1     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
3     0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
20    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
24    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
31    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
33    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
39    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
48    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
53    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
59    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
64    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
68    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
75    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
77    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
80    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
81    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
91    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
93    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
94    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
96    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0

:   333    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    1
17    0
18    0
19    0
20    0
21    1
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    1
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 7  1
13  1
18  1
29  1
34  1
45  1
46  1
66  1
70  1
72  1
89  1
98  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
119   1    4290    4290         0
132   1    1925    1925         0
169   1    3520    3520         0
170   1    3410    3410         0
187   1    8915    3795      5120
188   1    1485    1485         0
212   1    5550    2750      2800
246   1    4125    4125         0
251   1    3280    2640       640
257   1    1320    1320         0
258   1    3850    3850         0
276   1    1870    1870         0
277   1    3520    3520         0
282   1    3795    3795         0
283   1    6525    4125      2400
308   1    8525    4125      4400
311   1    4070    4070         0
314   1    9440    3520      5920
323   1    2035    2035         0
333   1    2145    2145         0
;

