Iter 101
MasterProb = 204739

s [*] :=
1  40
2  79
3  54
4   5
5  71
;

SubProb = -26211.9
d = 96

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 102
MasterProb = 196131

s [*] :=
1  63
2  71
3  10
4  49
5  33
;

SubProb = -38960
d = 75

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 103
MasterProb = 185995

s [*] :=
1   86
2   76
3   39
4   82
5  101
;

SubProb = -13527.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 104
MasterProb = 184767

s [*] :=
1   8
2  44
3  46
4  71
5  68
;

SubProb = -15080.2
d = 69

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 105
MasterProb = 182354

s [*] :=
1  71
2  85
3  93
4  64
5  87
;

SubProb = -13920.5
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 106
MasterProb = 180917

s [*] :=
1  54
2  88
3  22
4  25
5  13
;

SubProb = -9006.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 107
MasterProb = 179507

s [*] :=
1  42
2  86
3   5
4  72
5  11
;

SubProb = -12207.9
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 108
MasterProb = 175763

s [*] :=
1  18
2  40
3  45
4  37
5  92
;

SubProb = -14075.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 109
MasterProb = 175080

s [*] :=
1  59
2  21
3  84
4  72
5  68
;

SubProb = -7325.49
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 110
MasterProb = 174135

s [*] :=
1   4
2  11
3  41
4  82
5  10
;

SubProb = -6606.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 111
MasterProb = 173345

s [*] :=
1  20
2  72
3  56
4  44
5  74
;

SubProb = -9646.39
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 112
MasterProb = 170518

s [*] :=
1  17
2  82
3  54
4  52
5  24
;

SubProb = -15719.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 113
MasterProb = 169728

s [*] :=
1   90
2   83
3   39
4  101
5  102
;

SubProb = -6028.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2365

Iter 114
MasterProb = 168584

s [*] :=
1   42
2   83
3   49
4   78
5  101
;

SubProb = -4966.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 115
MasterProb = 168559

s [*] :=
1  83
2  13
3  87
4  84
5  78
;

SubProb = -6730.94
d = 56

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 116
MasterProb = 167444

s [*] :=
1   4
2   3
3  51
4  78
5  11
;

SubProb = -7680.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 117
MasterProb = 166051

s [*] :=
1  53
2  97
3  82
4  87
5  43
;

SubProb = -7634.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 118
MasterProb = 165133

s [*] :=
1   6
2  52
3  37
4  23
5  70
;

SubProb = -4211.77
d = 345

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 119
MasterProb = 164959

s [*] :=
1   41
2   14
3    6
4   77
5  101
;

SubProb = -2373.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 120
MasterProb = 164896

s [*] :=
1  40
2  62
3  90
4  16
5  80
;

SubProb = -1462.86
d = 84

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 121
MasterProb = 164816

s [*] :=
1  40
2   6
3  63
4  29
5   7
;

SubProb = -7856.59
d = 54

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 122
MasterProb = 164816

s [*] :=
1  21
2  75
3  36
4  29
5  43
;

SubProb = -3921.82
d = 105

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5115

Iter 123
MasterProb = 164603

s [*] :=
1  22
2  34
3  92
4   3
5  77
;

SubProb = -2205.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 124
MasterProb = 164451

s [*] :=
1  67
2  38
3  94
4  13
5  92
;

SubProb = -4481.26
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 125
MasterProb = 164073

s [*] :=
1   83
2   37
3    4
4  101
5  102
;

SubProb = -1798.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 126
MasterProb = 163869

s [*] :=
1  42
2  83
3  28
4  48
5   6
;

SubProb = -8416.55
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 127
MasterProb = 162638

s [*] :=
1  87
2  75
3  34
4  56
5  58
;

SubProb = -4253.71
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 128
MasterProb = 161682

s [*] :=
1   8
2  11
3  65
4  19
5  89
;

SubProb = -5767.49
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 129
MasterProb = 160467

s [*] :=
1  98
2  16
3  99
4  61
5  71
;

SubProb = -6173.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 130
MasterProb = 159973

s [*] :=
1  75
2  33
3  66
4  25
5  98
;

SubProb = -7397.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 131
MasterProb = 159620

s [*] :=
1  86
2  34
3  98
4  19
5  10
;

SubProb = -7579.74
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 132
MasterProb = 158694

s [*] :=
1  32
2  62
3  59
4  37
5  82
;

SubProb = -4459.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 133
MasterProb = 158515

s [*] :=
1  94
2  68
3  40
4  52
5  96
;

SubProb = -2752.85
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 134
MasterProb = 158257

s [*] :=
1  71
2  90
3  29
4  92
5  64
;

SubProb = -7582.64
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 135
MasterProb = 157421

s [*] :=
1  36
2  29
3  95
4  13
5  51
;

SubProb = -8058.52
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 136
MasterProb = 157236

s [*] :=
1  95
2  63
3  13
4  25
5  78
;

SubProb = -4855.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 137
MasterProb = 157027

s [*] :=
1  65
2  31
3  34
4  33
5  45
;

SubProb = -4861.99
d = 51

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 138
MasterProb = 156523

s [*] :=
1  63
2  96
3  13
4  66
5  94
;

SubProb = -4642.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 139
MasterProb = 156029

s [*] :=
1   19
2   83
3   98
4  101
5  102
;

SubProb = -2691.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 140
MasterProb = 155628

s [*] :=
1  36
2  67
3  18
4  72
5  49
;

SubProb = -7353.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 141
MasterProb = 155407

s [*] :=
1  24
2  50
3  69
4  72
5  58
;

SubProb = -4977.09
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 142
MasterProb = 154935

s [*] :=
1   38
2   83
3   58
4   78
5  101
;

SubProb = -2088.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 143
MasterProb = 154621

s [*] :=
1  58
2  52
3  54
4  39
5  19
;

SubProb = -8375.91
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 144
MasterProb = 153786

s [*] :=
1   38
2   77
3   83
4  101
5  102
;

SubProb = -645.112
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 145
MasterProb = 153747

s [*] :=
1    8
2   83
3   77
4  101
5  102
;

SubProb = -1483.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 146
MasterProb = 153697

s [*] :=
1   57
2   83
3   95
4  101
5  102
;

SubProb = -1345.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 147
MasterProb = 153650

s [*] :=
1  96
2  89
3  99
4  73
5  63
;

SubProb = -5103.56
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 148
MasterProb = 152619

s [*] :=
1  38
2  77
3  63
4  79
5  31
;

SubProb = -6945.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 149
MasterProb = 151899

s [*] :=
1   38
2   83
3   77
4  101
5  102
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Problema Entero
MasterProb = 311672

fo1 = 82495
fo2 = 229177

x[j] [*] :=
 70  1
 92  1
113  1
163  1
167  1
210  1
212  1
216  1
230  1
236  1
238  1
253  1
256  1
258  1
266  1
273  1
276  1
300  1
328  1
342  1
;

aa[i,j] [*,*]
:    70  92 113 163 167 210 212 216 230 236 238 253 256 258 266 273 276 300 328 :=
1     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
12    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
14    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
20    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
23    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
29    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
33    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
38    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
39    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
47    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
49    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
60    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
61    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
63    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
64    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
67    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
72    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
74    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
79    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
89    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
91    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
100   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   342    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    1
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    1
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    1
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 2  1
 4  1
 5  1
 7  1
 9  1
16  1
17  1
26  1
31  1
42  1
43  1
45  1
69  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
70    1       0       0         0
92    1       0       0         0
113   1    3520    3520         0
163   1    5005    5005         0
167   1    6390    4070      2320
210   1    3520    3520         0
212   1    5550    2750      2800
216   1    8010    4730      3280
230   1    2310    2310         0
236   1    3795    3795         0
238   1    3410    3410         0
253   1    9185    3905      5280
256   1    3135    3135         0
258   1    3850    3850         0
266   1    3840    3520       320
273   1    3960    3960         0
276   1    1870    1870         0
300   1    9590    4070      5520
328   1    3795    3795         0
342   1    1760    1760         0
;

