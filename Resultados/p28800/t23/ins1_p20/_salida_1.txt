Iter 101
MasterProb = 115402

s [*] :=
1  82
2   2
3  13
4  49
5  11
;

SubProb = -27458.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 102
MasterProb = 110882

s [*] :=
1   3
2  18
3  46
4  92
5  70
;

SubProb = -17443.4
d = 79

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 103
MasterProb = 107588

s [*] :=
1  97
2  83
3  37
4  61
5  96
;

SubProb = -9820.39
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 104
MasterProb = 105834

s [*] :=
1  77
2   2
3  78
4  96
5  31
;

SubProb = -10493.9
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 105
MasterProb = 103804

s [*] :=
1  48
2  20
3  85
4  27
5  52
;

SubProb = -4288.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 106
MasterProb = 103200

s [*] :=
1  49
2  21
3  63
4  52
5   4
;

SubProb = -15502
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 107
MasterProb = 101330

s [*] :=
1   83
2   72
3  101
4  102
5  103
;

SubProb = -2970.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 108
MasterProb = 100949

s [*] :=
1    2
2    9
3  101
4  102
5  103
;

SubProb = -2246.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 109
MasterProb = 100573

s [*] :=
1  63
2  59
3  86
4   5
5  24
;

SubProb = -6931.19
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 110
MasterProb = 99982.1

s [*] :=
1  74
2   6
3  77
4  70
5  10
;

SubProb = -4003.7
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 99762.4

s [*] :=
1  86
2  11
3  78
4  51
5  75
;

SubProb = -3968.97
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 112
MasterProb = 99356.7

s [*] :=
1   53
2    9
3  101
4  102
5  103
;

SubProb = -1501.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Iter 113
MasterProb = 99173.1

s [*] :=
1  90
2  31
3  25
4  39
5  59
;

SubProb = -1080.06
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 114
MasterProb = 99070.9

s [*] :=
1   15
2   42
3   10
4   40
5  101
;

SubProb = -2465.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 115
MasterProb = 98901.5

s [*] :=
1   32
2    9
3  101
4  102
5  103
;

SubProb = -586.438
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 116
MasterProb = 98809.3

s [*] :=
1  64
2  70
3  77
4  44
5  32
;

SubProb = -2578.97
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 117
MasterProb = 98274.8

s [*] :=
1  54
2  41
3  50
4  24
5  25
;

SubProb = -3812.35
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 118
MasterProb = 97932.5

s [*] :=
1  12
2  13
3  65
4  95
5  16
;

SubProb = -4178.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 119
MasterProb = 97745.6

s [*] :=
1    7
2   95
3  101
4  102
5  103
;

SubProb = -1108.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 120
MasterProb = 97678.4

s [*] :=
1  36
2   4
3  40
4   3
5  47
;

SubProb = -5857.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 121
MasterProb = 97098.1

s [*] :=
1   90
2    9
3  101
4  102
5  103
;

SubProb = -1485.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 122
MasterProb = 96974.5

s [*] :=
1   46
2   79
3   83
4  101
5  102
;

SubProb = -1832.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 123
MasterProb = 96906.1

s [*] :=
1  96
2  60
3  23
4  97
5   2
;

SubProb = -1142.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 124
MasterProb = 96877

s [*] :=
1   86
2   53
3   83
4  101
5  102
;

SubProb = -1086.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1870

Iter 125
MasterProb = 96832.1

s [*] :=
1  82
2  45
3  68
4  69
5  27
;

SubProb = -4513.88
d = 57

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 126
MasterProb = 96494.6

s [*] :=
1  64
2  62
3  68
4   1
5  82
;

SubProb = -2512.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 127
MasterProb = 96310.8

s [*] :=
1  54
2  45
3  68
4  59
5  18
;

SubProb = -1083.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 128
MasterProb = 96298.6

s [*] :=
1  86
2   2
3  54
4  82
5  56
;

SubProb = -3694.63
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 129
MasterProb = 95864.8

s [*] :=
1   26
2   44
3  101
4  102
5  103
;

SubProb = -1220.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 130
MasterProb = 95677.5

s [*] :=
1  72
2  74
3  53
4  42
5  84
;

SubProb = -5898.44
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 131
MasterProb = 95138.9

s [*] :=
1   63
2    9
3  101
4  102
5  103
;

SubProb = -650.438
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 132
MasterProb = 95001.3

s [*] :=
1  68
2  47
3  63
4  92
5   2
;

SubProb = -4654.59
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 94170.1

s [*] :=
1    7
2   56
3  101
4  102
5  103
;

SubProb = -1124.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1485

Iter 134
MasterProb = 93960.5

s [*] :=
1   15
2   65
3   79
4   78
5  101
;

SubProb = -1616.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 135
MasterProb = 93919.2

s [*] :=
1   35
2    7
3  101
4  102
5  103
;

SubProb = -987.545
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 136
MasterProb = 93895.3

s [*] :=
1  80
2  37
3  82
4  81
5  70
;

SubProb = -2571.46
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 137
MasterProb = 93560.2

s [*] :=
1  12
2  66
3  23
4  46
5  36
;

SubProb = -637.606
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 138
MasterProb = 93520

s [*] :=
1  57
2  78
3   2
4  49
5  53
;

SubProb = -2077.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 139
MasterProb = 93459.8

s [*] :=
1  49
2  23
3  60
4  85
5  69
;

SubProb = -3438
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 140
MasterProb = 93097.5

s [*] :=
1    7
2   57
3   23
4  101
5  102
;

SubProb = -3436.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 141
MasterProb = 92387

s [*] :=
1   5
2  80
3  74
4  91
5  63
;

SubProb = -1187.41
d = 29

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 142
MasterProb = 92364.2

s [*] :=
1   31
2    9
3  101
4  102
5  103
;

SubProb = -603.875
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 143
MasterProb = 92316.4

s [*] :=
1    9
2   46
3  101
4  102
5  103
;

SubProb = -366.451
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 144
MasterProb = 92268.2

s [*] :=
1  74
2  50
3  88
4   8
5  66
;

SubProb = -3562.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 145
MasterProb = 92032.3

s [*] :=
1   3
2  61
3   2
4  79
5  35
;

SubProb = -1142.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 146
MasterProb = 91983.1

s [*] :=
1  39
2  87
3  19
4  97
5  86
;

SubProb = -1364.02
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 147
MasterProb = 91885.2

s [*] :=
1   42
2   83
3   95
4  101
5  102
;

SubProb = -515.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 148
MasterProb = 91864.1

s [*] :=
1  33
2  45
3  85
4  58
5  57
;

SubProb = -1941.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 149
MasterProb = 91683.7

s [*] :=
1   21
2    9
3  101
4  102
5  103
;

SubProb = -201.971
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Iter 150
MasterProb = 91681.2

s [*] :=
1  88
2  84
3   4
4  31
5  37
;

SubProb = -1330.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 151
MasterProb = 91660

s [*] :=
1   15
2   12
3   44
4    1
5  101
;

SubProb = -170.119
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 152
MasterProb = 91658.8

s [*] :=
1  40
2   8
3  47
4  68
5  31
;

SubProb = -3901.87
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 153
MasterProb = 90917.4

s [*] :=
1  82
2  30
3  22
4  91
5  11
;

SubProb = -679.986
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 154
MasterProb = 90899.1

s [*] :=
1  18
2  63
3   5
4  32
5  96
;

SubProb = -1847.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 155
MasterProb = 90802.8

s [*] :=
1   1
2   3
3  68
4  90
5  40
;

SubProb = -1906.44
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 156
MasterProb = 90703.3

s [*] :=
1   6
2  59
3  34
4  91
5  76
;

SubProb = -2310.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 157
MasterProb = 90619.3

s [*] :=
1  33
2  36
3  97
4  51
5  31
;

SubProb = -2398.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 158
MasterProb = 90362.9

s [*] :=
1    3
2   66
3   20
4  100
5   32
;

SubProb = -1646.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 159
MasterProb = 90356.3

s [*] :=
1  31
2  12
3  80
4  92
5  99
;

SubProb = -1332.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 160
MasterProb = 90314.3

s [*] :=
1   19
2   64
3   15
4  101
5  102
;

SubProb = -2051.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 161
MasterProb = 90198

s [*] :=
1  92
2  93
3  80
4  67
5  68
;

SubProb = -3114.4
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 162
MasterProb = 89847.6

s [*] :=
1  100
2   83
3   95
4  101
5  102
;

SubProb = -5.1802
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 163
MasterProb = 89847.5

s [*] :=
1  100
2   83
3   95
4  101
5  102
;

SubProb = 1.81899e-12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Problema Entero
MasterProb = 259757

fo1 = 77245
fo2 = 182512

x[j] [*] :=
 67  1
116  1
130  1
139  1
152  1
212  1
214  1
220  1
222  1
230  1
236  1
237  1
253  1
256  1
257  1
258  1
259  1
294  1
340  1
341  1
345  1
352  1
355  1
;

aa[i,j] [*,*]
:    67 116 130 139 152 212 214 220 222 230 236 237 253 256 257 258 259 294 340 :=
1     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
5     0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
15    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
20    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
23    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
27    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
42    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
44    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
48    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
52    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
53    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
63    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
67    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
75    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
83    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
89    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
95    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0

:   341 345 352 355    :=
1     0   0   0   0
2     1   0   0   0
3     1   0   0   0
4     0   0   0   0
5     0   0   0   0
6     0   0   1   0
7     0   0   0   0
8     0   0   0   0
9     0   1   0   0
10    0   0   0   0
11    0   0   0   0
12    0   0   0   1
13    0   0   0   0
14    0   0   0   0
15    0   0   0   0
16    0   0   0   0
17    0   0   0   0
18    0   0   0   0
19    0   0   0   0
20    0   0   0   0
21    0   1   0   0
22    0   0   0   0
23    0   0   0   0
24    0   0   0   0
25    0   0   0   0
26    0   0   0   0
27    0   0   0   0
28    0   0   0   0
29    0   0   0   0
30    0   0   0   0
31    0   0   0   1
32    0   0   0   0
33    0   0   0   0
34    0   0   1   0
35    1   0   0   0
36    0   0   0   0
37    0   0   0   0
38    0   0   0   0
39    0   0   0   0
40    0   0   0   0
41    0   0   0   0
42    0   0   0   0
43    0   0   0   0
44    0   0   0   0
45    0   0   0   0
46    0   0   0   0
47    0   0   0   0
48    0   0   0   0
49    0   0   0   0
50    0   0   0   0
51    0   0   0   0
52    0   0   0   0
53    0   0   0   0
54    0   0   0   0
55    0   0   0   0
56    0   0   0   0
57    0   0   0   0
58    0   0   0   0
59    0   0   1   0
60    0   0   0   0
61    1   0   0   0
62    0   0   0   0
63    0   0   0   0
64    0   0   0   0
65    0   0   0   0
66    0   0   0   0
67    0   0   0   0
68    0   0   0   0
69    0   0   0   0
70    0   0   0   0
71    0   0   0   0
72    0   0   0   0
73    0   0   0   0
74    0   0   0   0
75    0   0   0   0
76    0   0   1   0
77    0   0   0   0
78    0   0   0   0
79    1   0   0   0
80    0   0   0   1
81    0   0   0   0
82    0   0   0   0
83    0   0   0   0
84    0   0   0   0
85    0   0   0   0
86    0   0   0   0
87    0   0   0   0
88    0   0   0   0
89    0   0   0   0
90    0   0   0   0
91    0   0   1   0
92    0   0   0   1
93    0   0   0   0
94    0   0   0   0
95    0   0   0   0
96    0   0   0   0
97    0   0   0   0
98    0   0   0   0
99    0   0   0   1
100   0   0   0   0
;

vi[i] [*] :=
13  1
16  1
37  1
39  1
45  1
55  1
71  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
67    1       0       0         0
116   1    8530    4290      4240
130   1    6790    4070      2720
139   1    4180    4180         0
152   1     880     880         0
212   1    5550    2750      2800
214   1     880     880         0
220   1    1485    1485         0
222   1    3410    3410         0
230   1    1760    1760         0
236   1    3795    3795         0
237   1    4070    4070         0
253   1    3520    3520         0
256   1    3135    3135         0
257   1    1320    1320         0
258   1    3850    3850         0
259   1    2640    2640         0
294   1    4125    4125         0
340   1    4620    4620         0
341   1    3520    3520         0
345   1    1265    1265         0
352   1    4400    4400         0
355   1    3520    3520         0
;

