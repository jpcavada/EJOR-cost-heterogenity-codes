Iter 101
MasterProb = 123595

s [*] :=
1  52
2  37
3  14
4  13
5   7
;

SubProb = -52124.3
d = 115

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 102
MasterProb = 114536

s [*] :=
1  95
2   5
3  78
4  97
5  24
;

SubProb = -12550.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 103
MasterProb = 112412

s [*] :=
1  78
2  70
3  54
4  97
5   3
;

SubProb = -13579.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 104
MasterProb = 108728

s [*] :=
1   4
2  56
3  96
4  75
5  92
;

SubProb = -16472
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 105
MasterProb = 107377

s [*] :=
1    2
2    9
3  101
4  102
5  103
;

SubProb = -4401.11
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 106
MasterProb = 105941

s [*] :=
1    9
2   49
3  101
4  102
5  103
;

SubProb = -3304.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 107
MasterProb = 105329

s [*] :=
1   44
2   26
3  101
4  102
5  103
;

SubProb = -6853.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 108
MasterProb = 104206

s [*] :=
1  40
2  80
3  73
4  25
5   8
;

SubProb = -5718.87
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 109
MasterProb = 103522

s [*] :=
1  92
2  90
3  44
4  16
5  86
;

SubProb = -3421.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 110
MasterProb = 103393

s [*] :=
1   63
2    9
3  101
4  102
5  103
;

SubProb = -2247.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 111
MasterProb = 103214

s [*] :=
1  49
2  62
3  93
4  90
5  44
;

SubProb = -8969.01
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 112
MasterProb = 101879

s [*] :=
1   1
2   4
3  63
4  57
5  75
;

SubProb = -7425.8
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 113
MasterProb = 101246

s [*] :=
1  52
2  77
3   4
4  69
5  86
;

SubProb = -4016.2
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 114
MasterProb = 101165

s [*] :=
1  100
2   27
3   37
4   65
5   58
;

SubProb = -3301.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 115
MasterProb = 101041

s [*] :=
1   42
2   83
3   95
4  101
5  102
;

SubProb = -859.627
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 116
MasterProb = 101021

s [*] :=
1   83
2   13
3   61
4   57
5  101
;

SubProb = -3120.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 117
MasterProb = 100722

s [*] :=
1  56
2  66
3  47
4  74
5  94
;

SubProb = -1100.95
d = 131

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 118
MasterProb = 100703

s [*] :=
1  80
2  57
3  55
4  60
5  93
;

SubProb = -1259.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 119
MasterProb = 100667

s [*] :=
1  58
2  74
3  94
4  96
5  27
;

SubProb = -3350.47
d = 102

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 120
MasterProb = 100591

s [*] :=
1  70
2  37
3  98
4  25
5  30
;

SubProb = -4113.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 121
MasterProb = 100387

s [*] :=
1  100
2   83
3   95
4  101
5  102
;

SubProb = -392.034
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 122
MasterProb = 100369

s [*] :=
1  100
2   57
3   32
4   46
5   77
;

SubProb = -3319.4
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 123
MasterProb = 100217

s [*] :=
1  54
2  68
3  40
4  82
5  16
;

SubProb = -2366.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 124
MasterProb = 100140

s [*] :=
1    1
2    7
3   67
4  101
5  102
;

SubProb = -3608.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 125
MasterProb = 99907.6

s [*] :=
1  76
2  68
3  52
4  84
5  33
;

SubProb = -4344.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 126
MasterProb = 99757.7

s [*] :=
1  59
2  74
3  91
4  47
5  11
;

SubProb = -4541.37
d = 44

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 127
MasterProb = 99298

s [*] :=
1   5
2  67
3  33
4  44
5  18
;

SubProb = -767.686
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 128
MasterProb = 99281.7

s [*] :=
1    7
2   37
3   34
4  101
5  102
;

SubProb = -2002.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 129
MasterProb = 98964.5

s [*] :=
1  13
2  96
3  85
4  17
5  90
;

SubProb = -494.432
d = 47

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 130
MasterProb = 98955.4

s [*] :=
1   3
2  36
3  37
4  16
5  51
;

SubProb = -256.248
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 131
MasterProb = 98950.9

s [*] :=
1  64
2  68
3  84
4  59
5  43
;

SubProb = -723.309
d = 18

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 132
MasterProb = 98919.5

s [*] :=
1  60
2  68
3  84
4  53
5  74
;

SubProb = -1058.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5555

Iter 133
MasterProb = 98910.8

s [*] :=
1  36
2  64
3  70
4  69
5  41
;

SubProb = -3486.76
d = 29

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 134
MasterProb = 98553

s [*] :=
1  40
2  59
3  73
4  90
5  46
;

SubProb = -4257.02
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 135
MasterProb = 98134.3

s [*] :=
1  19
2  49
3  20
4  78
5  66
;

SubProb = -6984.9
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 136
MasterProb = 98089.5

s [*] :=
1   31
2   72
3   68
4  101
5  102
;

SubProb = -3011.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 137
MasterProb = 98023.3

s [*] :=
1   74
2   83
3   68
4  101
5  102
;

SubProb = -1720.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 138
MasterProb = 97868.4

s [*] :=
1   18
2   63
3   15
4  101
5  102
;

SubProb = -813.931
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 139
MasterProb = 97838.7

s [*] :=
1  97
2  69
3  41
4  96
5  33
;

SubProb = -5421.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2365

Iter 140
MasterProb = 97578.9

s [*] :=
1   42
2   83
3   95
4  101
5  102
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Problema Entero
MasterProb = 306313

fo1 = 75895
fo2 = 230418

x[j] [*] :=
 40  1
106  1
117  1
145  1
149  1
171  1
175  1
176  1
191  1
203  1
205  1
220  1
225  1
230  1
231  1
244  1
262  1
279  1
299  1
302  1
321  1
324  1
334  1
;

aa[i,j] [*,*]
:    40 106 117 145 149 171 175 176 191 203 205 220 225 230 231 244 262 279 299 :=
1     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
4     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
11    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
20    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
22    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
29    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
43    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
46    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
55    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
66    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
73    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
74    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
80    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
87    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
89    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
94    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
96    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
98    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   302 321 324 334    :=
1     0   0   0   0
2     0   0   0   0
3     0   0   0   0
4     0   0   0   0
5     0   0   0   0
6     0   0   0   0
7     0   0   1   0
8     0   0   0   0
9     1   0   0   0
10    0   0   0   0
11    0   0   0   0
12    0   0   0   0
13    0   0   0   0
14    0   0   0   0
15    0   0   0   1
16    0   0   0   0
17    0   0   0   0
18    0   0   0   1
19    0   0   0   0
20    0   0   0   0
21    0   0   0   0
22    0   0   0   0
23    0   0   0   0
24    0   0   0   0
25    0   0   0   0
26    0   0   0   0
27    0   0   0   0
28    0   0   0   0
29    0   0   0   0
30    0   0   0   0
31    0   0   0   0
32    0   0   0   0
33    0   1   0   0
34    0   0   1   0
35    0   0   0   0
36    0   0   0   0
37    0   0   1   0
38    0   0   0   0
39    0   0   0   0
40    0   0   0   0
41    0   0   0   0
42    0   0   0   0
43    0   0   0   0
44    0   0   0   0
45    0   0   0   0
46    0   0   0   0
47    0   0   0   0
48    0   0   0   0
49    1   0   0   0
50    0   0   0   0
51    0   0   0   0
52    0   1   0   0
53    0   0   0   0
54    0   0   0   0
55    0   0   0   0
56    0   0   0   0
57    0   0   0   0
58    0   0   0   0
59    0   0   0   0
60    0   0   0   0
61    0   0   0   0
62    0   0   0   0
63    0   0   0   1
64    0   0   0   0
65    0   0   0   0
66    0   0   0   0
67    0   0   0   0
68    0   1   0   0
69    0   0   0   0
70    0   0   0   0
71    0   0   0   0
72    0   0   0   0
73    0   0   0   0
74    0   0   0   0
75    0   0   0   0
76    0   1   0   0
77    0   0   0   0
78    0   0   0   0
79    0   0   0   0
80    0   0   0   0
81    0   0   0   0
82    0   0   0   0
83    0   0   0   0
84    0   1   0   0
85    0   0   0   0
86    0   0   0   0
87    0   0   0   0
88    0   0   0   0
89    0   0   0   0
90    0   0   0   0
91    0   0   0   0
92    0   0   0   0
93    0   0   0   0
94    0   0   0   0
95    0   0   0   0
96    0   0   0   0
97    0   0   0   0
98    0   0   0   0
99    0   0   0   0
100   0   0   0   0
;

vi[i] [*] :=
 2  1
24  1
26  1
61  1
71  1
81  1
85  1
99  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
40    1       0       0         0
106   1    7760    4400      3360
117   1    6915    3795      3120
145   1    4790    4070       720
149   1    3740    3740         0
171   1    4675    4675         0
175   1    4125    4125         0
176   1    3410    3410         0
191   1    3850    3850         0
203   1    1265    1265         0
205   1    4290    4290         0
220   1    1485    1485         0
225   1    3960    3960         0
230   1    1760    1760         0
231   1    3355    3355         0
244   1    3630    3630         0
262   1    3520    3520         0
279   1     880     880         0
299   1    4400    4400         0
302   1     880     880         0
321   1    3410    3410         0
324   1    2035    2035         0
334   1    1760    1760         0
;

