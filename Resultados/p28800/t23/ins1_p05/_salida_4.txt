Iter 74
MasterProb = 40760.4

s [*] :=
1  72
2  71
3  74
4  75
5  76
;

SubProb = -109173
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1485

Iter 75
MasterProb = 40358.9

s [*] :=
1  21
2  65
3  73
4  74
5  75
;

SubProb = -53886.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 76
MasterProb = 40174.1

s [*] :=
1   1
2  34
3   2
4  29
5  74
;

SubProb = -809.724
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1870

Iter 77
MasterProb = 40015.8

s [*] :=
1  72
2  59
3  74
4  75
5  76
;

SubProb = -941.636
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 78
MasterProb = 39163.2

s [*] :=
1  73
2  57
3  21
4  64
5  74
;

SubProb = -760.618
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 79
MasterProb = 38939.8

s [*] :=
1  31
2   8
3  72
4  74
5  75
;

SubProb = -659.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 80
MasterProb = 38937.8

s [*] :=
1  31
2  71
3  74
4  75
5  76
;

SubProb = -464.646
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 81
MasterProb = 38639.4

s [*] :=
1  73
2  71
3  74
4  75
5  76
;

SubProb = -586.106
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 82
MasterProb = 38561.8

s [*] :=
1  39
2  16
3  10
4  11
5  72
;

SubProb = -919.121
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 83
MasterProb = 38301.3

s [*] :=
1  19
2  59
3  74
4  75
5  76
;

SubProb = -752.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 84
MasterProb = 38196.4

s [*] :=
1  10
2  41
3  46
4  39
5  74
;

SubProb = -418.275
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1815

Iter 85
MasterProb = 38103.1

s [*] :=
1  16
2  38
3  74
4  75
5  76
;

SubProb = -165.885
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 86
MasterProb = 38086.2

s [*] :=
1  62
2  43
3  38
4  54
5  74
;

SubProb = -120.405
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 87
MasterProb = 38078.6

s [*] :=
1  12
2  59
3  74
4  75
5  76
;

SubProb = -348.088
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 88
MasterProb = 37897.8

s [*] :=
1  43
2  41
3  74
4  75
5  76
;

SubProb = -149.795
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 89
MasterProb = 37895.5

s [*] :=
1  38
2   8
3  74
4  75
5  76
;

SubProb = -150.879
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 90
MasterProb = 37887.9

s [*] :=
1  71
2  60
3  74
4  75
5  76
;

SubProb = -144.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 91
MasterProb = 37868.6

s [*] :=
1   3
2  72
3  74
4  75
5  76
;

SubProb = -128.333
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 92
MasterProb = 37868.6

s [*] :=
1  19
2   2
3  47
4  12
5  25
;

SubProb = -718.788
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1980

Iter 93
MasterProb = 37868.6

s [*] :=
1  54
2  71
3  74
4  75
5  76
;

SubProb = -104.949
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 94
MasterProb = 37867.7

s [*] :=
1   9
2  60
3  74
4  75
5  76
;

SubProb = -71.3136
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 95
MasterProb = 37858.7

s [*] :=
1  36
2   5
3  74
4  75
5  76
;

SubProb = -97.1845
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 96
MasterProb = 37856.1

s [*] :=
1  48
2  68
3  74
4  75
5  76
;

SubProb = -48.3621
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 97
MasterProb = 37856.1

s [*] :=
1   9
2  61
3  74
4  75
5  76
;

SubProb = -37.6149
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 98
MasterProb = 37849.1

s [*] :=
1  48
2  32
3  74
4  75
5  76
;

SubProb = -45.3883
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 99
MasterProb = 37849.1

s [*] :=
1   8
2  49
3  10
4  41
5  74
;

SubProb = -407.427
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1870

Iter 100
MasterProb = 37844.6

s [*] :=
1  73
2  31
3  32
4  74
5  75
;

SubProb = -59.5833
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 101
MasterProb = 37838.9

s [*] :=
1  39
2  67
3  74
4  75
5  76
;

SubProb = -53.8699
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 102
MasterProb = 37838.1

s [*] :=
1  22
2  39
3  16
4  74
5  75
;

SubProb = -151.491
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1320

Iter 103
MasterProb = 37838.1

s [*] :=
1  50
2   9
3  74
4  75
5  76
;

SubProb = -2.5731
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 104
MasterProb = 37837.6

s [*] :=
1   8
2  39
3  74
4  75
5  76
;

SubProb = -16.7037
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 105
MasterProb = 37836.5

s [*] :=
1  34
2  72
3  74
4  75
5  76
;

SubProb = -312.447
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 106
MasterProb = 37832.7

s [*] :=
1  28
2   1
3  11
4  74
5  75
;

SubProb = -173.171
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1320

Iter 107
MasterProb = 37815

s [*] :=
1  21
2   9
3  74
4  75
5  76
;

SubProb = -15.9917
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 108
MasterProb = 37811.8

s [*] :=
1  45
2  51
3  74
4  75
5  76
;

SubProb = -20.1398
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 109
MasterProb = 37811.8

s [*] :=
1  71
2  60
3  27
4  74
5  75
;

SubProb = -71.7959
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 110
MasterProb = 37801.3

s [*] :=
1  72
2  66
3  74
4  75
5  76
;

SubProb = -90.836
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 111
MasterProb = 37776.2

s [*] :=
1  57
2  65
3  64
4  54
5  30
;

SubProb = -142.03
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 112
MasterProb = 37757

s [*] :=
1   9
2  31
3  64
4  56
5  74
;

SubProb = -38.7421
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 113
MasterProb = 37755.2

s [*] :=
1  14
2  71
3  74
4  75
5  76
;

SubProb = -38.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 114
MasterProb = 37751.9

s [*] :=
1  36
2   7
3  44
4  74
5  75
;

SubProb = -72.9592
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 115
MasterProb = 37738.4

s [*] :=
1  50
2  48
3  74
4  75
5  76
;

SubProb = -39.1525
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 116
MasterProb = 37738.4

s [*] :=
1  37
2  48
3  74
4  75
5  76
;

SubProb = -9.78814
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 117
MasterProb = 37738.4

s [*] :=
1  52
2  56
3  70
4  31
5  27
;

SubProb = -22.839
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 118
MasterProb = 37736.4

s [*] :=
1  45
2  36
3  74
4  75
5  76
;

SubProb = -6.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 119
MasterProb = 37736.3

s [*] :=
1  26
2  36
3  74
4  75
5  76
;

SubProb = -8.72521
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 120
MasterProb = 37736.1

s [*] :=
1  62
2  17
3  74
4  75
5  76
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Problema Entero
MasterProb = 40425

fo1 = 40425
fo2 = 0

x[j] [*] :=
  8  1
 83  1
 87  1
 89  1
122  1
126  1
135  1
137  1
141  1
144  1
154  1
160  1
161  1
162  1
214  1
218  1
225  1
244  1
266  1
269  1
272  1
290  1
304  1
;

aa[i,j] [*,*]
:    8  83  87  89 122 126 135 137 141 144 154 160 161 162 214 218 225 244 266 :=
1    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
8    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
10   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
15   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
18   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
21   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
25   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
29   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
31   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
33   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
46   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
57   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
65   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
69   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
70   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1

:  269 272 290 304    :=
1    0   0   0   0
2    0   0   0   0
3    0   0   0   0
4    0   0   0   0
5    0   0   0   0
6    0   0   0   0
7    0   0   0   0
8    0   0   0   0
9    0   0   0   0
10   1   0   0   0
11   0   0   0   0
12   0   1   0   0
13   0   0   0   0
14   0   0   0   0
15   0   0   0   0
16   0   0   0   0
17   0   0   0   0
18   0   0   0   0
19   0   0   0   0
20   0   0   0   0
21   0   0   0   0
22   0   0   0   0
23   0   0   0   0
24   0   0   0   0
25   0   0   0   0
26   0   0   0   1
27   0   0   0   0
28   0   0   0   0
29   0   0   0   0
30   0   0   0   0
31   0   0   0   0
32   0   0   0   0
33   0   0   0   0
34   0   0   1   0
35   0   0   0   0
36   0   0   0   1
37   0   0   0   0
38   0   0   0   0
39   1   0   0   0
40   0   0   0   0
41   1   0   0   0
42   0   0   0   0
43   0   0   0   0
44   0   0   0   0
45   0   0   0   0
46   1   0   0   0
47   0   0   0   0
48   0   0   0   0
49   0   0   0   0
50   0   0   0   0
51   0   0   0   0
52   0   0   0   0
53   0   0   0   0
54   0   0   0   0
55   0   0   0   0
56   0   0   0   0
57   0   0   0   0
58   0   0   0   0
59   0   1   0   0
60   0   0   0   0
61   0   0   0   0
62   0   0   0   0
63   0   0   0   0
64   0   0   0   0
65   0   0   0   0
66   0   0   0   0
67   0   0   0   0
68   0   0   0   0
69   0   0   0   0
70   0   0   0   0
71   0   0   0   0
72   0   0   1   0
73   0   0   0   0
;

vi[i] [*] :=
;

:   x[i]   c[i] travel[i] delay[i]    :=
8     1       0       0       0
83    1    4180    4180       0
87    1    3520    3520       0
89    1    2860    2860       0
122   1    2035    2035       0
126   1     495     495       0
135   1     880     880       0
137   1    3575    3575       0
141   1    1980    1980       0
144   1    2640    2640       0
154   1    3080    3080       0
160   1     660     660       0
161   1     880     880       0
162   1    3795    3795       0
214   1     880     880       0
218   1     880     880       0
225   1    2640    2640       0
244   1     880     880       0
266   1     880     880       0
269   1    1815    1815       0
272   1     495     495       0
290   1     495     495       0
304   1     880     880       0
;

