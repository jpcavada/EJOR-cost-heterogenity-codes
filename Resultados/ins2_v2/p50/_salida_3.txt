Iter 93
MasterProb = 141751

s [*] :=
1  91
2  92
3  93
4  94
5  95
;

SubProb = -27110
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 94
MasterProb = 125905

s [*] :=
1  86
2  90
3  88
4  89
5  85
;

SubProb = -64262
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 95
MasterProb = 75485.4

s [*] :=
1  85
2  89
3  87
4  88
5  84
;

SubProb = -27351
d = 82

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 96
MasterProb = 75485.4

s [*] :=
1  87
2  85
3  88
4  92
5  91
;

SubProb = -21936
d = 125

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 97
MasterProb = 75485.4

s [*] :=
1   1
2   8
3   5
4  85
5  87
;

SubProb = -8951.99
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 98
MasterProb = 75485.4

s [*] :=
1  50
2  90
3  87
4  27
5  86
;

SubProb = -15790.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 99
MasterProb = 72371.3

s [*] :=
1  91
2   1
3   4
4  88
5  51
;

SubProb = -7032.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 100
MasterProb = 72371.3

s [*] :=
1  76
2  92
3  81
4  37
5  52
;

SubProb = -3783.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 101
MasterProb = 72371.3

s [*] :=
1  86
2  62
3  69
4  89
5  35
;

SubProb = -7755.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 102
MasterProb = 72371.3

s [*] :=
1  73
2   4
3  47
4  83
5  90
;

SubProb = -6724.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 103
MasterProb = 70126.5

s [*] :=
1  78
2  86
3  54
4  14
5  82
;

SubProb = -3557.96
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 104
MasterProb = 69614.5

s [*] :=
1  27
2  67
3  81
4  88
5  89
;

SubProb = -2759.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 105
MasterProb = 69210

s [*] :=
1  83
2   2
3  87
4  48
5  65
;

SubProb = -3794.86
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 106
MasterProb = 68367.5

s [*] :=
1  25
2  83
3  63
4  16
5  85
;

SubProb = -5519.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 107
MasterProb = 68285.2

s [*] :=
1  13
2  16
3  25
4  81
5  82
;

SubProb = -2034.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 108
MasterProb = 67885.3

s [*] :=
1  82
2  84
3  83
4  93
5  94
;

SubProb = -6263.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 109
MasterProb = 63856.3

s [*] :=
1  90
2  11
3  93
4  94
5  95
;

SubProb = -2705.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 110
MasterProb = 63316.9

s [*] :=
1  91
2  84
3  93
4  94
5  95
;

SubProb = -2778.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 935

Iter 111
MasterProb = 63210.5

s [*] :=
1  18
2  71
3  89
4  87
5  14
;

SubProb = -3350.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 112
MasterProb = 62497.4

s [*] :=
1  49
2  81
3  83
4   8
5  93
;

SubProb = -902.278
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 113
MasterProb = 62389.5

s [*] :=
1  85
2  63
3  74
4  36
5  46
;

SubProb = -1766.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 114
MasterProb = 62006.3

s [*] :=
1  65
2  81
3  34
4  12
5  25
;

SubProb = -987.061
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 115
MasterProb = 61878.6

s [*] :=
1  11
2  56
3  93
4  94
5  95
;

SubProb = -1206.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 116
MasterProb = 61493.4

s [*] :=
1   5
2   8
3  33
4  23
5  85
;

SubProb = -850.688
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 117
MasterProb = 61380.4

s [*] :=
1  13
2  25
3  50
4   4
5  91
;

SubProb = -908.831
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 118
MasterProb = 61293.5

s [*] :=
1  40
2  25
3  47
4  88
5  91
;

SubProb = -1088.95
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 119
MasterProb = 61128.8

s [*] :=
1  44
2  11
3  93
4  94
5  95
;

SubProb = -247.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 120
MasterProb = 61102.6

s [*] :=
1  44
2  11
3  45
4  93
5  94
;

SubProb = -1184.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1210

Iter 121
MasterProb = 60556

s [*] :=
1  46
2  92
3   4
4  82
5  24
;

SubProb = -1614.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 122
MasterProb = 60519.2

s [*] :=
1  13
2  16
3  31
4  65
5  84
;

SubProb = -1183.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 123
MasterProb = 60337.3

s [*] :=
1   8
2   2
3  65
4  90
5  61
;

SubProb = -1075.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 124
MasterProb = 60270.5

s [*] :=
1   3
2  31
3  16
4  64
5  83
;

SubProb = -985.938
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 125
MasterProb = 60193.5

s [*] :=
1   5
2  30
3  25
4  26
5  86
;

SubProb = -157.813
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 126
MasterProb = 60189.2

s [*] :=
1   2
2  81
3  33
4  80
5  54
;

SubProb = -1013.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 127
MasterProb = 60049.5

s [*] :=
1  83
2  11
3  93
4  94
5  95
;

SubProb = -385.879
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 128
MasterProb = 60039.6

s [*] :=
1  13
2  73
3  65
4  81
5  92
;

SubProb = -719.956
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 129
MasterProb = 59862.6

s [*] :=
1  25
2  80
3  90
4  34
5  27
;

SubProb = -91.5846
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 130
MasterProb = 59860.6

s [*] :=
1  35
2   2
3   4
4  82
5  87
;

SubProb = -379.656
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 131
MasterProb = 59794.6

s [*] :=
1  82
2  55
3  93
4  94
5  95
;

SubProb = 148.623
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 84390

fo1 = 65475
fo2 = 18915

x[j] [*] :=
 68  1
 94  1
103  1
106  1
247  1
249  1
265  1
291  1
300  1
382  1
413  1
427  1
432  1
483  1
511  1
519  1
557  1
563  1
573  1
593  1
;

aa[i,j] [*,*]
:   68  94 103 106 247 249 265 291 300 382 413 427 432 483 511 519 557 563 573 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
7    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
10   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
13   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
14   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
16   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
18   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
20   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
25   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
28   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
30   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
34   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
38   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
41   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
44   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
53   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
55   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
57   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
61   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
64   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
68   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
73   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
75   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
77   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
78   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
79   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
80   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
82   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
85   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
87   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
89   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
90   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
92   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:  593    :=
1    0
2    1
3    0
4    1
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   1
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
78   0
79   0
80   0
81   0
82   1
83   0
84   0
85   0
86   0
87   1
88   0
89   0
90   0
91   0
92   0
;

vi[i] [*] :=
 1  1
 3  1
11  1
83  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
68    1       0       0         0
94    1    3795    3795         0
103   1    1760    1760         0
106   1    4840    4840         0
247   1     880     880         0
249   1    3190    3190         0
265   1    2035    2035         0
291   1    4400    4400         0
300   1    3155    2915       240
382   1    3795    3795         0
413   1    4565    4565         0
427   1    3355    3355         0
432   1    3520    3520         0
483   1    3520    3520         0
511   1    6385    3905      2480
519   1    3520    3520         0
557   1    4070    4070         0
563   1    3905    3905         0
573   1     935     935         0
593   1    3850    3850         0
;

