Iter 74
MasterProb = 45748.6

s [*] :=
1  72
2  73
3  74
4  75
5  76
;

SubProb = -16335.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 75
MasterProb = 41857.5

s [*] :=
1  34
2  73
3  74
4  75
5  76
;

SubProb = -1219.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 76
MasterProb = 41857.5

s [*] :=
1  72
2  66
3  74
4  75
5  76
;

SubProb = -1944.03
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 77
MasterProb = 41505

s [*] :=
1  32
2  44
3  30
4  71
5   2
;

SubProb = -1707.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 78
MasterProb = 40745.1

s [*] :=
1  26
2   8
3  74
4  75
5  76
;

SubProb = -919.036
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 79
MasterProb = 40453.9

s [*] :=
1  71
2  24
3   5
4  32
5  43
;

SubProb = -753.355
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 80
MasterProb = 40378.2

s [*] :=
1  35
2  57
3  74
4  75
5  76
;

SubProb = -883.407
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 81
MasterProb = 40269.9

s [*] :=
1  60
2   8
3  74
4  75
5  76
;

SubProb = -1470.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 82
MasterProb = 39726

s [*] :=
1  71
2  48
3  74
4  75
5  76
;

SubProb = -659.997
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 83
MasterProb = 39697.8

s [*] :=
1  36
2  49
3  52
4  63
5  34
;

SubProb = -257.498
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 84
MasterProb = 39696.1

s [*] :=
1  41
2  37
3  26
4  52
5  65
;

SubProb = -654.966
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 85
MasterProb = 39631.8

s [*] :=
1  48
2  45
3  74
4  75
5  76
;

SubProb = -814.391
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 86
MasterProb = 39451.8

s [*] :=
1  12
2  73
3  74
4  75
5  76
;

SubProb = -284.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 87
MasterProb = 39430.9

s [*] :=
1   1
2  11
3  42
4  66
5  74
;

SubProb = -188.347
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 88
MasterProb = 39427

s [*] :=
1  56
2   5
3  71
4  58
5  72
;

SubProb = -648.863
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 89
MasterProb = 39332

s [*] :=
1  55
2  66
3  74
4  75
5  76
;

SubProb = -219.641
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 90
MasterProb = 39295.8

s [*] :=
1  26
2  32
3   4
4  68
5  61
;

SubProb = -598.607
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 91
MasterProb = 39183.9

s [*] :=
1   1
2   2
3  25
4   3
5  71
;

SubProb = -515.014
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 92
MasterProb = 39141.9

s [*] :=
1  41
2  71
3  40
4  16
5  24
;

SubProb = -1195.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 93
MasterProb = 39011.1

s [*] :=
1  16
2   2
3  34
4   3
5  74
;

SubProb = -366.354
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2585

Iter 94
MasterProb = 38995.6

s [*] :=
1   7
2  26
3  68
4   6
5  44
;

SubProb = -1075.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 95
MasterProb = 38933.4

s [*] :=
1  21
2  35
3  74
4  75
5  76
;

SubProb = -426.934
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 96
MasterProb = 38880.3

s [*] :=
1   4
2  70
3  71
4  33
5  72
;

SubProb = -369.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 97
MasterProb = 38864.3

s [*] :=
1   3
2  19
3   2
4  33
5  47
;

SubProb = -623.483
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2420

Iter 98
MasterProb = 38700.9

s [*] :=
1  72
2  12
3  74
4  75
5  76
;

SubProb = -5.26777
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 99
MasterProb = 38700.9

s [*] :=
1   9
2  71
3  48
4  74
5  75
;

SubProb = -242.212
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 100
MasterProb = 38683.5

s [*] :=
1  32
2   8
3  74
4  75
5  76
;

SubProb = -297.331
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 101
MasterProb = 38652.7

s [*] :=
1  34
2  66
3  74
4  75
5  76
;

SubProb = -550
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 102
MasterProb = 38281

s [*] :=
1   2
2  43
3  49
4  69
5  17
;

SubProb = -685.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 103
MasterProb = 38249.9

s [*] :=
1  71
2  43
3   2
4  72
5  31
;

SubProb = -483.851
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 104
MasterProb = 38242.8

s [*] :=
1  63
2  42
3  36
4  22
5  55
;

SubProb = -550.323
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 105
MasterProb = 38128.4

s [*] :=
1   2
2  73
3  74
4  75
5  76
;

SubProb = -129.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 106
MasterProb = 38122.5

s [*] :=
1  48
2   5
3  74
4  75
5  76
;

SubProb = -428.027
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 107
MasterProb = 38043.8

s [*] :=
1  40
2  67
3   9
4  28
5   5
;

SubProb = -596.353
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 108
MasterProb = 37952.3

s [*] :=
1  72
2  73
3  74
4  75
5  76
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Problema Entero
MasterProb = 49105

fo1 = 49105
fo2 = 0

x[j] [*] :=
 45  1
 79  1
 93  1
166  1
214  1
243  1
268  1
287  1
319  1
356  1
372  1
383  1
394  1
411  1
456  1
495  1
496  1
503  1
504  1
520  1
;

aa[i,j] [*,*]
:   45  79  93 166 214 243 268 287 319 356 372 383 394 411 456 495 496 503 504 :=
1    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
4    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
6    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
7    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
9    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
10   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
14   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
15   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
21   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
26   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
36   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
38   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
39   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
42   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
45   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
49   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
56   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
58   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
59   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
61   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
64   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
67   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:  520    :=
1    0
2    1
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   1
;

vi[i] [*] :=
;

:   x[i]   c[i] travel[i] delay[i]    :=
45    1       0       0         0
79    1    5170    3410      1760
93    1    3850    3850         0
166   1    1815    1815         0
214   1    4775    3575      1200
243   1    4620    4620         0
268   1    2090    2090         0
287   1    4345    4345         0
319   1    3025    3025         0
356   1    1760    1760         0
372   1    2640    2640         0
383   1     880     880         0
394   1    3795    3795         0
411   1     880     880         0
456   1    2640    2640         0
495   1     880     880         0
496   1     880     880         0
503   1    3575    3575         0
504   1     880     880         0
520   1     605     605         0
;

