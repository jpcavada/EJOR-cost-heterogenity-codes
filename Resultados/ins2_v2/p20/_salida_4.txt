Iter 73
MasterProb = 43760.6

s [*] :=
1  15
2  72
3  33
4  59
5  71
;

SubProb = -50446.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 74
MasterProb = 41156

s [*] :=
1  21
2  71
3  72
4   5
5  73
;

SubProb = -2590.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 75
MasterProb = 39888.5

s [*] :=
1  48
2  72
3  73
4  74
5  75
;

SubProb = -1567.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 76
MasterProb = 39837.7

s [*] :=
1  66
2  71
3  73
4  74
5  75
;

SubProb = -1818.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 77
MasterProb = 39079.8

s [*] :=
1   8
2   7
3  73
4  74
5  75
;

SubProb = -829.141
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 78
MasterProb = 38636.1

s [*] :=
1   2
2  66
3  73
4  74
5  75
;

SubProb = -729.292
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 79
MasterProb = 38458.2

s [*] :=
1   8
2  32
3  73
4  74
5  75
;

SubProb = -759.386
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 80
MasterProb = 38241.9

s [*] :=
1  47
2   1
3  49
4  41
5  34
;

SubProb = -944.184
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 81
MasterProb = 38192.8

s [*] :=
1  14
2  61
3  31
4  73
5  74
;

SubProb = -948.769
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 82
MasterProb = 38118.8

s [*] :=
1  16
2  71
3  43
4  18
5  28
;

SubProb = -1215.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 83
MasterProb = 37931.2

s [*] :=
1  26
2  71
3  41
4  49
5  40
;

SubProb = -762.767
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 84
MasterProb = 37817.5

s [*] :=
1   2
2  34
3  73
4  74
5  75
;

SubProb = -326.383
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 85
MasterProb = 37797.5

s [*] :=
1  60
2  35
3  73
4  74
5  75
;

SubProb = -743.411
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 86
MasterProb = 37492.5

s [*] :=
1  34
2  66
3  73
4  74
5  75
;

SubProb = -1049.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 87
MasterProb = 37143.6

s [*] :=
1  46
2  71
3  23
4   2
5  73
;

SubProb = -1326.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 88
MasterProb = 37073.5

s [*] :=
1  48
2  24
3  73
4  74
5  75
;

SubProb = -375.472
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 89
MasterProb = 37012

s [*] :=
1   8
2  21
3  73
4  74
5  75
;

SubProb = -435.069
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 90
MasterProb = 36976.7

s [*] :=
1  35
2  32
3  73
4  74
5  75
;

SubProb = -202.413
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 91
MasterProb = 36951.1

s [*] :=
1   2
2  71
3  72
4  60
5  73
;

SubProb = -357.663
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 92
MasterProb = 36910.7

s [*] :=
1   4
2  68
3  65
4   5
5  72
;

SubProb = -1184.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 93
MasterProb = 36779.1

s [*] :=
1  54
2  48
3  73
4  74
5  75
;

SubProb = -473.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 94
MasterProb = 36716.4

s [*] :=
1   8
2   6
3  73
4  74
5  75
;

SubProb = -90.9843
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 95
MasterProb = 36711.8

s [*] :=
1   1
2  55
3  71
4   7
5  73
;

SubProb = -209.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 96
MasterProb = 36697.1

s [*] :=
1   8
2  31
3  73
4  74
5  75
;

SubProb = -115.385
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 97
MasterProb = 36689.9

s [*] :=
1   1
2  55
3  29
4   2
5  73
;

SubProb = -636.747
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 98
MasterProb = 36528.6

s [*] :=
1  67
2  55
3  29
4  22
5  12
;

SubProb = -918.452
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 99
MasterProb = 36448.2

s [*] :=
1  21
2  71
3  72
4  24
5  73
;

SubProb = 234.756
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Problema Entero
MasterProb = 45155

fo1 = 45155
fo2 = 0

x[j] [*] :=
118  1
149  1
165  1
195  1
255  1
265  1
294  1
295  1
312  1
357  1
360  1
373  1
382  1
410  1
424  1
427  1
452  1
479  1
489  1
501  1
;

aa[i,j] [*,*]
:  118 149 165 195 255 265 294 295 312 357 360 373 382 410 424 427 452 479 489 :=
1    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
3    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
4    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
6    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
7    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
10   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
15   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
17   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
20   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
22   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
27   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
30   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
36   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
39   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
42   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
44   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
49   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
51   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
55   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
56   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
57   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
65   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1

:  501    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   1
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   1
67   0
68   0
69   0
70   0
71   0
72   0
;

vi[i] [*] :=
;

:   x[i]   c[i] travel[i] delay[i]    :=
118   1    3795    3795       0
149   1    3520    3520       0
165   1    1815    1815       0
195   1    3795    3795       0
255   1    1760    1760       0
265   1    3630    3630       0
294   1    3795    3795       0
295   1    1760    1760       0
312   1    3355    3355       0
357   1    4620    4620       0
360   1    2805    2805       0
373   1    1155    1155       0
382   1     880     880       0
410   1     880     880       0
424   1     605     605       0
427   1    1155    1155       0
452   1    1265    1265       0
479   1     880     880       0
489   1    3190    3190       0
501   1     495     495       0
;

