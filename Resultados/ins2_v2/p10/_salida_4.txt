Iter 73
MasterProb = 43760.6

s [*] :=
1  71
2  72
3  73
4  74
5  75
;

SubProb = -73192.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 74
MasterProb = 40144.5

s [*] :=
1   1
2  38
3  43
4  71
5  56
;

SubProb = -641.876
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 75
MasterProb = 40144.5

s [*] :=
1   4
2  72
3  38
4  49
5  73
;

SubProb = -942.161
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 76
MasterProb = 40144.5

s [*] :=
1   8
2  71
3  73
4  74
5  75
;

SubProb = -1330.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 77
MasterProb = 39832

s [*] :=
1  48
2  72
3  73
4  74
5  75
;

SubProb = -1867.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 78
MasterProb = 38877.8

s [*] :=
1  51
2  44
3  40
4  42
5  49
;

SubProb = -612.044
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 79
MasterProb = 38756.3

s [*] :=
1   4
2  52
3  41
4  32
5   5
;

SubProb = -752.288
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 80
MasterProb = 38705.3

s [*] :=
1  50
2   5
3  73
4  74
5  75
;

SubProb = -531.733
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 81
MasterProb = 38589.9

s [*] :=
1  50
2  32
3  73
4  74
5  75
;

SubProb = -427.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 82
MasterProb = 38495.9

s [*] :=
1  66
2  34
3  73
4  74
5  75
;

SubProb = -1334.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 495

Iter 83
MasterProb = 37801.7

s [*] :=
1  35
2  72
3  73
4  74
5  75
;

SubProb = -670.938
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 84
MasterProb = 37740.8

s [*] :=
1   2
2   1
3  47
4  12
5  33
;

SubProb = -665.064
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 85
MasterProb = 37650.5

s [*] :=
1  21
2  48
3  73
4  74
5  75
;

SubProb = -540.861
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 86
MasterProb = 37546.8

s [*] :=
1   1
2  32
3  43
4  29
5   2
;

SubProb = -457.684
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 87
MasterProb = 37503

s [*] :=
1   2
2  66
3  73
4  74
5  75
;

SubProb = -278.434
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 88
MasterProb = 37503

s [*] :=
1  48
2  71
3  73
4  74
5  75
;

SubProb = -446.898
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 89
MasterProb = 37503

s [*] :=
1   3
2  29
3   1
4  54
5   4
;

SubProb = -93.5804
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 90
MasterProb = 37501.3

s [*] :=
1  60
2   8
3  73
4  74
5  75
;

SubProb = -363.894
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 91
MasterProb = 37433.9

s [*] :=
1   1
2   2
3  55
4  43
5  73
;

SubProb = -231.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 92
MasterProb = 37421

s [*] :=
1   8
2   5
3  73
4  74
5  75
;

SubProb = -236.485
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 93
MasterProb = 37397.7

s [*] :=
1   8
2   7
3  73
4  74
5  75
;

SubProb = -224.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 94
MasterProb = 37369.2

s [*] :=
1   8
2  32
3  73
4  74
5  75
;

SubProb = -78.6481
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 95
MasterProb = 37361.8

s [*] :=
1   2
2  12
3  29
4  33
5  43
;

SubProb = -980.019
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 96
MasterProb = 37252.3

s [*] :=
1   8
2   7
3  73
4  74
5  75
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 49600

fo1 = 49600
fo2 = 0

x[j] [*] :=
 80  1
104  1
183  1
185  1
213  1
298  1
325  1
363  1
369  1
375  1
382  1
411  1
418  1
465  1
471  1
479  1
498  1
501  1
503  1
508  1
;

aa[i,j] [*,*]
:   80 104 183 185 213 298 325 363 369 375 382 411 418 465 471 479 498 501 503 :=
1    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
3    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
6    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
12   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
15   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
17   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
19   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
21   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
25   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
30   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
31   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
33   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
34   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
36   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
38   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
44   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
45   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
49   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
50   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
54   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
56   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
57   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
58   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
61   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0

:  508    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    1
8    1
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
;

vi[i] [*] :=
;

:   x[i]   c[i] travel[i] delay[i]    :=
80    1    6765    3245      3520
104   1    1210    1210         0
183   1    4015    4015         0
185   1    3465    3465         0
213   1    4775    3575      1200
298   1    1595    1595         0
325   1    3520    3520         0
363   1    3300    3300         0
369   1    3850    3850         0
375   1     880     880         0
382   1     880     880         0
411   1    3520    3520         0
418   1     660     660         0
465   1     880     880         0
471   1    2915    2915         0
479   1     880     880         0
498   1     880     880         0
501   1    3850    3850         0
503   1     880     880         0
508   1     880     880         0
;

