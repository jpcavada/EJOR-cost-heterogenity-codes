Iter 101
MasterProb = 129030

s [*] :=
1  11
2  71
3  96
4   1
5  77
;

SubProb = -34032.9
d = 100

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 102
MasterProb = 121076

s [*] :=
1   3
2  62
3  92
4   2
5  84
;

SubProb = -36988.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 103
MasterProb = 116828

s [*] :=
1   5
2  37
3   1
4  80
5   3
;

SubProb = -9119.21
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 104
MasterProb = 115832

s [*] :=
1   6
2  71
3  58
4  11
5  92
;

SubProb = -6762.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 105
MasterProb = 115272

s [*] :=
1  97
2  20
3  71
4  31
5  55
;

SubProb = -9008.18
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 106
MasterProb = 111978

s [*] :=
1   5
2  98
3  71
4  75
5  49
;

SubProb = -5980.59
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 107
MasterProb = 111096

s [*] :=
1  63
2  74
3   8
4  73
5  50
;

SubProb = -8550.79
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 108
MasterProb = 109314

s [*] :=
1  38
2  73
3  28
4  11
5  48
;

SubProb = -9047.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 109
MasterProb = 108202

s [*] :=
1  52
2  71
3  65
4  29
5  50
;

SubProb = -7443.62
d = 27

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 110
MasterProb = 106906

s [*] :=
1  72
2  98
3  34
4  56
5  54
;

SubProb = -8927.42
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 111
MasterProb = 105797

s [*] :=
1  31
2  78
3  10
4  48
5  87
;

SubProb = -5052.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 112
MasterProb = 105411

s [*] :=
1  47
2  31
3  75
4  37
5  38
;

SubProb = -4261.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 113
MasterProb = 104942

s [*] :=
1  11
2  42
3  51
4  20
5  37
;

SubProb = -4864.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 114
MasterProb = 104721

s [*] :=
1  20
2  48
3  41
4  50
5  13
;

SubProb = -3423.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 115
MasterProb = 104286

s [*] :=
1   17
2   16
3   84
4   52
5  101
;

SubProb = -4571.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 116
MasterProb = 103665

s [*] :=
1  88
2  52
3  61
4  10
5  71
;

SubProb = -4594.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 117
MasterProb = 102785

s [*] :=
1  89
2  61
3  80
4  15
5  63
;

SubProb = -2824.33
d = 29

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 118
MasterProb = 102664

s [*] :=
1  97
2  98
3  14
4  80
5  72
;

SubProb = -5748.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 119
MasterProb = 102108

s [*] :=
1   94
2   97
3   17
4   96
5  101
;

SubProb = -3625.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 120
MasterProb = 101161

s [*] :=
1  31
2  21
3  45
4  80
5  20
;

SubProb = -4228.91
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 121
MasterProb = 100498

s [*] :=
1  51
2  57
3  44
4  63
5  72
;

SubProb = -4823.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 122
MasterProb = 100370

s [*] :=
1  65
2  41
3  53
4   3
5  28
;

SubProb = -1969.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4895

Iter 123
MasterProb = 100298

s [*] :=
1  41
2  20
3  80
4  84
5  60
;

SubProb = -3001.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 124
MasterProb = 99918.4

s [*] :=
1  63
2  93
3  25
4  53
5  72
;

SubProb = -7658.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 125
MasterProb = 99590.4

s [*] :=
1  74
2  32
3  23
4  45
5  50
;

SubProb = -2790.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 126
MasterProb = 99448.2

s [*] :=
1  53
2  24
3  41
4  36
5  54
;

SubProb = -3792.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 127
MasterProb = 99058.1

s [*] :=
1   44
2   96
3  100
4    8
5   15
;

SubProb = -2717.7
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 128
MasterProb = 98771.3

s [*] :=
1   75
2   73
3   80
4   58
5  101
;

SubProb = -4056.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 129
MasterProb = 98472.9

s [*] :=
1  29
2  68
3  13
4  93
5  57
;

SubProb = -5687.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 130
MasterProb = 97857.4

s [*] :=
1   4
2   1
3  45
4  52
5  90
;

SubProb = -4355.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 131
MasterProb = 97273.1

s [*] :=
1  68
2  57
3  20
4   5
5  25
;

SubProb = -3878.75
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 132
MasterProb = 96814.7

s [*] :=
1   3
2  80
3   1
4  21
5  25
;

SubProb = -2011.62
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 133
MasterProb = 96580.1

s [*] :=
1  74
2  20
3  59
4  23
5  14
;

SubProb = -5391.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 95993.6

s [*] :=
1  52
2  74
3  56
4  37
5  51
;

SubProb = -5461.3
d = 18

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 135
MasterProb = 95604.3

s [*] :=
1  81
2  63
3  68
4  37
5  53
;

SubProb = -2507.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 136
MasterProb = 95539

s [*] :=
1  88
2  41
3  22
4  45
5  63
;

SubProb = -3973.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 137
MasterProb = 95358.6

s [*] :=
1  19
2  58
3  63
4   2
5  40
;

SubProb = -3625.11
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 138
MasterProb = 94994.1

s [*] :=
1  37
2  34
3  44
4   4
5  50
;

SubProb = -3915.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 139
MasterProb = 94227.9

s [*] :=
1  11
2  13
3  85
4  65
5  68
;

SubProb = -36.2755
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 140
MasterProb = 94227.8

s [*] :=
1   52
2   14
3   43
4   81
5  101
;

SubProb = -2716.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 141
MasterProb = 94100.7

s [*] :=
1  29
2  74
3  80
4  60
5  48
;

SubProb = -1178.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 142
MasterProb = 93936.3

s [*] :=
1  74
2  51
3  86
4   1
5  48
;

SubProb = -2981.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 143
MasterProb = 93648.4

s [*] :=
1  16
2  95
3  97
4  66
5  86
;

SubProb = 1156.94
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Problema Entero
MasterProb = 154604

fo1 = 68205
fo2 = 86399

x[j] [*] :=
  5  1
 70  1
 91  1
125  1
134  1
136  1
138  1
157  1
161  1
165  1
170  1
193  1
203  1
229  1
266  1
298  1
309  1
312  1
320  1
324  1
;

aa[i,j] [*,*]
:     5  70  91 125 134 136 138 157 161 165 170 193 203 229 266 298 309 312 320 :=
1     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
4     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
5     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
21    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
29    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
43    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
46    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
54    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
64    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
70    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
85    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
89    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
91    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
94    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   324    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    1
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    1
74    0
75    1
76    0
77    0
78    0
79    0
80    1
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
  9  1
 13  1
 16  1
 18  1
 26  1
 27  1
 33  1
 35  1
 41  1
 47  1
 49  1
 55  1
 57  1
 59  1
 67  1
 76  1
 79  1
 81  1
 82  1
 95  1
 99  1
100  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
5     1       0       0         0
70    1       0       0         0
91    1       0       0         0
125   1    6520    3960      2560
134   1     880     880         0
136   1    3575    3575         0
138   1    9190    4070      5120
157   1    4345    4345         0
161   1    4620    4620         0
165   1    4290    4290         0
170   1    3795    3795         0
193   1     880     880         0
203   1    1265    1265         0
229   1    6690    5170      1520
266   1    3840    3520       320
298   1    4235    4235         0
309   1    4345    4345         0
312   1    3850    3850         0
320   1    3245    3245         0
324   1    2640    2640         0
;

