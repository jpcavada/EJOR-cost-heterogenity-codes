Iter 77
MasterProb = 242082

s [*] :=
1  73
2  75
3  74
4  71
5  76
;

SubProb = -161237
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 78
MasterProb = 104848

s [*] :=
1  16
2  73
3  74
4  75
5  76
;

SubProb = -86099.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 79
MasterProb = 104848

s [*] :=
1  32
2  75
3  71
4  23
5  28
;

SubProb = -64887.5
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 80
MasterProb = 104848

s [*] :=
1  73
2  51
3  76
4  71
5  54
;

SubProb = -59493.9
d = 70

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 81
MasterProb = 104814

s [*] :=
1   9
2  74
3   3
4   7
5  20
;

SubProb = -36574.8
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 82
MasterProb = 92572.1

s [*] :=
1  12
2  73
3  36
4  52
5  69
;

SubProb = -41943.3
d = 52

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 83
MasterProb = 92551.3

s [*] :=
1  76
2  62
3  55
4  36
5  72
;

SubProb = -66845.4
d = 198

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 84
MasterProb = 84505.1

s [*] :=
1  15
2  10
3   9
4  61
5  42
;

SubProb = -32056.1
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 85
MasterProb = 76437.4

s [*] :=
1  29
2  61
3  51
4  67
5  18
;

SubProb = -16153.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 86
MasterProb = 72063.7

s [*] :=
1  71
2  10
3  47
4   9
5  19
;

SubProb = -14627.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 87
MasterProb = 69799.8

s [*] :=
1  49
2  36
3  46
4  10
5  76
;

SubProb = -12767.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 88
MasterProb = 66543.8

s [*] :=
1  74
2  39
3  59
4   2
5  15
;

SubProb = -15091.8
d = 24

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 89
MasterProb = 65675.3

s [*] :=
1  17
2   2
3  47
4  59
5  34
;

SubProb = -14142.7
d = 31

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 90
MasterProb = 63416.8

s [*] :=
1  59
2  16
3   4
4  30
5  68
;

SubProb = -8259.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 91
MasterProb = 62214.9

s [*] :=
1  65
2   3
3   2
4   1
5  11
;

SubProb = -10993.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 92
MasterProb = 61147.3

s [*] :=
1   9
2  23
3  49
4  52
5  64
;

SubProb = -7678.19
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 93
MasterProb = 60794.9

s [*] :=
1  32
2  43
3  18
4  61
5  15
;

SubProb = -8097.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 94
MasterProb = 59906.9

s [*] :=
1  67
2   2
3  59
4  21
5  36
;

SubProb = -9274.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 95
MasterProb = 59232.7

s [*] :=
1  60
2  11
3  36
4  18
5  22
;

SubProb = -5208.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 96
MasterProb = 58743.4

s [*] :=
1  51
2  49
3  15
4  31
5  69
;

SubProb = -5481.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 97
MasterProb = 58208.3

s [*] :=
1  56
2  51
3  30
4  21
5  15
;

SubProb = -4141.48
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 98
MasterProb = 57610.4

s [*] :=
1   1
2  42
3  36
4  48
5  77
;

SubProb = -3048.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 99
MasterProb = 57471.4

s [*] :=
1  39
2  73
3  42
4  59
5  67
;

SubProb = -4054.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 100
MasterProb = 57408.2

s [*] :=
1  17
2   7
3   1
4  11
5  59
;

SubProb = -5754.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 101
MasterProb = 56863.5

s [*] :=
1  74
2  39
3  18
4  15
5  30
;

SubProb = -3548.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 102
MasterProb = 56549.1

s [*] :=
1  11
2  71
3  18
4  47
5  73
;

SubProb = -6452.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 103
MasterProb = 55983.3

s [*] :=
1  10
2  71
3  22
4  44
5  73
;

SubProb = -3082.07
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 104
MasterProb = 55850.9

s [*] :=
1   8
2   1
3   9
4  77
5  78
;

SubProb = -2705.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 105
MasterProb = 55813.1

s [*] :=
1  62
2   4
3  30
4  36
5  20
;

SubProb = -4208.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 106
MasterProb = 55351.9

s [*] :=
1  63
2  42
3  62
4   9
5  11
;

SubProb = -4129.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 107
MasterProb = 55128

s [*] :=
1   7
2  32
3  64
4  28
5  65
;

SubProb = -5149.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 108
MasterProb = 55063.6

s [*] :=
1  72
2  74
3  77
4  78
5  79
;

SubProb = -4062.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 109
MasterProb = 54523.7

s [*] :=
1  40
2  41
3   9
4  11
5  31
;

SubProb = -3357.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 110
MasterProb = 54177.4

s [*] :=
1  52
2  10
3  71
4  51
5  77
;

SubProb = -3564.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 111
MasterProb = 54022.7

s [*] :=
1  60
2  43
3  75
4  37
5  64
;

SubProb = -3880.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 112
MasterProb = 53841.8

s [*] :=
1  39
2  46
3   3
4   2
5  20
;

SubProb = -2599.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 113
MasterProb = 53729.2

s [*] :=
1  36
2  61
3  43
4  28
5   6
;

SubProb = -3157.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 114
MasterProb = 53625

s [*] :=
1  42
2  28
3  71
4  55
5  17
;

SubProb = -3187.69
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 115
MasterProb = 53596.4

s [*] :=
1   3
2  71
3  34
4  76
5  10
;

SubProb = -1573.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 116
MasterProb = 53432.4

s [*] :=
1  76
2  16
3   9
4  12
5  23
;

SubProb = -2159.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 117
MasterProb = 53038.6

s [*] :=
1  43
2  16
3  39
4   6
5  45
;

SubProb = -2188.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 118
MasterProb = 52832.8

s [*] :=
1  67
2  69
3  76
4  50
5  17
;

SubProb = -3578.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 119
MasterProb = 52772.2

s [*] :=
1  19
2   2
3  17
4  20
5  47
;

SubProb = -1004.25
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 120
MasterProb = 52743.2

s [*] :=
1  73
2  56
3  21
4  17
5  77
;

SubProb = -4468.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 121
MasterProb = 51617.6

s [*] :=
1  47
2  75
3  36
4  25
5  70
;

SubProb = -3194.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 122
MasterProb = 51509.4

s [*] :=
1  20
2  27
3  42
4  39
5  61
;

SubProb = -2899.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 123
MasterProb = 51069.9

s [*] :=
1  29
2  72
3  62
4  77
5  78
;

SubProb = -2011.78
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1540

Iter 124
MasterProb = 50622

s [*] :=
1  17
2  60
3  65
4  46
5  18
;

SubProb = -905.659
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 125
MasterProb = 50543.2

s [*] :=
1  59
2  19
3  47
4  51
5  77
;

SubProb = -2354.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 126
MasterProb = 50255.5

s [*] :=
1  69
2  20
3  35
4  77
5  78
;

SubProb = -1626.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 127
MasterProb = 50115.7

s [*] :=
1  43
2  38
3  69
4  75
5  21
;

SubProb = -1563.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 128
MasterProb = 50027

s [*] :=
1  31
2  64
3  55
4  75
5  52
;

SubProb = -1087.4
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 129
MasterProb = 49950.9

s [*] :=
1  14
2  56
3  63
4  38
5  75
;

SubProb = -1505.18
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 130
MasterProb = 49870.4

s [*] :=
1  39
2  43
3  18
4  58
5  74
;

SubProb = -1029.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 131
MasterProb = 49752.8

s [*] :=
1   3
2  11
3  46
4   1
5   2
;

SubProb = -898.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 132
MasterProb = 49714.9

s [*] :=
1   1
2   2
3  58
4  75
5  43
;

SubProb = -1128.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 133
MasterProb = 49661.8

s [*] :=
1  46
2  36
3  23
4   2
5  47
;

SubProb = -2035.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 134
MasterProb = 49219.3

s [*] :=
1  63
2  45
3  22
4  75
5  76
;

SubProb = -512.047
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 135
MasterProb = 49160.9

s [*] :=
1  29
2  58
3  74
4  47
5  59
;

SubProb = -2144.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2420

Iter 136
MasterProb = 48898.7

s [*] :=
1  24
2  70
3  76
4  28
5  75
;

SubProb = -1610.43
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 137
MasterProb = 48751.9

s [*] :=
1  21
2  50
3  77
4  78
5  79
;

SubProb = -1209.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 138
MasterProb = 48592.2

s [*] :=
1  24
2  11
3  26
4  64
5  30
;

SubProb = 170.953
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Problema Entero
MasterProb = 131288

fo1 = 67360
fo2 = 63928

x[j] [*] :=
 90  1
122  1
125  1
129  1
139  1
146  1
147  1
148  1
173  1
193  1
200  1
245  1
254  1
257  1
271  1
273  1
298  1
305  1
308  1
319  1
;

aa[i,j] [*,*]
:   90 122 125 129 139 146 147 148 173 193 200 245 254 257 271 273 298 305 308 :=
1    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
3    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
7    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
10   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
11   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
14   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
15   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
16   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
18   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
22   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
24   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
25   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
27   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
29   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
30   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
37   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
40   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
44   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
48   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
50   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
56   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
57   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
58   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
60   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
62   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
65   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
68   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
69   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:  319    :=
1    0
2    0
3    0
4    0
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   0
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   0
21   0
22   1
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   1
46   0
47   0
48   0
49   0
50   0
51   0
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   1
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   1
76   1
;

vi[i] [*] :=
25  1
32  1
42  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
90    1    11190    4070      7120
122   1    10785    3905      6880
125   1     4195    2035      2160
129   1      825     825         0
139   1     3300    3300         0
146   1     1155    1155         0
147   1     2640    2640         0
148   1      880     880         0
173   1      880     880         0
193   1     3135    3135         0
200   1     1155    1155         0
245   1      660     660         0
254   1     3520    3520         0
257   1      880     880         0
271   1     3905    3905         0
273   1     5990    4070      1920
298   1     4125    4125         0
305   1     2640    2640         0
308   1     1540    1540         0
319   1     3960    3960         0
;

