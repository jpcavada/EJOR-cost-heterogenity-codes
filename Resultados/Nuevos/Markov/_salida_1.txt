Iter 101
MasterProb = 78785.4

s [*] :=
1  52
2  18
3  71
4   3
5  84
;

SubProb = -24314
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 102
MasterProb = 74050.8

s [*] :=
1  98
2  58
3  12
4  71
5  22
;

SubProb = -4604.93
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 103
MasterProb = 72875.7

s [*] :=
1  92
2  72
3  31
4  82
5  75
;

SubProb = -5123.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 104
MasterProb = 71967.6

s [*] :=
1  63
2  40
3  19
4  24
5  98
;

SubProb = -4905.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 105
MasterProb = 70836.8

s [*] :=
1  37
2  42
3  59
4  21
5   4
;

SubProb = -4592.66
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 106
MasterProb = 69581.9

s [*] :=
1  45
2  92
3  93
4  34
5  39
;

SubProb = -1876.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 107
MasterProb = 69497.9

s [*] :=
1  34
2  96
3  23
4  87
5   3
;

SubProb = -2691.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 108
MasterProb = 68971.7

s [*] :=
1   6
2  31
3  64
4  62
5  39
;

SubProb = -3133.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 109
MasterProb = 68214.8

s [*] :=
1  98
2  80
3  25
4  84
5  33
;

SubProb = -5672.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 110
MasterProb = 66968

s [*] :=
1  94
2  44
3  72
4  36
5  64
;

SubProb = -2207.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 111
MasterProb = 66801.7

s [*] :=
1  65
2  58
3  40
4   5
5   8
;

SubProb = -3444.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 112
MasterProb = 66434

s [*] :=
1  42
2  60
3  72
4  53
5  98
;

SubProb = -2911.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 113
MasterProb = 66316.4

s [*] :=
1   54
2  100
3   21
4   46
5   32
;

SubProb = -1758.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 114
MasterProb = 66198.5

s [*] :=
1   5
2   3
3  87
4  23
5  25
;

SubProb = -3125.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 115
MasterProb = 65573.4

s [*] :=
1  31
2  21
3  98
4  44
5  41
;

SubProb = -1391.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 116
MasterProb = 65542.6

s [*] :=
1  69
2  48
3  32
4  86
5  50
;

SubProb = -2228.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 117
MasterProb = 65290.9

s [*] :=
1  65
2  20
3   5
4  36
5  21
;

SubProb = -958.969
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 118
MasterProb = 65252.9

s [*] :=
1  94
2  87
3  75
4  97
5  51
;

SubProb = -2633.03
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 119
MasterProb = 65037

s [*] :=
1  88
2  91
3  52
4  42
5  21
;

SubProb = -2822.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 120
MasterProb = 64686.1

s [*] :=
1   69
2   33
3  101
4  102
5  103
;

SubProb = -1330
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 825

Iter 121
MasterProb = 64373.6

s [*] :=
1  23
2  64
3  58
4  53
5  81
;

SubProb = -1433.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 122
MasterProb = 64353.3

s [*] :=
1   73
2   75
3   45
4   96
5  101
;

SubProb = -1474.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 123
MasterProb = 64242

s [*] :=
1    7
2   92
3   32
4  101
5  102
;

SubProb = -1509.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 124
MasterProb = 63908.7

s [*] :=
1  89
2  22
3   2
4  58
5  82
;

SubProb = -2941.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 125
MasterProb = 63809

s [*] :=
1  82
2   8
3  77
4  31
5  63
;

SubProb = -1362.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 126
MasterProb = 63745

s [*] :=
1  17
2  86
3  48
4  49
5   6
;

SubProb = -1711.16
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 127
MasterProb = 63628.6

s [*] :=
1  53
2  37
3  23
4  74
5  51
;

SubProb = -1016.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 128
MasterProb = 63551.5

s [*] :=
1  87
2  51
3  65
4  80
5  45
;

SubProb = -2590.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 129
MasterProb = 63257.8

s [*] :=
1  71
2  23
3  44
4  30
5  42
;

SubProb = -608.878
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 130
MasterProb = 63222.6

s [*] :=
1   25
2   21
3  100
4   50
5    4
;

SubProb = -3065.67
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 131
MasterProb = 62850.1

s [*] :=
1    3
2   39
3   50
4   65
5  101
;

SubProb = 67.279
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Problema Entero
MasterProb = 80987

fo1 = 50380
fo2 = 30607

x[j] [*] :=
 25  1
 62  1
 70  1
 97  1
128  1
134  1
146  1
151  1
211  1
230  1
233  1
276  1
297  1
313  1
316  1
317  1
318  1
319  1
321  1
322  1
;

aa[i,j] [*,*]
:    25  62  70  97 128 134 146 151 211 230 233 276 297 313 316 317 318 319 321 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
22    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
24    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
34    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
37    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
54    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
59    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
62    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
70    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
76    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
83    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
97    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0

:   322    :=
1     0
2     0
3     0
4     0
5     0
6     1
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    1
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    1
49    1
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    1
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 4  1
 9  1
11  1
12  1
13  1
14  1
16  1
26  1
28  1
35  1
40  1
42  1
44  1
46  1
47  1
51  1
55  1
56  1
60  1
66  1
67  1
68  1
74  1
78  1
85  1
87  1
90  1
93  1
95  1
99  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
25    1       0       0         0
62    1       0       0         0
70    1       0       0         0
97    1       0       0         0
128   1    3850    3850         0
134   1     880     880         0
146   1    5730    4290      1440
151   1     880     880         0
211   1    4565    4565         0
230   1    2310    2310         0
233   1    3300    3300         0
276   1    2145    2145         0
297   1    4510    4510         0
313   1    4510    4510         0
316   1     825     825         0
317   1    4290    4290         0
318   1    2860    2860         0
319   1    1760    1760         0
321   1    4125    4125         0
322   1    3840    3520       320
;

