Iter 110
MasterProb = 88697.7

s [*] :=
1  28
2  97
3  13
4  33
5  52
;

SubProb = -7778.69
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 111
MasterProb = 88075.7

s [*] :=
1   81
2   12
3  110
4  111
5  112
;

SubProb = -5966
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 112
MasterProb = 86267.5

s [*] :=
1   56
2  105
3   80
4   22
5   48
;

SubProb = -5673.55
d = 13

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 113
MasterProb = 83958.6

s [*] :=
1   73
2   61
3  104
4   21
5   76
;

SubProb = -4633.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 114
MasterProb = 83251.3

s [*] :=
1    7
2   87
3  105
4   44
5    4
;

SubProb = -1147.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 115
MasterProb = 83133.2

s [*] :=
1   1
2   2
3   8
4  61
5  23
;

SubProb = -3643.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 116
MasterProb = 82175.6

s [*] :=
1   81
2   56
3   67
4   51
5  102
;

SubProb = -4591.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 117
MasterProb = 81506.7

s [*] :=
1  105
2  109
3  104
4  106
5   84
;

SubProb = -1819
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 118
MasterProb = 80863.9

s [*] :=
1    3
2   37
3   65
4    4
5  104
;

SubProb = -3641.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 119
MasterProb = 80286.5

s [*] :=
1  23
2  42
3  93
4  73
5  29
;

SubProb = -4015.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 120
MasterProb = 79146.4

s [*] :=
1    7
2   92
3   94
4  105
5   80
;

SubProb = -3567.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 121
MasterProb = 77455

s [*] :=
1  23
2  18
3  94
4  92
5  16
;

SubProb = -2333.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 122
MasterProb = 76804

s [*] :=
1  93
2  52
3  37
4  25
5  56
;

SubProb = -3117.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 123
MasterProb = 76289.9

s [*] :=
1  42
2  33
3  79
4  97
5  51
;

SubProb = -3783.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 124
MasterProb = 75624.8

s [*] :=
1  85
2   1
3   2
4  61
5  92
;

SubProb = -1795.68
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 125
MasterProb = 75600.7

s [*] :=
1  94
2  90
3  93
4  97
5   1
;

SubProb = -4195.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 126
MasterProb = 74826.9

s [*] :=
1   23
2  106
3   47
4   92
5   74
;

SubProb = -1755.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 127
MasterProb = 74468.3

s [*] :=
1  102
2   18
3   41
4   36
5   25
;

SubProb = -1070.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 128
MasterProb = 74369.3

s [*] :=
1   9
2  44
3  22
4  40
5  79
;

SubProb = -1326.74
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 129
MasterProb = 74317.8

s [*] :=
1  102
2   18
3   41
4   61
5   25
;

SubProb = -335.301
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 130
MasterProb = 74273.1

s [*] :=
1  75
2  89
3   8
4  33
5  52
;

SubProb = -1167.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 131
MasterProb = 74222.8

s [*] :=
1  102
2   48
3  110
4  111
5  112
;

SubProb = -1168.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 132
MasterProb = 73810.2

s [*] :=
1  105
2  103
3   94
4   84
5   23
;

SubProb = -2726.59
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 133
MasterProb = 73771.3

s [*] :=
1  88
2  23
3  72
4  90
5  28
;

SubProb = -1904.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 73229.7

s [*] :=
1   90
2   51
3   86
4  102
5  106
;

SubProb = -1070.18
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 135
MasterProb = 73022.7

s [*] :=
1  34
2  85
3  31
4  73
5  79
;

SubProb = -533.369
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 136
MasterProb = 72973

s [*] :=
1   75
2   28
3    6
4   67
5  106
;

SubProb = -2072.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 137
MasterProb = 72693.8

s [*] :=
1   18
2   13
3   41
4   66
5  105
;

SubProb = -470.617
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 138
MasterProb = 72621.2

s [*] :=
1  44
2   3
3  22
4   2
5  33
;

SubProb = -2096.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 139
MasterProb = 72343

s [*] :=
1   97
2    5
3   59
4  110
5  111
;

SubProb = -2085.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 140
MasterProb = 71410.1

s [*] :=
1   20
2   49
3   83
4  110
5  111
;

SubProb = -1309.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 141
MasterProb = 70941.6

s [*] :=
1   36
2   21
3  102
4  104
5   40
;

SubProb = -743.898
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 142
MasterProb = 70809.9

s [*] :=
1   50
2  104
3   36
4   48
5   29
;

SubProb = -1717.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 143
MasterProb = 70387.8

s [*] :=
1  93
2  73
3  94
4   8
5  33
;

SubProb = -2259.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 144
MasterProb = 69782.9

s [*] :=
1   93
2   10
3   86
4  102
5   54
;

SubProb = -2037.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 145
MasterProb = 69562.6

s [*] :=
1   84
2   66
3   67
4   71
5  104
;

SubProb = -222.182
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 146
MasterProb = 69555.7

s [*] :=
1  17
2  26
3  83
4   7
5  25
;

SubProb = -720.666
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 147
MasterProb = 69517.7

s [*] :=
1   4
2  94
3  29
4  72
5  28
;

SubProb = -1150.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 148
MasterProb = 69475.6

s [*] :=
1  65
2  83
3  78
4  94
5   5
;

SubProb = -423.572
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 149
MasterProb = 69475.1

s [*] :=
1  103
2   83
3   84
4   25
5    8
;

SubProb = -1645.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 150
MasterProb = 69040.7

s [*] :=
1  84
2  26
3  28
4  94
5  73
;

SubProb = -1170.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 151
MasterProb = 68925.4

s [*] :=
1   48
2   34
3    8
4   77
5  110
;

SubProb = -1220.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2420

Iter 152
MasterProb = 68825.6

s [*] :=
1  73
2  31
3  34
4  22
5  64
;

SubProb = -1010.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 153
MasterProb = 68732.7

s [*] :=
1   7
2  89
3  85
4  52
5  74
;

SubProb = -541.626
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 154
MasterProb = 68699.9

s [*] :=
1   7
2  23
3  81
4  15
5  51
;

SubProb = -701.781
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 155
MasterProb = 68591.9

s [*] :=
1   5
2   4
3  25
4  47
5  79
;

SubProb = -430.797
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 156
MasterProb = 68585.4

s [*] :=
1   13
2  104
3   40
4   62
5   68
;

SubProb = -166.209
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 157
MasterProb = 68580.1

s [*] :=
1    5
2  106
3   48
4   94
5    6
;

SubProb = -859.139
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 158
MasterProb = 68505.5

s [*] :=
1  65
2  86
3  84
4  27
5  77
;

SubProb = 172.624
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Problema Entero
MasterProb = 80008

fo1 = 47570
fo2 = 32438

x[j] [*] :=
  7  1
 11  1
 28  1
 76  1
103  1
120  1
126  1
133  1
141  1
182  1
202  1
205  1
206  1
215  1
260  1
261  1
273  1
288  1
289  1
293  1
;

aa[i,j] [*,*]
:     7  11  28  76 103 120 126 133 141 182 202 205 206 215 260 261 273 288 289 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
3     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
6     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
7     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
21    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
23    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
28    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
33    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
50    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
51    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
60    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
62    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
75    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   293    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    1
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    1
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    1
87    0
88    0
89    0
90    0
91    0
92    0
93    1
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   1
103   0
104   0
105   0
106   0
107   0
108   0
109   0
;

vi[i] [*] :=
 14  1
 15  1
 17  1
 18  1
 19  1
 35  1
 39  1
 45  1
 53  1
 55  1
 58  1
 66  1
 67  1
 69  1
 70  1
 72  1
 78  1
 82  1
 84  1
 87  1
 88  1
 89  1
 90  1
 91  1
 94  1
 95  1
 96  1
 98  1
 99  1
100  1
101  1
104  1
106  1
107  1
108  1
109  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
7     1       0       0         0
11    1       0       0         0
28    1       0       0         0
76    1       0       0         0
103   1       0       0         0
120   1    3905    3905         0
126   1    3135    3135         0
133   1    3135    3135         0
141   1    3575    3575         0
182   1    3025    3025         0
202   1    3520    3520         0
205   1    4070    4070         0
206   1    3520    3520         0
215   1    3575    3575         0
260   1     880     880         0
261   1    5330    4290      1040
273   1    2860    2860         0
288   1    1760    1760         0
289   1    1760    1760         0
293   1    3520    3520         0
;

