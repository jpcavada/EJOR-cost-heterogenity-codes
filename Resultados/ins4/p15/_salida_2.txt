Iter 102
MasterProb = 315976

s [*] :=
1  101
2   40
3   25
4   97
5   95
;

SubProb = -52800.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 103
MasterProb = 269019

s [*] :=
1   92
2   95
3   98
4  101
5   93
;

SubProb = -67188
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 104
MasterProb = 248788

s [*] :=
1  100
2   98
3   96
4   97
5   99
;

SubProb = -59146
d = 338

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 105
MasterProb = 230103

s [*] :=
1   96
2   95
3  100
4   93
5   99
;

SubProb = -46265
d = 384

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 106
MasterProb = 225803

s [*] :=
1  100
2   96
3   91
4   92
5    6
;

SubProb = -40513
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 107
MasterProb = 206073

s [*] :=
1   49
2   13
3   97
4  100
5   19
;

SubProb = -33748
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5445

Iter 108
MasterProb = 206073

s [*] :=
1  98
2  82
3  10
4  96
5  27
;

SubProb = -21450.4
d = 38

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 109
MasterProb = 197461

s [*] :=
1  97
2  96
3  58
4  70
5  88
;

SubProb = -26306.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 110
MasterProb = 197336

s [*] :=
1   40
2   16
3   74
4  101
5   17
;

SubProb = -25031.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 111
MasterProb = 193857

s [*] :=
1   93
2   61
3   44
4  102
5  103
;

SubProb = -12537.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 112
MasterProb = 191504

s [*] :=
1  75
2  29
3  83
4  95
5  93
;

SubProb = -14799.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 113
MasterProb = 188486

s [*] :=
1   91
2   87
3  102
4  103
5  104
;

SubProb = -1925
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 114
MasterProb = 187203

s [*] :=
1  92
2  98
3  23
4  36
5  46
;

SubProb = -2822.73
d = 121

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 6380

Iter 115
MasterProb = 187030

s [*] :=
1  66
2   3
3  89
4  91
5  25
;

SubProb = -12042.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 116
MasterProb = 183591

s [*] :=
1  92
2  86
3  78
4  33
5  81
;

SubProb = -10255.9
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 117
MasterProb = 182559

s [*] :=
1  53
2  36
3  24
4  44
5  74
;

SubProb = -10840.9
d = 53

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 118
MasterProb = 180467

s [*] :=
1   74
2   87
3  102
4  103
5  104
;

SubProb = -945
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 119
MasterProb = 180260

s [*] :=
1   87
2   98
3  102
4  103
5  104
;

SubProb = -98.5705
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 120
MasterProb = 180258

s [*] :=
1  100
2   48
3   98
4    9
5   74
;

SubProb = -16210.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 121
MasterProb = 179127

s [*] :=
1  87
2  17
3  36
4   6
5  42
;

SubProb = -9588.02
d = 32

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 122
MasterProb = 177387

s [*] :=
1  85
2  27
3  91
4  66
5  74
;

SubProb = -11462.9
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 123
MasterProb = 174806

s [*] :=
1  91
2  74
3  67
4  41
5  33
;

SubProb = -4072.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 124
MasterProb = 174211

s [*] :=
1  14
2  28
3  21
4  16
5  59
;

SubProb = -5997.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 125
MasterProb = 173337

s [*] :=
1   26
2   77
3   39
4  100
5   57
;

SubProb = -4028.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 126
MasterProb = 173012

s [*] :=
1  76
2  42
3  70
4  52
5  65
;

SubProb = -3322.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 127
MasterProb = 172904

s [*] :=
1  20
2  49
3  24
4  15
5  74
;

SubProb = -5890.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 128
MasterProb = 172087

s [*] :=
1  11
2  41
3  26
4  32
5  79
;

SubProb = -2415.79
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 129
MasterProb = 172003

s [*] :=
1   24
2  100
3  101
4   38
5   54
;

SubProb = -8221.66
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 130
MasterProb = 171442

s [*] :=
1  30
2  16
3  97
4  17
5  64
;

SubProb = -4671.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5115

Iter 131
MasterProb = 171320

s [*] :=
1  49
2  25
3  62
4  88
5  37
;

SubProb = -5556.6
d = 26

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 132
MasterProb = 170678

s [*] :=
1  61
2  45
3  18
4  16
5  43
;

SubProb = -2572.36
d = 97

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 133
MasterProb = 170550

s [*] :=
1  101
2   71
3   78
4   69
5   17
;

SubProb = -5585.11
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 134
MasterProb = 170354

s [*] :=
1  17
2  93
3  77
4  48
5  74
;

SubProb = -4252.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 135
MasterProb = 170047

s [*] :=
1  21
2   7
3  95
4   6
5  49
;

SubProb = -6918.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 136
MasterProb = 169573

s [*] :=
1   87
2   55
3  102
4  103
5  104
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 232512

fo1 = 84565
fo2 = 147947

x[j] [*] :=
 94  1
 99  1
125  1
126  1
128  1
155  1
163  1
164  1
175  1
191  1
202  1
209  1
213  1
230  1
298  1
338  1
377  1
383  1
396  1
399  1
;

aa[i,j] [*,*]
:    94  99 125 126 128 155 163 164 175 191 202 209 213 230 298 338 377 383 396 :=
1     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
12    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
15    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
17    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
21    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
22    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
28    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
34    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
45    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
52    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
59    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
63    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
67    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
68    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
71    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
72    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
75    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
82    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
86    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
89    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
90    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
94    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
99    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0

:   399    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    1
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    1
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    1
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    1
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   1
101   0
;

vi[i] [*] :=
 2  1
 5  1
 6  1
 8  1
24  1
37  1
40  1
41  1
48  1
50  1
53  1
56  1
61  1
73  1
79  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
94    1       0       0         0
99    1       0       0         0
125   1    5165    5005       160
126   1    3570    3410       160
128   1    3960    3960         0
155   1    8390    4070      4320
163   1    4645    3685       960
164   1    9460    4180      5280
175   1    5605    4565      1040
191   1     880     880         0
202   1    7310    3630      3680
209   1    3740    3740         0
213   1    3520    3520         0
230   1    3520    3520         0
298   1     880     880         0
338   1    4235    4235         0
377   1    8160    5280      2880
383   1    3300    3300         0
396   1    4650    3850       800
399   1    3575    3575         0
;

