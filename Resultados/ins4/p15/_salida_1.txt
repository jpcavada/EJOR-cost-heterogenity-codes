Iter 101
MasterProb = 150154

s [*] :=
1  78
2  77
3   2
4  11
5   3
;

SubProb = -14531.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 102
MasterProb = 148576

s [*] :=
1   5
2  13
3  72
4  21
5  63
;

SubProb = -16661.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 103
MasterProb = 144386

s [*] :=
1   88
2   10
3   42
4   23
5  101
;

SubProb = -9175.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 104
MasterProb = 143206

s [*] :=
1  66
2  52
3  95
4  75
5  80
;

SubProb = -10536.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 105
MasterProb = 142230

s [*] :=
1  74
2  96
3   8
4  37
5  80
;

SubProb = -8123.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 106
MasterProb = 141790

s [*] :=
1  82
2  13
3  51
4  76
5  87
;

SubProb = -13301.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 107
MasterProb = 141430

s [*] :=
1   65
2   71
3   19
4  101
5  102
;

SubProb = -6860.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 108
MasterProb = 140053

s [*] :=
1   42
2   83
3   14
4  101
5  102
;

SubProb = -2174.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 109
MasterProb = 139641

s [*] :=
1   73
2   40
3   72
4  101
5  102
;

SubProb = -4999.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 110
MasterProb = 139056

s [*] :=
1  88
2  34
3  68
4  11
5  52
;

SubProb = -7643.56
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 111
MasterProb = 138522

s [*] :=
1   4
2  71
3  44
4  96
5  98
;

SubProb = -10835.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 112
MasterProb = 136452

s [*] :=
1  77
2  37
3  59
4  85
5  13
;

SubProb = -4342.8
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 113
MasterProb = 136195

s [*] :=
1  23
2  45
3  69
4  33
5  67
;

SubProb = -5787.88
d = 35

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 114
MasterProb = 135569

s [*] :=
1   75
2   31
3  100
4   14
5   40
;

SubProb = -3732.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 115
MasterProb = 135285

s [*] :=
1  43
2   3
3  82
4  55
5  52
;

SubProb = -5099.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 116
MasterProb = 134625

s [*] :=
1  90
2  64
3  43
4  10
5  63
;

SubProb = -8021.44
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 117
MasterProb = 133920

s [*] :=
1  37
2   8
3  31
4  29
5  14
;

SubProb = -6248.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 118
MasterProb = 132533

s [*] :=
1  50
2  72
3  94
4  82
5  52
;

SubProb = -9105.89
d = 8

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 119
MasterProb = 130920

s [*] :=
1   30
2   68
3   83
4  101
5  102
;

SubProb = -3130.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 120
MasterProb = 130532

s [*] :=
1  46
2  38
3  56
4  25
5  61
;

SubProb = -5653.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 121
MasterProb = 130351

s [*] :=
1   27
2   37
3   20
4   54
5  101
;

SubProb = -3184.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 122
MasterProb = 130253

s [*] :=
1  12
2  73
3   3
4  52
5  39
;

SubProb = -3663.18
d = 70

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 123
MasterProb = 130181

s [*] :=
1   8
2  67
3  57
4  17
5  30
;

SubProb = -3699.48
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 124
MasterProb = 130034

s [*] :=
1   75
2   83
3   68
4  101
5  102
;

SubProb = -2261.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 125
MasterProb = 129924

s [*] :=
1  31
2  16
3   5
4  67
5  66
;

SubProb = -4062.06
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 126
MasterProb = 129604

s [*] :=
1  38
2  53
3   1
4  74
5  95
;

SubProb = -2854.87
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 127
MasterProb = 129517

s [*] :=
1   83
2   74
3   72
4  101
5  102
;

SubProb = -2723.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 128
MasterProb = 129024

s [*] :=
1  77
2  42
3  91
4  25
5  28
;

SubProb = -6387.08
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 129
MasterProb = 128462

s [*] :=
1   95
2   83
3   11
4  101
5  102
;

SubProb = -2205.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 130
MasterProb = 128369

s [*] :=
1  18
2  32
3  90
4  51
5  48
;

SubProb = -4356.07
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 131
MasterProb = 127945

s [*] :=
1  68
2  76
3  63
4   4
5  98
;

SubProb = -4735.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 132
MasterProb = 127675

s [*] :=
1   41
2   83
3   63
4  101
5  102
;

SubProb = -1307.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 133
MasterProb = 127608

s [*] :=
1   82
2   27
3   23
4  100
5   99
;

SubProb = -2987.15
d = 41

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 134
MasterProb = 127516

s [*] :=
1  49
2  69
3  41
4  80
5  59
;

SubProb = -3805.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 135
MasterProb = 127442

s [*] :=
1   65
2   83
3   93
4  101
5  102
;

SubProb = -116.748
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 136
MasterProb = 127438

s [*] :=
1  87
2   3
3  85
4  53
5  23
;

SubProb = -4204.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 137
MasterProb = 126992

s [*] :=
1   71
2   57
3   73
4  101
5  102
;

SubProb = -4761.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 138
MasterProb = 126704

s [*] :=
1   83
2   24
3   47
4  101
5  102
;

SubProb = -1984.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2310

Iter 139
MasterProb = 126553

s [*] :=
1   74
2   83
3   25
4  101
5  102
;

SubProb = -789.652
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 140
MasterProb = 126547

s [*] :=
1   37
2   83
3   14
4  101
5  102
;

SubProb = -779.975
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 141
MasterProb = 126520

s [*] :=
1  98
2  44
3  27
4  12
5  93
;

SubProb = -3104.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 142
MasterProb = 126223

s [*] :=
1  23
2  37
3  94
4  74
5  59
;

SubProb = -2311.01
d = 41

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 143
MasterProb = 126137

s [*] :=
1  29
2  25
3  20
4  97
5  17
;

SubProb = -4811.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 144
MasterProb = 126010

s [*] :=
1   66
2   83
3   68
4  101
5  102
;

SubProb = -742.725
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 145
MasterProb = 126000

s [*] :=
1  20
2   5
3  95
4  65
5  57
;

SubProb = -4069.73
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 146
MasterProb = 125877

s [*] :=
1  30
2  82
3  35
4  63
5  19
;

SubProb = -4634.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 147
MasterProb = 125727

s [*] :=
1   14
2   83
3   13
4  101
5  102
;

SubProb = -1050.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 148
MasterProb = 125705

s [*] :=
1   13
2   83
3   72
4  101
5  102
;

SubProb = -867.797
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 149
MasterProb = 125682

s [*] :=
1    4
2   94
3   50
4   36
5  101
;

SubProb = -1041.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 150
MasterProb = 125661

s [*] :=
1  22
2  43
3  44
4  25
5  52
;

SubProb = -1621.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 151
MasterProb = 125633

s [*] :=
1  69
2  97
3  54
4  45
5  27
;

SubProb = -4165.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 152
MasterProb = 125497

s [*] :=
1  59
2  23
3  82
4  72
5  24
;

SubProb = -3332.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 153
MasterProb = 125313

s [*] :=
1  31
2  33
3  96
4  98
5  47
;

SubProb = -5418.1
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 154
MasterProb = 124936

s [*] :=
1  67
2  19
3  98
4  92
5  93
;

SubProb = -4859.01
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 155
MasterProb = 124710

s [*] :=
1  47
2  75
3  89
4  72
5  85
;

SubProb = -4374.11
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 156
MasterProb = 124242

s [*] :=
1  20
2  80
3  25
4  93
5  99
;

SubProb = -5243.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 157
MasterProb = 123836

s [*] :=
1   10
2   83
3   77
4  101
5  102
;

SubProb = -1669.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 158
MasterProb = 123740

s [*] :=
1  99
2  47
3  46
4  76
5  67
;

SubProb = -3340.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 159
MasterProb = 123239

s [*] :=
1   22
2   83
3   68
4  101
5  102
;

SubProb = -678.216
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 160
MasterProb = 123200

s [*] :=
1   81
2   83
3   68
4  101
5  102
;

SubProb = -1149.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 161
MasterProb = 123123

s [*] :=
1   6
2   4
3  31
4  93
5  74
;

SubProb = -3784.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 162
MasterProb = 122843

s [*] :=
1  81
2  25
3  41
4  82
5  23
;

SubProb = -2026.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 163
MasterProb = 122691

s [*] :=
1   42
2   83
3   68
4  101
5  102
;

SubProb = -622.056
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 164
MasterProb = 122672

s [*] :=
1  77
2  42
3  37
4  24
5  58
;

SubProb = -4256.85
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 165
MasterProb = 122482

s [*] :=
1   42
2   19
3   73
4  101
5  102
;

SubProb = -1211.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 166
MasterProb = 122445

s [*] :=
1   23
2   83
3   16
4  101
5  102
;

SubProb = -2448.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 167
MasterProb = 122331

s [*] :=
1   36
2   24
3  100
4   25
5   60
;

SubProb = -3713.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 168
MasterProb = 122245

s [*] :=
1  68
2  14
3  21
4  38
5  36
;

SubProb = -3233.11
d = 37

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 169
MasterProb = 122009

s [*] :=
1  31
2   8
3  92
4  29
5  33
;

SubProb = -1554.47
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 170
MasterProb = 121983

s [*] :=
1   4
2  66
3  22
4   1
5  96
;

SubProb = -419.527
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 171
MasterProb = 121977

s [*] :=
1  39
2  33
3  69
4   5
5  64
;

SubProb = -5141.08
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 172
MasterProb = 121582

s [*] :=
1   83
2   77
3   29
4  101
5  102
;

SubProb = 80.9852
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Problema Entero
MasterProb = 201679

fo1 = 89165
fo2 = 112514

x[j] [*] :=
126  1
128  1
153  1
161  1
167  1
187  1
196  1
205  1
239  1
259  1
264  1
266  1
298  1
303  1
318  1
325  1
326  1
329  1
330  1
339  1
;

aa[i,j] [*,*]
:   126 128 153 161 167 187 196 205 239 259 264 266 298 303 318 325 326 329 330 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
14    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
22    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
24    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
28    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
33    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
35    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
37    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
40    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
42    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
50    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
53    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
58    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
60    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
67    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
79    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
81    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
84    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
88    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
96    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:   339    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    1
18    0
19    0
20    1
21    0
22    0
23    0
24    0
25    1
26    0
27    0
28    0
29    1
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    1
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 2  1
 4  1
26  1
38  1
44  1
45  1
55  1
70  1
74  1
93  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
126   1    4675    4675         0
128   1    3850    3850         0
153   1    3905    3905         0
161   1    4620    4620         0
167   1    6390    4070      2320
187   1    8915    3795      5120
196   1    1595    1595         0
205   1    4455    4455         0
239   1    1595    1595         0
259   1    3840    2640      1200
264   1    3905    3905         0
266   1    3840    3520       320
298   1    3905    3905         0
303   1    1760    1760         0
318   1    9450    3850      5600
325   1    1760    1760         0
326   1    3840    3520       320
329   1    8010    4730      3280
330   1    4785    4785         0
339   1    4070    4070         0
;

