Iter 109
MasterProb = 237479

s [*] :=
1  107
2  106
3  104
4  108
5  105
;

SubProb = -73873
d = 49

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 110
MasterProb = 190578

s [*] :=
1  104
2   74
3  105
4  106
5  108
;

SubProb = -42199.4
d = 51

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5555

Iter 111
MasterProb = 190578

s [*] :=
1  104
2  106
3  107
4  105
5   73
;

SubProb = -19659
d = 353

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 112
MasterProb = 190578

s [*] :=
1   81
2  105
3   77
4  107
5   45
;

SubProb = -19905.1
d = 32

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 113
MasterProb = 190578

s [*] :=
1  107
2   88
3  106
4  109
5  110
;

SubProb = -15504
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2365

Iter 114
MasterProb = 190578

s [*] :=
1   74
2  104
3   25
4   57
5  109
;

SubProb = -20858.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 115
MasterProb = 187972

s [*] :=
1  107
2  108
3   17
4   87
5  101
;

SubProb = -17484.9
d = 90

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 116
MasterProb = 182301

s [*] :=
1  102
2   42
3  106
4   98
5   33
;

SubProb = -15136.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 117
MasterProb = 176289

s [*] :=
1   15
2  105
3   89
4   60
5   74
;

SubProb = -15296.1
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 118
MasterProb = 174375

s [*] :=
1  108
2   53
3  102
4  109
5  110
;

SubProb = -12333.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1485

Iter 119
MasterProb = 171128

s [*] :=
1   97
2   37
3  104
4   99
5  108
;

SubProb = -11093.9
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 120
MasterProb = 167428

s [*] :=
1  101
2   97
3   98
4   39
5   65
;

SubProb = -12732.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 121
MasterProb = 164846

s [*] :=
1  107
2   26
3   88
4   16
5   97
;

SubProb = -6999.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 122
MasterProb = 162259

s [*] :=
1   83
2   94
3   47
4   87
5  101
;

SubProb = -9820.28
d = 67

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 123
MasterProb = 159508

s [*] :=
1   40
2  108
3   55
4  109
5  110
;

SubProb = -6209.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1980

Iter 124
MasterProb = 158361

s [*] :=
1   94
2   40
3   49
4   13
5  109
;

SubProb = -7780.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 125
MasterProb = 155801

s [*] :=
1   95
2   99
3   50
4  109
5  110
;

SubProb = -7516
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 126
MasterProb = 150122

s [*] :=
1  100
2  108
3   45
4   77
5   33
;

SubProb = -6429.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 127
MasterProb = 149851

s [*] :=
1   24
2   97
3  106
4   79
5  102
;

SubProb = -16865.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 128
MasterProb = 148750

s [*] :=
1  101
2  100
3   26
4    9
5  109
;

SubProb = -6942.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 129
MasterProb = 147948

s [*] :=
1   95
2   73
3  109
4  110
5  111
;

SubProb = -5766
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 130
MasterProb = 147527

s [*] :=
1   90
2   98
3  107
4   44
5  102
;

SubProb = -9425.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 131
MasterProb = 146429

s [*] :=
1  52
2  61
3  33
4  35
5  98
;

SubProb = -5385.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 132
MasterProb = 145631

s [*] :=
1  99
2  57
3  66
4  67
5  44
;

SubProb = -8949.74
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 144385

s [*] :=
1   72
2   88
3   19
4   35
5  100
;

SubProb = -7310.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 134
MasterProb = 143108

s [*] :=
1  58
2  84
3  24
4  60
5  87
;

SubProb = -1124.29
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 135
MasterProb = 143049

s [*] :=
1   14
2  101
3   81
4   93
5   83
;

SubProb = -4132.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 136
MasterProb = 142430

s [*] :=
1  107
2  108
3   83
4   78
5   61
;

SubProb = -6096.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 137
MasterProb = 141787

s [*] :=
1  100
2   50
3  109
4  110
5  111
;

SubProb = -1750
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 138
MasterProb = 141537

s [*] :=
1   70
2    8
3  105
4  102
5   18
;

SubProb = -7157.58
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 139
MasterProb = 140715

s [*] :=
1  62
2  49
3  14
4  61
5  78
;

SubProb = -5081.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 140
MasterProb = 140333

s [*] :=
1  107
2  108
3   28
4   16
5  101
;

SubProb = -1733.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 141
MasterProb = 140140

s [*] :=
1  107
2   43
3   74
4  109
5  110
;

SubProb = -1585.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 142
MasterProb = 139994

s [*] :=
1   93
2  100
3  107
4   25
5  104
;

SubProb = -9051.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 143
MasterProb = 137517

s [*] :=
1   99
2   43
3  108
4   38
5  109
;

SubProb = -4619.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 144
MasterProb = 136824

s [*] :=
1   54
2   46
3  106
4  109
5  110
;

SubProb = -4912.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 145
MasterProb = 136094

s [*] :=
1   74
2   73
3  109
4  110
5  111
;

SubProb = -3380.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 146
MasterProb = 135794

s [*] :=
1   85
2   94
3   44
4  106
5  104
;

SubProb = -4506.14
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 147
MasterProb = 135358

s [*] :=
1   16
2   74
3   61
4   47
5  109
;

SubProb = -1590.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 148
MasterProb = 135295

s [*] :=
1   60
2   44
3   74
4  106
5   98
;

SubProb = -3532.81
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 149
MasterProb = 135161

s [*] :=
1   86
2  108
3   55
4  109
5  110
;

SubProb = -1401.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2365

Iter 150
MasterProb = 135135

s [*] :=
1   46
2   87
3  108
4  109
5  110
;

SubProb = -1880.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2365

Iter 151
MasterProb = 134749

s [*] :=
1   50
2   43
3  109
4  110
5  111
;

SubProb = -1681
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 152
MasterProb = 134456

s [*] :=
1  103
2   36
3  109
4  110
5  111
;

SubProb = -2832.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 153
MasterProb = 133629

s [*] :=
1   81
2   94
3  107
4   47
5   45
;

SubProb = -2212.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 154
MasterProb = 133410

s [*] :=
1  60
2  79
3  66
4  49
5  95
;

SubProb = -1504.12
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 155
MasterProb = 133398

s [*] :=
1   82
2   99
3  100
4   88
5    7
;

SubProb = -1857.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 156
MasterProb = 133361

s [*] :=
1  104
2  108
3   50
4  109
5  110
;

SubProb = -744.219
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 157
MasterProb = 133338

s [*] :=
1   24
2   88
3   82
4  106
5  104
;

SubProb = -2707.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 158
MasterProb = 133100

s [*] :=
1  49
2  86
3   7
4  81
5  83
;

SubProb = -1932
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 159
MasterProb = 132937

s [*] :=
1   68
2   38
3  106
4   20
5  100
;

SubProb = -3941.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 160
MasterProb = 132443

s [*] :=
1   61
2   38
3   94
4   74
5  109
;

SubProb = -4662.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 161
MasterProb = 131506

s [*] :=
1  78
2  41
3  89
4  14
5  49
;

SubProb = -4846.55
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 162
MasterProb = 130893

s [*] :=
1   93
2  108
3  106
4   32
5   49
;

SubProb = -3309.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 163
MasterProb = 130769

s [*] :=
1  47
2  86
3   6
4  63
5  42
;

SubProb = -1529.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 164
MasterProb = 130690

s [*] :=
1   24
2  101
3   40
4   81
5   82
;

SubProb = -3648.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 165
MasterProb = 129952

s [*] :=
1   93
2  100
3   68
4  104
5   47
;

SubProb = -1847.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 166
MasterProb = 129912

s [*] :=
1  64
2  88
3  45
4  60
5  79
;

SubProb = -2029.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 167
MasterProb = 129715

s [*] :=
1   88
2   77
3   62
4  104
5   69
;

SubProb = -2438.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 168
MasterProb = 129564

s [*] :=
1   98
2   73
3  109
4  110
5  111
;

SubProb = -1608.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 169
MasterProb = 129448

s [*] :=
1  25
2  85
3  86
4  15
5  29
;

SubProb = -1402.55
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 170
MasterProb = 129254

s [*] :=
1   8
2  42
3  27
4  29
5  19
;

SubProb = -1197.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 171
MasterProb = 129191

s [*] :=
1  46
2  66
3  68
4  78
5  26
;

SubProb = -4001.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 172
MasterProb = 128726

s [*] :=
1   47
2  106
3   49
4   85
5   58
;

SubProb = 943.896
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Problema Entero
MasterProb = 157162

fo1 = 64595
fo2 = 92567

x[j] [*] :=
103  1
117  1
178  1
202  1
222  1
246  1
259  1
270  1
280  1
310  1
321  1
394  1
397  1
403  1
406  1
412  1
416  1
418  1
434  1
435  1
;

aa[i,j] [*,*]
:   103 117 178 202 222 246 259 270 280 310 321 394 397 403 406 412 416 418 434 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
19    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
39    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
47    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
55    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
56    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
58    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
62    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
68    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
71    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
75    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
81    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
86    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
95    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
101   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
103   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0

:   435    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    1
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    1
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    1
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    1
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    1
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
;

vi[i] [*] :=
 1  1
 2  1
 5  1
 6  1
 7  1
 9  1
10  1
12  1
13  1
15  1
16  1
17  1
21  1
23  1
26  1
27  1
28  1
29  1
31  1
32  1
33  1
34  1
45  1
91  1
92  1
96  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
103   1       0       0         0
117   1    4070    4070         0
178   1    4345    4345         0
202   1    5595    4235      1360
222   1    4345    4345         0
246   1    7440    3520      3920
259   1    3380    3300        80
270   1    3025    3025         0
280   1     880     880         0
310   1     605     605         0
321   1    3630    3630         0
394   1    3520    3520         0
397   1    1980    1980         0
403   1     880     880         0
406   1    3520    3520         0
412   1    3710    3630        80
416   1    4070    4070         0
418   1    2035    2035         0
434   1    3465    3465         0
435   1    4100    3300       800
;

