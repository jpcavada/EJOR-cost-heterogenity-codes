Iter 104
MasterProb = 190452

s [*] :=
1  102
2  101
3  103
4  100
5   37
;

SubProb = -37345
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5665

Iter 105
MasterProb = 165878

s [*] :=
1   98
2   92
3   89
4  100
5   97
;

SubProb = -27205
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 106
MasterProb = 162612

s [*] :=
1   90
2  101
3   88
4   91
5   95
;

SubProb = -24828
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 107
MasterProb = 138419

s [*] :=
1   37
2  103
3   91
4   89
5  102
;

SubProb = -28296
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 108
MasterProb = 137616

s [*] :=
1   65
2  101
3   27
4   84
5   90
;

SubProb = -18206
d = 26

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 109
MasterProb = 137616

s [*] :=
1   85
2   30
3   97
4  102
5  103
;

SubProb = -23166.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 110
MasterProb = 131504

s [*] :=
1   93
2   95
3   61
4  102
5   55
;

SubProb = -11231.4
d = 100

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 111
MasterProb = 130143

s [*] :=
1  84
2  87
3  94
4  85
5  93
;

SubProb = -13243
d = 86

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 112
MasterProb = 120249

s [*] :=
1   98
2   99
3  104
4  105
5  106
;

SubProb = -8459
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 113
MasterProb = 118396

s [*] :=
1  103
2  100
3   95
4   49
5   96
;

SubProb = -15836
d = 132

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 114
MasterProb = 117126

s [*] :=
1   99
2   96
3  104
4  105
5  106
;

SubProb = -7204
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 115
MasterProb = 112532

s [*] :=
1   14
2  103
3   54
4  102
5   92
;

SubProb = -15862
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 116
MasterProb = 108731

s [*] :=
1   57
2   18
3  102
4   91
5  100
;

SubProb = -15372.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 117
MasterProb = 108322

s [*] :=
1   64
2   51
3   93
4   88
5  104
;

SubProb = -13636.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 118
MasterProb = 106737

s [*] :=
1   98
2   96
3  104
4  105
5  106
;

SubProb = -7127.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 119
MasterProb = 106475

s [*] :=
1   86
2   27
3  100
4   23
5   16
;

SubProb = -10284.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 120
MasterProb = 104876

s [*] :=
1   94
2   88
3  104
4  105
5  106
;

SubProb = -5407.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 121
MasterProb = 104584

s [*] :=
1   94
2  100
3   51
4   19
5   49
;

SubProb = -7431.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 122
MasterProb = 103619

s [*] :=
1   94
2   97
3  103
4   95
5   90
;

SubProb = -18821
d = 84

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 123
MasterProb = 103313

s [*] :=
1   85
2   89
3   61
4  101
5   95
;

SubProb = -17499.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 124
MasterProb = 102742

s [*] :=
1  84
2  22
3  95
4  79
5  97
;

SubProb = -13015.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 125
MasterProb = 101676

s [*] :=
1  37
2  17
3  69
4  90
5  67
;

SubProb = -5442.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 126
MasterProb = 101348

s [*] :=
1   93
2   86
3  104
4  105
5  106
;

SubProb = -5632.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 127
MasterProb = 101083

s [*] :=
1  59
2  94
3  18
4   4
5  36
;

SubProb = -6386.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 128
MasterProb = 100594

s [*] :=
1   87
2   86
3  104
4  105
5  106
;

SubProb = -4914.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 129
MasterProb = 99658.4

s [*] :=
1   96
2   68
3  104
4  105
5  106
;

SubProb = -1860.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 130
MasterProb = 99536.7

s [*] :=
1  57
2  62
3  85
4  90
5  72
;

SubProb = -12524
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 131
MasterProb = 98777.7

s [*] :=
1  87
2   7
3  10
4  93
5  79
;

SubProb = -7837.46
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 132
MasterProb = 98160.9

s [*] :=
1   73
2   45
3    4
4   44
5  104
;

SubProb = -4426.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 133
MasterProb = 97990.5

s [*] :=
1   85
2   88
3   44
4   29
5  102
;

SubProb = -13907.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 134
MasterProb = 97935.7

s [*] :=
1   88
2  103
3  101
4   86
5   49
;

SubProb = -11671.1
d = 140

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 135
MasterProb = 97549.2

s [*] :=
1  34
2  77
3  45
4  29
5  39
;

SubProb = -6204.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 136
MasterProb = 97331.2

s [*] :=
1   67
2  101
3   15
4   64
5   45
;

SubProb = -6883.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 137
MasterProb = 96832.3

s [*] :=
1   90
2   86
3   33
4    7
5  103
;

SubProb = -6016.71
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 138
MasterProb = 96225.1

s [*] :=
1  25
2  96
3  23
4  86
5  13
;

SubProb = -6591.75
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 139
MasterProb = 94761.3

s [*] :=
1   99
2   29
3   92
4   21
5  104
;

SubProb = -3085.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 140
MasterProb = 94558.7

s [*] :=
1  18
2  38
3  63
4  98
5  34
;

SubProb = -5815.23
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 141
MasterProb = 94262

s [*] :=
1  73
2  86
3  66
4  85
5  40
;

SubProb = -6772.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 142
MasterProb = 94083.2

s [*] :=
1   87
2   55
3   50
4   30
5  100
;

SubProb = -8359.2
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 143
MasterProb = 93437

s [*] :=
1  89
2  73
3  68
4  86
5  85
;

SubProb = -7289.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 144
MasterProb = 92938

s [*] :=
1   4
2  17
3  49
4  24
5  37
;

SubProb = -3529.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 145
MasterProb = 92812.2

s [*] :=
1  87
2  91
3  43
4  14
5  69
;

SubProb = -6691.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 146
MasterProb = 92031.9

s [*] :=
1   45
2   90
3   33
4   27
5  104
;

SubProb = -4779.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 147
MasterProb = 91860.4

s [*] :=
1   20
2   94
3  104
4  105
5  106
;

SubProb = -2439.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 148
MasterProb = 91633.6

s [*] :=
1   99
2   29
3   92
4   21
5  104
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Problema Entero
MasterProb = 161302

fo1 = 68125
fo2 = 93177

x[j] [*] :=
 78  1
103  1
113  1
115  1
117  1
123  1
132  1
147  1
151  1
160  1
174  1
175  1
217  1
218  1
230  1
254  1
255  1
280  1
287  1
296  1
;

aa[i,j] [*,*]
:    78 103 113 115 117 123 132 147 151 160 174 175 217 218 230 254 255 280 287 :=
1     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
19    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
24    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
26    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
31    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
49    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
56    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
60    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
63    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
66    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
68    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
71    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
78    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
80    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   296    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    1
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    1
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
;

vi[i] [*] :=
  2  1
  4  1
  5  1
  6  1
  8  1
 11  1
 16  1
 21  1
 33  1
 42  1
 44  1
 81  1
 82  1
 83  1
 84  1
 85  1
 99  1
102  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
78    1       0       0         0
103   1       0       0         0
113   1    3135    3135         0
115   1    3520    3520         0
117   1    3300    3300         0
123   1    3355    3355         0
132   1    4730    4730         0
147   1    3630    3630         0
151   1    4930    4290       640
160   1    3520    3520         0
174   1    9975    3575      6400
175   1    2640    2640         0
217   1    3520    3520         0
218   1     880     880         0
230   1    3520    3520         0
254   1    3905    3905         0
255   1    4070    4070         0
280   1    3840    3520       320
287   1    4775    3575      1200
296   1     880     880         0
;

