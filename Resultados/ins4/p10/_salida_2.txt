Iter 103
MasterProb = 349251

s [*] :=
1    7
2   35
3   69
4  101
5  102
;

SubProb = -33702.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 104
MasterProb = 321836

s [*] :=
1   99
2    4
3   40
4  102
5   64
;

SubProb = -28949.6
d = 80

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 105
MasterProb = 320782

s [*] :=
1   96
2   99
3   98
4  101
5  100
;

SubProb = -56956
d = 332

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 106
MasterProb = 292681

s [*] :=
1   97
2  102
3  103
4  104
5  105
;

SubProb = -21711
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 107
MasterProb = 272738

s [*] :=
1  74
2  93
3  96
4  97
5  95
;

SubProb = -71632.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 108
MasterProb = 253593

s [*] :=
1   99
2   95
3   91
4  101
5  103
;

SubProb = -58880
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 109
MasterProb = 239918

s [*] :=
1  49
2  39
3  98
4  99
5  97
;

SubProb = -36297.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 110
MasterProb = 233123

s [*] :=
1   30
2   98
3   24
4    4
5  102
;

SubProb = -28912.5
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 111
MasterProb = 221290

s [*] :=
1   1
2  93
3  91
4   3
5   2
;

SubProb = -31078.3
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 112
MasterProb = 212769

s [*] :=
1   58
2   74
3  102
4   17
5   96
;

SubProb = -29694.7
d = 8

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5940

Iter 113
MasterProb = 206911

s [*] :=
1   91
2  101
3  103
4  104
5  105
;

SubProb = -17974
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 114
MasterProb = 204450

s [*] :=
1   56
2   40
3  101
4   98
5   41
;

SubProb = -20254.5
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 115
MasterProb = 200209

s [*] :=
1   24
2  101
3   15
4   91
5   42
;

SubProb = -13146.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 116
MasterProb = 200186

s [*] :=
1   7
2  23
3  99
4  17
5  93
;

SubProb = -12905.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 117
MasterProb = 199580

s [*] :=
1   74
2   92
3  103
4  104
5  105
;

SubProb = -7610
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 118
MasterProb = 199580

s [*] :=
1  25
2  17
3  23
4  30
5  77
;

SubProb = -6023.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 119
MasterProb = 199093

s [*] :=
1   92
2   57
3  103
4  104
5  105
;

SubProb = -6817.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 120
MasterProb = 195978

s [*] :=
1  10
2  99
3  96
4  95
5  25
;

SubProb = -8373.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 121
MasterProb = 195227

s [*] :=
1   84
2   28
3   23
4  101
5   74
;

SubProb = -7304.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 122
MasterProb = 194282

s [*] :=
1   90
2   56
3   95
4  102
5   17
;

SubProb = -10664.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5500

Iter 123
MasterProb = 192340

s [*] :=
1  89
2  12
3  32
4   6
5  10
;

SubProb = -3315.75
d = 8

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 124
MasterProb = 192207

s [*] :=
1   17
2   62
3   59
4   88
5  102
;

SubProb = -3365.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 125
MasterProb = 192101

s [*] :=
1   3
2  91
3  51
4  33
5  63
;

SubProb = -8479.42
d = 39

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 126
MasterProb = 190790

s [*] :=
1  44
2  83
3  86
4  52
5  92
;

SubProb = -4601.27
d = 121

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 127
MasterProb = 190482

s [*] :=
1   19
2   54
3   18
4   86
5  101
;

SubProb = -9367.15
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 128
MasterProb = 189218

s [*] :=
1   49
2   92
3  103
4  104
5  105
;

SubProb = -5182.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 129
MasterProb = 188018

s [*] :=
1   57
2   75
3  101
4   44
5   47
;

SubProb = -3476.74
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 130
MasterProb = 187829

s [*] :=
1  86
2  66
3  17
4  39
5  49
;

SubProb = -6872.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 131
MasterProb = 187090

s [*] :=
1  76
2  93
3  22
4   6
5  15
;

SubProb = -6973.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 132
MasterProb = 186699

s [*] :=
1  38
2  54
3  35
4  16
5  34
;

SubProb = -4068.89
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 133
MasterProb = 186505

s [*] :=
1  97
2  48
3  44
4  91
5  64
;

SubProb = -9978.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 134
MasterProb = 184927

s [*] :=
1  15
2  86
3   7
4  61
5   8
;

SubProb = -6438.72
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 135
MasterProb = 184552

s [*] :=
1   92
2   46
3  103
4  104
5  105
;

SubProb = -4017.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 136
MasterProb = 184109

s [*] :=
1  10
2   1
3  68
4  16
5  26
;

SubProb = -2618.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 137
MasterProb = 184024

s [*] :=
1  21
2  10
3  48
4  11
5  42
;

SubProb = -2311.06
d = 37

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 138
MasterProb = 183885

s [*] :=
1   92
2   21
3  103
4  104
5  105
;

SubProb = -2411.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 139
MasterProb = 183695

s [*] :=
1  21
2  89
3  45
4  42
5   6
;

SubProb = -3698.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 140
MasterProb = 183182

s [*] :=
1  33
2  13
3  81
4  16
5  26
;

SubProb = -4465.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 141
MasterProb = 181609

s [*] :=
1  37
2  38
3  77
4  83
5  54
;

SubProb = -2781.9
d = 16

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 142
MasterProb = 181334

s [*] :=
1   92
2   41
3  103
4  104
5  105
;

SubProb = -677.156
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Iter 143
MasterProb = 181291

s [*] :=
1  88
2  42
3  20
4  16
5  63
;

SubProb = -666.318
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 144
MasterProb = 181264

s [*] :=
1   9
2  21
3  48
4  33
5  16
;

SubProb = -4727.26
d = 29

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 145
MasterProb = 180557

s [*] :=
1  52
2  29
3  51
4  99
5  49
;

SubProb = -2405.17
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 146
MasterProb = 180369

s [*] :=
1  67
2  29
3  71
4  40
5  81
;

SubProb = -3034.94
d = 20

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 147
MasterProb = 180209

s [*] :=
1  49
2  12
3  45
4  17
5  83
;

SubProb = -1063.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5335

Iter 148
MasterProb = 180176

s [*] :=
1   57
2   92
3  103
4  104
5  105
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 251746

fo1 = 82620
fo2 = 169126

x[j] [*] :=
100  1
127  1
128  1
148  1
179  1
197  1
204  1
216  1
219  1
227  1
248  1
272  1
327  1
381  1
384  1
387  1
406  1
408  1
409  1
419  1
;

aa[i,j] [*,*]
:   100 127 128 148 179 197 204 216 219 227 248 272 327 381 384 387 406 408 409 :=
1     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
9     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
14    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
19    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
25    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
26    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
28    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
39    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
47    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
55    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
58    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
62    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
72    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
78    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
87    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
88    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
93    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0

:   419    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    1
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    1
50    0
51    1
52    1
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    1
100   0
101   0
102   0
;

vi[i] [*] :=
 2  1
 3  1
 5  1
12  1
17  1
21  1
23  1
31  1
36  1
50  1
56  1
66  1
67  1
73  1
75  1
94  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
100   1        0       0         0
127   1     3570    3410       160
128   1     4345    4345         0
148   1     6070    4070      2000
179   1     3135    3135         0
197   1     4180    4180         0
204   1    15690    2970     12720
216   1     4345    4345         0
219   1     4730    4730         0
227   1      880     880         0
248   1     3575    3575         0
272   1     4235    4235         0
327   1     3575    3575         0
381   1     4675    4675         0
384   1     4120    3960       160
387   1      880     880         0
406   1     5175    3575      1600
408   1     3020    2860       160
409   1      880     880         0
419   1     5540    4180      1360
;

