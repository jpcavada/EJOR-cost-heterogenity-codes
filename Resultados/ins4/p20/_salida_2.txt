Iter 104
MasterProb = 347719

s [*] :=
1   78
2  100
3   49
4  101
5   74
;

SubProb = -43358.9
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 105
MasterProb = 307836

s [*] :=
1  93
2  87
3  97
4  17
5  89
;

SubProb = -35468.1
d = 29

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 106
MasterProb = 279126

s [*] :=
1  103
2   94
3   97
4  101
5   93
;

SubProb = -77185
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 107
MasterProb = 273319

s [*] :=
1  88
2  30
3  39
4  74
5  98
;

SubProb = -24202
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 108
MasterProb = 254599

s [*] :=
1  63
2  98
3  93
4  74
5  40
;

SubProb = -33268.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 109
MasterProb = 254599

s [*] :=
1   87
2   20
3  103
4    8
5   91
;

SubProb = -30391.1
d = 33

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 110
MasterProb = 250763

s [*] :=
1  98
2  75
3   3
4  82
5  37
;

SubProb = -11318.3
d = 83

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 111
MasterProb = 247994

s [*] :=
1  100
2   94
3   99
4  104
5  105
;

SubProb = -36312
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 112
MasterProb = 231312

s [*] :=
1  41
2  97
3  67
4  26
5  51
;

SubProb = -15480.2
d = 21

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 113
MasterProb = 230827

s [*] :=
1   4
2  16
3  60
4  97
5  98
;

SubProb = -18176
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 114
MasterProb = 228831

s [*] :=
1  85
2  59
3  24
4  99
5  91
;

SubProb = -21942.1
d = 21

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 115
MasterProb = 218820

s [*] :=
1   99
2  101
3  104
4  105
5  106
;

SubProb = -9736.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 116
MasterProb = 218820

s [*] :=
1  92
2  54
3   8
4  98
5  93
;

SubProb = -22792.9
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 117
MasterProb = 214710

s [*] :=
1  103
2   56
3    4
4   36
5   92
;

SubProb = -27881.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 118
MasterProb = 212337

s [*] :=
1  91
2  97
3  46
4   1
5  88
;

SubProb = -14002.9
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 119
MasterProb = 208957

s [*] :=
1  98
2  64
3  74
4  25
5  94
;

SubProb = -21966.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 120
MasterProb = 205654

s [*] :=
1   81
2   39
3   25
4   69
5  101
;

SubProb = -13285.3
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 121
MasterProb = 203306

s [*] :=
1  18
2  49
3  24
4  98
5   9
;

SubProb = -10576.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 122
MasterProb = 202128

s [*] :=
1   83
2   33
3   41
4   86
5  101
;

SubProb = -10710.7
d = 23

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 123
MasterProb = 201801

s [*] :=
1  77
2  22
3  42
4  19
5  61
;

SubProb = -8192.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 124
MasterProb = 200989

s [*] :=
1   35
2    7
3   95
4   45
5  104
;

SubProb = -8197.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 125
MasterProb = 197945

s [*] :=
1  88
2  18
3  92
4  38
5  70
;

SubProb = -5181.89
d = 55

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 126
MasterProb = 197733

s [*] :=
1  94
2   7
3  54
4  66
5  44
;

SubProb = -8592.36
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 127
MasterProb = 197103

s [*] :=
1  40
2  88
3  98
4  12
5  17
;

SubProb = -9253.3
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 128
MasterProb = 195809

s [*] :=
1  16
2  30
3  97
4  61
5  80
;

SubProb = -10517.6
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 129
MasterProb = 194382

s [*] :=
1  87
2  25
3  90
4  38
5  74
;

SubProb = -9389.71
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 130
MasterProb = 193156

s [*] :=
1  10
2  71
3  29
4  93
5  18
;

SubProb = -5448.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 131
MasterProb = 192410

s [*] :=
1  40
2  88
3   1
4  17
5  91
;

SubProb = -6327.33
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 132
MasterProb = 191602

s [*] :=
1  33
2  49
3  46
4  47
5  32
;

SubProb = -9325.75
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 133
MasterProb = 190796

s [*] :=
1  40
2  88
3  60
4  89
5  15
;

SubProb = -9783.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 134
MasterProb = 189690

s [*] :=
1  40
2  88
3  38
4  39
5  28
;

SubProb = -2454.13
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 135
MasterProb = 189504

s [*] :=
1  33
2  64
3  58
4  48
5   9
;

SubProb = -2632.48
d = 36

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 136
MasterProb = 189250

s [*] :=
1  98
2  57
3  90
4  36
5  61
;

SubProb = -274.236
d = 47

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 137
MasterProb = 189247

s [*] :=
1   52
2   41
3   89
4    4
5  103
;

SubProb = -5016.6
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 138
MasterProb = 188864

s [*] :=
1  33
2  97
3  21
4  18
5  43
;

SubProb = -9496.64
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 139
MasterProb = 187929

s [*] :=
1  88
2  74
3  14
4  94
5  54
;

SubProb = -4685.96
d = 60

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 140
MasterProb = 187688

s [*] :=
1  65
2  16
3  48
4  68
5  92
;

SubProb = -2934.34
d = 42

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 141
MasterProb = 187662

s [*] :=
1  15
2  49
3  12
4  17
5   8
;

SubProb = -5979.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 142
MasterProb = 187432

s [*] :=
1  98
2  36
3  42
4  32
5  95
;

SubProb = -6623.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 143
MasterProb = 186515

s [*] :=
1  94
2   9
3  17
4  14
5  92
;

SubProb = -6983.2
d = 32

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 144
MasterProb = 186202

s [*] :=
1   95
2   24
3  103
4  104
5  105
;

SubProb = -3272.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 145
MasterProb = 185942

s [*] :=
1   95
2   49
3   52
4   82
5  104
;

SubProb = -6931.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 146
MasterProb = 184353

s [*] :=
1   95
2   22
3   63
4  104
5  105
;

SubProb = -3546.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 147
MasterProb = 184169

s [*] :=
1    9
2   28
3   33
4   26
5  103
;

SubProb = -2437.29
d = 35

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 148
MasterProb = 183912

s [*] :=
1  81
2  63
3  64
4  93
5   7
;

SubProb = -3973.36
d = 12

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 149
MasterProb = 183798

s [*] :=
1  44
2  67
3  35
4  49
5  91
;

SubProb = -7895.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 150
MasterProb = 183373

s [*] :=
1  29
2  21
3  83
4  47
5  75
;

SubProb = -4328.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 151
MasterProb = 182583

s [*] :=
1   16
2   13
3   10
4  101
5   91
;

SubProb = -5332.07
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 152
MasterProb = 181935

s [*] :=
1  46
2  84
3  16
4  65
5  38
;

SubProb = -1947.07
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 153
MasterProb = 181891

s [*] :=
1  69
2  24
3  17
4  86
5  93
;

SubProb = -4530.69
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 154
MasterProb = 181705

s [*] :=
1   89
2   65
3   95
4  104
5  105
;

SubProb = -3207.08
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 155
MasterProb = 181574

s [*] :=
1   83
2   35
3   87
4   69
5  104
;

SubProb = -2092.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 156
MasterProb = 181420

s [*] :=
1  103
2    4
3   76
4   35
5   93
;

SubProb = -2669.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 157
MasterProb = 181258

s [*] :=
1  83
2  35
3  45
4  82
5  87
;

SubProb = -2148.25
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 158
MasterProb = 181032

s [*] :=
1  13
2  72
3  24
4  43
5  59
;

SubProb = 332.337
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Problema Entero
MasterProb = 239630

fo1 = 78160
fo2 = 161470

x[j] [*] :=
102  1
122  1
128  1
154  1
181  1
188  1
198  1
211  1
237  1
256  1
291  1
296  1
341  1
361  1
379  1
381  1
385  1
391  1
398  1
425  1
;

aa[i,j] [*,*]
:   102 122 128 154 181 188 198 211 237 256 291 296 341 361 379 381 385 391 398 :=
1     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
8     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
15    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
19    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
24    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
28    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
37    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
44    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
46    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
57    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
60    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
63    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
67    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
71    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
75    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
77    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
79    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
85    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
90    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:   425    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    1
11    0
12    0
13    1
14    0
15    0
16    1
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    1
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   1
102   0
103   0
;

vi[i] [*] :=
 2  1
 5  1
20  1
21  1
25  1
31  1
33  1
41  1
42  1
49  1
50  1
53  1
55  1
61  1
73  1
96  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
102   1       0       0         0
122   1    3245    3245         0
128   1    3570    3410       160
154   1    5010    4290       720
181   1    6305    5665       640
188   1    3850    3850         0
198   1    4180    4180         0
211   1    3740    3740         0
237   1    4500    3300      1200
256   1    3520    3520         0
291   1     880     880         0
296   1     605     605         0
341   1    8125    4125      4000
361   1    8125    4125      4000
379   1    6115    3795      2320
381   1    4400    4400         0
385   1    1760    1760         0
391   1    2805    2805         0
398   1    3905    3905         0
425   1    3520    3520         0
;

