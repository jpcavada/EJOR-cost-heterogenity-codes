Iter 104
MasterProb = 130030

s [*] :=
1  102
2  103
3  104
4  105
5  106
;

SubProb = -14289.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 105
MasterProb = 124452

s [*] :=
1   95
2  101
3   98
4  100
5  104
;

SubProb = -17050
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 106
MasterProb = 111885

s [*] :=
1  100
2   37
3   99
4  104
5  105
;

SubProb = -8462
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 107
MasterProb = 111885

s [*] :=
1  37
2  43
3  38
4  61
5  91
;

SubProb = -9381.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 108
MasterProb = 110393

s [*] :=
1  101
2   99
3  104
4  105
5  106
;

SubProb = -4979
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 109
MasterProb = 110393

s [*] :=
1  26
2  63
3  92
4  88
5  38
;

SubProb = -5581.51
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 110
MasterProb = 109561

s [*] :=
1  90
2  62
3  23
4  93
5  94
;

SubProb = -9189.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 111
MasterProb = 106409

s [*] :=
1  48
2  41
3  75
4  58
5  93
;

SubProb = -6932.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 112
MasterProb = 105242

s [*] :=
1  94
2  98
3  96
4  27
5  91
;

SubProb = -10470
d = 32

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 113
MasterProb = 102889

s [*] :=
1   64
2  103
3  104
4  105
5  106
;

SubProb = -4253
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 114
MasterProb = 102889

s [*] :=
1   91
2   54
3   96
4   92
5  104
;

SubProb = -8871.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 115
MasterProb = 98807.4

s [*] :=
1   89
2   72
3   88
4  104
5  105
;

SubProb = -6720
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 116
MasterProb = 95795.7

s [*] :=
1  102
2   99
3  104
4  105
5  106
;

SubProb = -4839.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 117
MasterProb = 94908.3

s [*] :=
1   45
2   49
3  104
4  105
5  106
;

SubProb = -4188.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1595

Iter 118
MasterProb = 93226.5

s [*] :=
1  97
2  89
3  79
4  95
5  34
;

SubProb = -10187.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 119
MasterProb = 90445.3

s [*] :=
1  64
2  18
3  89
4  61
5  30
;

SubProb = -4992.56
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 120
MasterProb = 90339.2

s [*] :=
1  88
2  86
3  63
4  18
5  74
;

SubProb = -4009.51
d = 8

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 121
MasterProb = 89915

s [*] :=
1   98
2   97
3  104
4  105
5  106
;

SubProb = -3397.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 122
MasterProb = 89591.4

s [*] :=
1  61
2  64
3  14
4  51
5  80
;

SubProb = -4194.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 123
MasterProb = 89159.3

s [*] :=
1   96
2   68
3  104
4  105
5  106
;

SubProb = -2692.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 124
MasterProb = 89155.5

s [*] :=
1   18
2   90
3  100
4   77
5   33
;

SubProb = -5863.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 125
MasterProb = 88698.8

s [*] :=
1  67
2  27
3  72
4  98
5  73
;

SubProb = -4414.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 126
MasterProb = 88322.4

s [*] :=
1   89
2  101
3   28
4   93
5   40
;

SubProb = -10139.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 127
MasterProb = 87960

s [*] :=
1   99
2   29
3   21
4   92
5  104
;

SubProb = -3523.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 128
MasterProb = 87610

s [*] :=
1  29
2  44
3  94
4  69
5  92
;

SubProb = -1854.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 129
MasterProb = 87459.2

s [*] :=
1   96
2   20
3   95
4   15
5  104
;

SubProb = -5444.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 130
MasterProb = 86688

s [*] :=
1  56
2  45
3  46
4  24
5  66
;

SubProb = -3962.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 131
MasterProb = 86544.7

s [*] :=
1  68
2  97
3  47
4  51
5   8
;

SubProb = -3029.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 132
MasterProb = 86321.2

s [*] :=
1   97
2   55
3  104
4  105
5  106
;

SubProb = -2539.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 133
MasterProb = 85945.1

s [*] :=
1  53
2  90
3  50
4  52
5  65
;

SubProb = -4444.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 134
MasterProb = 85433

s [*] :=
1  87
2  93
3  61
4  65
5  86
;

SubProb = -5126.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 135
MasterProb = 84581.6

s [*] :=
1  37
2  17
3  69
4  90
5  67
;

SubProb = -2608.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 136
MasterProb = 84252.9

s [*] :=
1   97
2   49
3  104
4  105
5  106
;

SubProb = -2472.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 137
MasterProb = 84017.3

s [*] :=
1   42
2  103
3  104
4  105
5  106
;

SubProb = -1179.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 138
MasterProb = 83935

s [*] :=
1   94
2  101
3   91
4   88
5   20
;

SubProb = -4135.11
d = 92

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 139
MasterProb = 83719.6

s [*] :=
1  90
2  42
3  31
4  91
5  86
;

SubProb = -5270.03
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 140
MasterProb = 82381

s [*] :=
1  40
2  35
3  90
4  70
5  16
;

SubProb = -2155.11
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 141
MasterProb = 82238.6

s [*] :=
1  13
2  94
3  96
4  98
5  24
;

SubProb = -2886.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5555

Iter 142
MasterProb = 82127.5

s [*] :=
1   88
2   20
3  104
4  105
5  106
;

SubProb = -1832.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 143
MasterProb = 81897.8

s [*] :=
1   71
2   77
3   53
4   87
5  104
;

SubProb = -1736.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 144
MasterProb = 81735

s [*] :=
1  90
2  89
3  33
4  99
5  16
;

SubProb = -4760.04
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 145
MasterProb = 81337.9

s [*] :=
1   92
2  101
3   71
4   24
5   22
;

SubProb = -4947.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 146
MasterProb = 80897.6

s [*] :=
1   88
2   87
3  104
4  105
5  106
;

SubProb = -902.682
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 147
MasterProb = 80782.7

s [*] :=
1   94
2  101
3    4
4   69
5   87
;

SubProb = -5185.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 148
MasterProb = 80033.9

s [*] :=
1   20
2   49
3  104
4  105
5  106
;

SubProb = -476.786
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 149
MasterProb = 80027.7

s [*] :=
1  48
2  98
3  23
4  75
5  56
;

SubProb = -4194.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 150
MasterProb = 79790.1

s [*] :=
1  91
2  48
3  98
4  88
5  71
;

SubProb = -5768.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 151
MasterProb = 78863.1

s [*] :=
1  23
2  72
3  58
4  92
5  74
;

SubProb = -1163.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 152
MasterProb = 78807.8

s [*] :=
1   25
2   56
3   32
4  103
5   94
;

SubProb = -3796.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 153
MasterProb = 78576.1

s [*] :=
1  14
2  35
3  77
4  42
5  86
;

SubProb = -2659.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 154
MasterProb = 78205.1

s [*] :=
1  94
2  24
3  93
4  64
5  36
;

SubProb = -3316.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 155
MasterProb = 77945.8

s [*] :=
1   70
2   20
3  104
4  105
5  106
;

SubProb = -537.472
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 156
MasterProb = 77920.9

s [*] :=
1  75
2  44
3  47
4  19
5  74
;

SubProb = -1459.83
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 157
MasterProb = 77751.7

s [*] :=
1  27
2  19
3  90
4  23
5  16
;

SubProb = -2432.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 158
MasterProb = 77440

s [*] :=
1   64
2  102
3  104
4  105
5  106
;

SubProb = -1633.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 159
MasterProb = 77302

s [*] :=
1  41
2  97
3  67
4  26
5  51
;

SubProb = -1147.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 160
MasterProb = 77287.5

s [*] :=
1  103
2  102
3  104
4  105
5  106
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Problema Entero
MasterProb = 119372

fo1 = 53055
fo2 = 66317

x[j] [*] :=
 28  1
 42  1
 45  1
113  1
114  1
123  1
135  1
151  1
181  1
205  1
229  1
230  1
232  1
273  1
274  1
281  1
283  1
294  1
301  1
307  1
;

aa[i,j] [*,*]
:    28  42  45 113 114 123 135 151 181 205 229 230 232 273 274 281 283 294 301 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
19    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
21    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
26    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
28    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
33    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
34    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
42    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
45    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
47    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
57    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
62    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
63    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
66    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
68    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
74    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1

:   307    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    1
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   1
103   0
;

vi[i] [*] :=
 2  1
 3  1
 5  1
 7  1
 8  1
10  1
11  1
12  1
13  1
16  1
17  1
23  1
29  1
81  1
82  1
83  1
84  1
85  1
88  1
89  1
91  1
95  1
96  1
99  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
28    1       0       0        0
42    1       0       0        0
45    1       0       0        0
113   1    3135    3135        0
114   1    3905    3905        0
123   1    3355    3355        0
135   1    3575    3575        0
151   1    4930    4290      640
181   1    3520    3520        0
205   1    3520    3520        0
229   1     880     880        0
230   1    3520    3520        0
232   1    3245    3245        0
273   1    3630    3630        0
274   1    3520    3520        0
281   1     880     880        0
283   1    3080    3080        0
294   1    4070    4070        0
301   1    3630    3630        0
307   1     660     660        0
;

