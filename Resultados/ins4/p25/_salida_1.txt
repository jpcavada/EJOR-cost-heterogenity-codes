Iter 101
MasterProb = 142606

s [*] :=
1  78
2  11
3  10
4  13
5  73
;

SubProb = -17028.7
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 102
MasterProb = 140693

s [*] :=
1  16
2  13
3  39
4  82
5  37
;

SubProb = -17233.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 103
MasterProb = 138793

s [*] :=
1   71
2   83
3  101
4  102
5  103
;

SubProb = -4140
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 104
MasterProb = 136243

s [*] :=
1  66
2  88
3  82
4  72
5  55
;

SubProb = -13714.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 105
MasterProb = 134010

s [*] :=
1   21
2   71
3    3
4  101
5  102
;

SubProb = -7764.89
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2145

Iter 106
MasterProb = 133750

s [*] :=
1  50
2  14
3  63
4  68
5  81
;

SubProb = -6202.31
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 107
MasterProb = 133237

s [*] :=
1   71
2   43
3  101
4  102
5  103
;

SubProb = -2598.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 108
MasterProb = 133054

s [*] :=
1  90
2  69
3  34
4  31
5  63
;

SubProb = -5069.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 109
MasterProb = 132508

s [*] :=
1   40
2   75
3  100
4   16
5    3
;

SubProb = -5020.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 110
MasterProb = 132108

s [*] :=
1  32
2  14
3  23
4   3
5  98
;

SubProb = -5807.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 111
MasterProb = 131880

s [*] :=
1  49
2  57
3  34
4  27
5  44
;

SubProb = -7274.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 112
MasterProb = 131312

s [*] :=
1  20
2  80
3  78
4  71
5  44
;

SubProb = -4075.93
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 113
MasterProb = 130895

s [*] :=
1  68
2  64
3  72
4  40
5  59
;

SubProb = -6425.16
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 114
MasterProb = 130256

s [*] :=
1  96
2   4
3  24
4  52
5  21
;

SubProb = -3683.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 115
MasterProb = 129811

s [*] :=
1  96
2  39
3  25
4  65
5  76
;

SubProb = -5795.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 116
MasterProb = 129012

s [*] :=
1  21
2  79
3  25
4  63
5  85
;

SubProb = -5173.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 117
MasterProb = 128123

s [*] :=
1  85
2  67
3  10
4  92
5  73
;

SubProb = -6697.73
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 118
MasterProb = 127318

s [*] :=
1  63
2  49
3  30
4  72
5  56
;

SubProb = -7110.64
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 119
MasterProb = 126747

s [*] :=
1  66
2  33
3  61
4  37
5  67
;

SubProb = -3547.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 120
MasterProb = 126454

s [*] :=
1  76
2  12
3  52
4  53
5  31
;

SubProb = -5619.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 121
MasterProb = 126072

s [*] :=
1  27
2  82
3  80
4   6
5  99
;

SubProb = -6044.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 122
MasterProb = 125234

s [*] :=
1  47
2  86
3  22
4  37
5  80
;

SubProb = -3535.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 123
MasterProb = 124989

s [*] :=
1  90
2   8
3  58
4  63
5  71
;

SubProb = -5899.3
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 124
MasterProb = 124224

s [*] :=
1  42
2  43
3  97
4   2
5  84
;

SubProb = -3581.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 125
MasterProb = 123871

s [*] :=
1  100
2   94
3   33
4  101
5  102
;

SubProb = -1238.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 126
MasterProb = 123859

s [*] :=
1   3
2  25
3  51
4  11
5  37
;

SubProb = -7342.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 127
MasterProb = 123345

s [*] :=
1   73
2   33
3   34
4  101
5  102
;

SubProb = -2284.08
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Iter 128
MasterProb = 123248

s [*] :=
1  37
2   7
3  98
4  97
5  85
;

SubProb = -1557.47
d = 56

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 129
MasterProb = 123248

s [*] :=
1  10
2   5
3  78
4  46
5  77
;

SubProb = -3296.23
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 130
MasterProb = 122837

s [*] :=
1  85
2  33
3  60
4  50
5  45
;

SubProb = -5670.97
d = 39

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 131
MasterProb = 122591

s [*] :=
1  87
2  85
3  81
4  73
5  84
;

SubProb = -2891.5
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 132
MasterProb = 122559

s [*] :=
1  41
2  34
3  52
4  87
5  23
;

SubProb = -3675.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 133
MasterProb = 122062

s [*] :=
1  40
2  58
3  67
4  94
5  66
;

SubProb = -5964.69
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 134
MasterProb = 121104

s [*] :=
1  36
2  97
3  44
4  66
5  83
;

SubProb = -5355.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 135
MasterProb = 120711

s [*] :=
1   72
2   73
3   98
4    1
5  101
;

SubProb = -3685.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 136
MasterProb = 120506

s [*] :=
1  67
2  51
3  80
4   3
5  85
;

SubProb = -1971.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 137
MasterProb = 120444

s [*] :=
1  57
2  48
3  13
4  72
5  35
;

SubProb = -2024.1
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 138
MasterProb = 120364

s [*] :=
1  20
2  67
3  14
4  80
5  54
;

SubProb = -2605.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 139
MasterProb = 120218

s [*] :=
1  11
2  75
3  19
4  67
5  98
;

SubProb = -6491.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 140
MasterProb = 119163

s [*] :=
1  14
2  63
3  53
4  16
5  57
;

SubProb = -5806.57
d = 8

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 141
MasterProb = 118747

s [*] :=
1  100
2   69
3   74
4   23
5   72
;

SubProb = -4176.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 142
MasterProb = 118607

s [*] :=
1   10
2    7
3   51
4  101
5  102
;

SubProb = -3529.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 143
MasterProb = 118601

s [*] :=
1   16
2   71
3   62
4  101
5  102
;

SubProb = -1758.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 144
MasterProb = 118446

s [*] :=
1  84
2  18
3  93
4  10
5  56
;

SubProb = -1799.22
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 145
MasterProb = 118426

s [*] :=
1   42
2   83
3   51
4  101
5  102
;

SubProb = 246.751
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Problema Entero
MasterProb = 191601

fo1 = 69135
fo2 = 122466

x[j] [*] :=
112  1
124  1
125  1
141  1
159  1
174  1
193  1
202  1
210  1
225  1
231  1
234  1
236  1
238  1
249  1
251  1
282  1
303  1
334  1
340  1
;

aa[i,j] [*,*]
:   112 124 125 141 159 174 193 202 210 225 231 234 236 238 249 251 282 303 334 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
7     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
21    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
28    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
31    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
40    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
46    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
49    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
58    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
62    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
64    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
68    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
72    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
74    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
79    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
81    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
83    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
90    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
92    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
98    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0

:   340    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    1
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    1
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    1
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    1
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    1
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 2  1
 4  1
 5  1
 8  1
12  1
15  1
16  1
19  1
24  1
26  1
33  1
44  1
70  1
87  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
112   1    3520    3520         0
124   1    4345    4345         0
125   1    6520    3960      2560
141   1    3850    3850         0
159   1     880     880         0
174   1     935     935         0
193   1     880     880         0
202   1     880     880         0
210   1    3520    3520         0
225   1    4400    4400         0
231   1    4635    3355      1280
234   1    4510    4510         0
236   1    3795    3795         0
238   1    3410    3410         0
249   1    3905    3905         0
251   1    4090    2970      1120
282   1    3795    3795         0
303   1     880     880         0
334   1    4235    4235         0
340   1    6150    4950      1200
;

