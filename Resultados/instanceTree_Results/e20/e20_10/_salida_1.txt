Iter 101
MasterProb = 77673.7

s [*] :=
1  74
2  30
3  24
4  61
5  71
;

SubProb = -11620.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 102
MasterProb = 76846.1

s [*] :=
1  32
2   3
3   5
4  61
5  58
;

SubProb = -11947.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 103
MasterProb = 74371.3

s [*] :=
1  97
2  21
3  22
4  42
5  53
;

SubProb = -7854.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2475

Iter 104
MasterProb = 72786.1

s [*] :=
1  51
2  75
3  98
4  94
5  82
;

SubProb = -6694.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 105
MasterProb = 71211.9

s [*] :=
1  92
2  50
3   3
4  45
5  40
;

SubProb = -5690.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 6160

Iter 106
MasterProb = 70812

s [*] :=
1  80
2  25
3  37
4  65
5  21
;

SubProb = -5701.5
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 107
MasterProb = 70206.8

s [*] :=
1  31
2  64
3  58
4  69
5  42
;

SubProb = -5386.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 108
MasterProb = 69537.7

s [*] :=
1  82
2  45
3  23
4  81
5  22
;

SubProb = -4215.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 109
MasterProb = 68988.9

s [*] :=
1  96
2  38
3  37
4   2
5   3
;

SubProb = -2869.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 110
MasterProb = 68760.5

s [*] :=
1   98
2   19
3   84
4   30
5  100
;

SubProb = -2397.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 111
MasterProb = 68438.5

s [*] :=
1   21
2  100
3   72
4   66
5   81
;

SubProb = -3573.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 112
MasterProb = 68089.2

s [*] :=
1  25
2  92
3   6
4  32
5  21
;

SubProb = -3512.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 113
MasterProb = 67548.2

s [*] :=
1  53
2   3
3  60
4  98
5  84
;

SubProb = -1081.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 114
MasterProb = 67528.9

s [*] :=
1  48
2  23
3   1
4  69
5  59
;

SubProb = -879.467
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 115
MasterProb = 67414.1

s [*] :=
1  63
2  54
3  27
4  22
5  65
;

SubProb = -927.415
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 116
MasterProb = 67335.9

s [*] :=
1  31
2  58
3  23
4  52
5  34
;

SubProb = -3483.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 117
MasterProb = 67109.1

s [*] :=
1  69
2  42
3  63
4  20
5  48
;

SubProb = -1568.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 118
MasterProb = 66838.6

s [*] :=
1  29
2  39
3  86
4  65
5  92
;

SubProb = -2643.54
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 119
MasterProb = 66707.6

s [*] :=
1  23
2   8
3  46
4  65
5   5
;

SubProb = -2244.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 120
MasterProb = 66467.1

s [*] :=
1  53
2  87
3  37
4  49
5  58
;

SubProb = -1127.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 121
MasterProb = 66351

s [*] :=
1  55
2  44
3  23
4  73
5  64
;

SubProb = -2844.22
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 122
MasterProb = 65544.9

s [*] :=
1  100
2   42
3   32
4   75
5   45
;

SubProb = -1989.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 123
MasterProb = 65537.2

s [*] :=
1  53
2  80
3  84
4  36
5  29
;

SubProb = -1042.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 124
MasterProb = 65463.8

s [*] :=
1   97
2   98
3  100
4  101
5  102
;

SubProb = -417.361
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1320

Iter 125
MasterProb = 65460.2

s [*] :=
1  32
2  61
3  80
4  87
5  36
;

SubProb = -681.198
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 126
MasterProb = 65434.6

s [*] :=
1    2
2  100
3   87
4   32
5  101
;

SubProb = -810.067
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 127
MasterProb = 65429.1

s [*] :=
1  100
2   24
3   53
4   93
5   75
;

SubProb = -783.103
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 128
MasterProb = 65383.9

s [*] :=
1  42
2  89
3  69
4  91
5  24
;

SubProb = -966.405
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 129
MasterProb = 65310.9

s [*] :=
1  31
2   4
3  84
4  87
5  65
;

SubProb = -2029.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 130
MasterProb = 65006

s [*] :=
1  32
2  65
3  91
4  59
5  78
;

SubProb = -1670.04
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 131
MasterProb = 64770.8

s [*] :=
1  49
2   3
3   5
4   1
5  25
;

SubProb = -1038.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 132
MasterProb = 64442.6

s [*] :=
1  86
2  37
3  24
4  69
5  63
;

SubProb = -2151.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 133
MasterProb = 64250.9

s [*] :=
1  87
2  93
3  78
4  10
5  20
;

SubProb = -129.929
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 64246.3

s [*] :=
1  81
2   2
3  78
4  87
5  64
;

SubProb = -1622.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 135
MasterProb = 64099.1

s [*] :=
1   64
2  100
3   39
4   54
5   62
;

SubProb = -968.579
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 136
MasterProb = 63960.3

s [*] :=
1   92
2   40
3   79
4  101
5  102
;

SubProb = -529.534
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 137
MasterProb = 63956.1

s [*] :=
1  72
2  86
3  29
4  81
5  75
;

SubProb = -2051.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 138
MasterProb = 63799.4

s [*] :=
1   19
2   80
3  101
4  102
5  103
;

SubProb = -871.478
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 139
MasterProb = 63445.3

s [*] :=
1   5
2  31
3  49
4  41
5  98
;

SubProb = -1673.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 140
MasterProb = 63372.9

s [*] :=
1  63
2  77
3  80
4  59
5   8
;

SubProb = -1823.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 141
MasterProb = 63171.5

s [*] :=
1  89
2   1
3  96
4  55
5  24
;

SubProb = -270.291
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 142
MasterProb = 63164.4

s [*] :=
1  98
2  39
3  50
4  84
5  97
;

SubProb = -2608.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 143
MasterProb = 62741.7

s [*] :=
1  39
2  96
3  82
4   5
5  58
;

SubProb = -459.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 144
MasterProb = 62738.5

s [*] :=
1   8
2   6
3   4
4  52
5   1
;

SubProb = -708.46
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 145
MasterProb = 62710.2

s [*] :=
1   2
2  63
3   3
4  49
5  32
;

SubProb = -790.26
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 146
MasterProb = 62671

s [*] :=
1   5
2  92
3  87
4  72
5  55
;

SubProb = -1071.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 147
MasterProb = 62597.5

s [*] :=
1   41
2   25
3   48
4  101
5  102
;

SubProb = -717.353
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2090

Iter 148
MasterProb = 62527.4

s [*] :=
1  51
2  81
3  31
4  98
5  36
;

SubProb = -1074.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 149
MasterProb = 62500.1

s [*] :=
1  20
2  71
3  84
4  60
5  22
;

SubProb = -1294.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 150
MasterProb = 62272.6

s [*] :=
1  81
2  79
3   8
4   6
5  29
;

SubProb = -1062.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 151
MasterProb = 62129.1

s [*] :=
1  17
2  63
3  52
4  50
5  60
;

SubProb = -473.918
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 152
MasterProb = 62120.6

s [*] :=
1    8
2   25
3    4
4   33
5  101
;

SubProb = -1342.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2695

Iter 153
MasterProb = 61818.3

s [*] :=
1  100
2   33
3   34
4   84
5   41
;

SubProb = -3691.08
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 154
MasterProb = 61123.9

s [*] :=
1  48
2  62
3  40
4  23
5  78
;

SubProb = -1707.02
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 155
MasterProb = 60782.9

s [*] :=
1  89
2  52
3   2
4  51
5  45
;

SubProb = -1378.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 156
MasterProb = 60696.2

s [*] :=
1  84
2   4
3  36
4  30
5  41
;

SubProb = -1700.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 157
MasterProb = 60566

s [*] :=
1  60
2  50
3  53
4  20
5  31
;

SubProb = -1083.92
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 158
MasterProb = 60531.9

s [*] :=
1   33
2   54
3  101
4  102
5  103
;

SubProb = -647.651
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 159
MasterProb = 60499.8

s [*] :=
1  52
2  69
3  45
4  32
5  39
;

SubProb = -1655.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 160
MasterProb = 60422.4

s [*] :=
1   65
2   87
3  101
4  102
5  103
;

SubProb = -547.288
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 161
MasterProb = 60255.3

s [*] :=
1   2
2  57
3  75
4   1
5  65
;

SubProb = 260.604
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Problema Entero
MasterProb = 67476

fo1 = 45870
fo2 = 21606

x[j] [*] :=
  5  1
 15  1
 19  1
 32  1
 64  1
 70  1
122  1
134  1
239  1
276  1
278  1
282  1
300  1
305  1
307  1
312  1
314  1
324  1
336  1
345  1
;

aa[i,j] [*,*]
:     5  15  19  32  64  70 122 134 239 276 278 282 300 305 307 312 314 324 336 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
25    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
30    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
32    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
40    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
43    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
53    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
64    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
70    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
78    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
83    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0

:   345    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    1
21    0
22    1
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    1
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    1
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    1
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 4  1
 9  1
10  1
11  1
12  1
13  1
14  1
16  1
17  1
18  1
26  1
28  1
35  1
41  1
44  1
46  1
47  1
49  1
54  1
56  1
68  1
74  1
76  1
79  1
85  1
87  1
90  1
93  1
95  1
99  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
5     1       0       0       0
15    1       0       0       0
19    1       0       0       0
32    1       0       0       0
64    1       0       0       0
70    1       0       0       0
122   1    3905    3905       0
134   1     880     880       0
239   1    1595    1595       0
276   1    2145    2145       0
278   1    3905    3905       0
282   1    3795    3795       0
300   1    3960    3960       0
305   1    3575    3575       0
307   1    3080    3080       0
312   1    3850    3850       0
314   1    4565    4565       0
324   1    3080    3080       0
336   1    3520    3520       0
345   1    4015    4015       0
;

