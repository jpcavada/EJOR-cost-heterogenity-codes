Iter 114
MasterProb = 94541.8

s [*] :=
1   27
2   64
3   82
4   99
5  114
;

SubProb = -7490.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 115
MasterProb = 92740.4

s [*] :=
1  1
2  4
3  8
4  3
5  7
;

SubProb = -2423.23
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 116
MasterProb = 92650.1

s [*] :=
1   9
2  34
3  38
4   2
5  74
;

SubProb = -5428.84
d = 39

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 117
MasterProb = 91512.3

s [*] :=
1   2
2  60
3  25
4   3
5  83
;

SubProb = -3412.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 118
MasterProb = 90642.2

s [*] :=
1   90
2  110
3   39
4   13
5  100
;

SubProb = -12712.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 119
MasterProb = 87093.4

s [*] :=
1  69
2   1
3   3
4  32
5  89
;

SubProb = -1566.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 120
MasterProb = 86735.1

s [*] :=
1   32
2   33
3  103
4   74
5   54
;

SubProb = -4576.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 121
MasterProb = 85596.2

s [*] :=
1  42
2   8
3  60
4  26
5  40
;

SubProb = -6400.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 122
MasterProb = 84048.9

s [*] :=
1   99
2  110
3    1
4   22
5   12
;

SubProb = -3923.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 123
MasterProb = 82978.7

s [*] :=
1   72
2  112
3  108
4   84
5   63
;

SubProb = -3962.74
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 124
MasterProb = 81630.2

s [*] :=
1    7
2    1
3   69
4    2
5  104
;

SubProb = -4165.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 125
MasterProb = 80985.5

s [*] :=
1    7
2   99
3    2
4    3
5  108
;

SubProb = -6023.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 126
MasterProb = 79702.1

s [*] :=
1   34
2  110
3  103
4   38
5   15
;

SubProb = -6006.68
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 127
MasterProb = 78269.5

s [*] :=
1   72
2    1
3   68
4  112
5   33
;

SubProb = -1204.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 128
MasterProb = 78036.7

s [*] :=
1  103
2   74
3   33
4   35
5   11
;

SubProb = -2065.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 129
MasterProb = 77960.8

s [*] :=
1  48
2  77
3  89
4  99
5  79
;

SubProb = -1831.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 130
MasterProb = 77828.9

s [*] :=
1   15
2   99
3  104
4   14
5  112
;

SubProb = -2527.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 131
MasterProb = 77381.2

s [*] :=
1   63
2   79
3   45
4   82
5  104
;

SubProb = -1485.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 132
MasterProb = 77230.8

s [*] :=
1  104
2  100
3   25
4   84
5   85
;

SubProb = -2504.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 133
MasterProb = 76761.4

s [*] :=
1  59
2  80
3  93
4  10
5  66
;

SubProb = -2577.93
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 134
MasterProb = 76420.6

s [*] :=
1   2
2  65
3   8
4  42
5  56
;

SubProb = -2672.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 135
MasterProb = 76026.4

s [*] :=
1   79
2    8
3   58
4   25
5  112
;

SubProb = -3923.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 136
MasterProb = 75447.5

s [*] :=
1  112
2    2
3  110
4   67
5   69
;

SubProb = -2064.42
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 137
MasterProb = 75348.9

s [*] :=
1  34
2  49
3  62
4   2
5   1
;

SubProb = -1896.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 138
MasterProb = 75000.3

s [*] :=
1  38
2  70
3  36
4  48
5  99
;

SubProb = -888.221
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 139
MasterProb = 74966.7

s [*] :=
1  84
2  67
3  49
4  43
5  74
;

SubProb = -1081.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 140
MasterProb = 74795.2

s [*] :=
1   76
2  108
3   10
4  112
5  110
;

SubProb = -1277
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 141
MasterProb = 74728.6

s [*] :=
1  42
2  15
3  39
4  69
5  96
;

SubProb = -3063.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 142
MasterProb = 74043.9

s [*] :=
1  12
2   8
3  80
4  96
5  11
;

SubProb = -3710.11
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 143
MasterProb = 73551.9

s [*] :=
1   93
2    9
3   56
4    1
5  103
;

SubProb = -1604.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 144
MasterProb = 73505.2

s [*] :=
1  59
2  66
3  43
4  74
5  33
;

SubProb = -1831.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 145
MasterProb = 73100.8

s [*] :=
1   16
2  112
3   93
4   64
5  104
;

SubProb = -690.874
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 146
MasterProb = 73030.2

s [*] :=
1  109
2   72
3    3
4  103
5   99
;

SubProb = -1520.48
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 147
MasterProb = 72732.5

s [*] :=
1   5
2  56
3   1
4  78
5  60
;

SubProb = -1362.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2805

Iter 148
MasterProb = 72429

s [*] :=
1  69
2   1
3   3
4  32
5  89
;

SubProb = 9.09495e-13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Problema Entero
MasterProb = 82781

fo1 = 51590
fo2 = 31191

x[j] [*] :=
  5  1
 73  1
100  1
119  1
128  1
178  1
181  1
238  1
260  1
261  1
281  1
294  1
299  1
327  1
332  1
388  1
400  1
413  1
416  1
422  1
;

aa[i,j] [*,*]
:     5  73 100 119 128 178 181 238 260 261 281 294 299 327 332 388 400 413 416 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
9     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
10    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
13    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
14    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
35    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
39    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
44    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
55    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
59    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
62    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
65    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
66    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
68    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
73    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
75    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
83    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
85    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
100   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   422    :=
1     1
2     0
3     1
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    1
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    1
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    1
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
113   0
;

vi[i] [*] :=
  4  1
 16  1
 17  1
 18  1
 21  1
 22  1
 23  1
 24  1
 28  1
 29  1
 36  1
 41  1
 46  1
 47  1
 50  1
 57  1
 63  1
 76  1
 77  1
 78  1
 81  1
 86  1
 88  1
 91  1
 92  1
 93  1
 94  1
 95  1
 97  1
 98  1
101  1
102  1
104  1
105  1
106  1
107  1
108  1
109  1
111  1
112  1
113  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
5     1       0       0       0
73    1       0       0       0
100   1       0       0       0
119   1    3905    3905       0
128   1    3520    3520       0
178   1    3905    3905       0
181   1    5115    5115       0
238   1     880     880       0
260   1    3520    3520       0
261   1    5225    5225       0
281   1     605     605       0
294   1    1595    1595       0
299   1     605     605       0
327   1     660     660       0
332   1    2585    2585       0
388   1    3355    3355       0
400   1    3575    3575       0
413   1    3520    3520       0
416   1    4675    4675       0
422   1    4345    4345       0
;

