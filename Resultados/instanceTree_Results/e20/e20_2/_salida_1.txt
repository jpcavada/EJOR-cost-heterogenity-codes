Iter 101
MasterProb = 78832.1

s [*] :=
1  71
2  82
3   3
4  98
5  48
;

SubProb = -23477.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5280

Iter 102
MasterProb = 75430.2

s [*] :=
1  77
2  98
3   5
4  64
5  34
;

SubProb = -5264.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 103
MasterProb = 74611.1

s [*] :=
1  59
2   2
3   5
4  23
5  52
;

SubProb = -4522.52
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 104
MasterProb = 73543.2

s [*] :=
1  53
2  61
3  80
4  75
5  86
;

SubProb = -4620.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 105
MasterProb = 73259.3

s [*] :=
1  52
2  87
3  19
4  82
5  21
;

SubProb = -6627.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 106
MasterProb = 72526.1

s [*] :=
1   6
2  78
3  31
4  14
5  75
;

SubProb = -1858.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 107
MasterProb = 72404.2

s [*] :=
1   33
2  100
3   98
4   97
5   92
;

SubProb = -2002.28
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 108
MasterProb = 72312.4

s [*] :=
1   6
2  32
3  13
4  90
5  92
;

SubProb = -2814.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 109
MasterProb = 71706.8

s [*] :=
1  37
2  89
3  21
4  49
5  23
;

SubProb = -3956.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 110
MasterProb = 71037.5

s [*] :=
1  64
2  17
3  51
4  97
5  25
;

SubProb = -1743.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 111
MasterProb = 70722.8

s [*] :=
1  25
2  42
3  45
4  54
5  36
;

SubProb = -2806.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 112
MasterProb = 69609.4

s [*] :=
1   98
2   45
3  100
4   80
5   32
;

SubProb = -2087.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 113
MasterProb = 69233.3

s [*] :=
1  75
2  32
3   1
4  57
5   5
;

SubProb = -1083.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 114
MasterProb = 69167.7

s [*] :=
1  24
2  64
3  25
4  42
5  53
;

SubProb = -3390.35
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 115
MasterProb = 68745.6

s [*] :=
1  73
2  52
3  44
4  20
5  39
;

SubProb = -2127.93
d = 3

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 116
MasterProb = 68662.9

s [*] :=
1  40
2  92
3   1
4  41
5  63
;

SubProb = -3290.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 117
MasterProb = 68265.9

s [*] :=
1   96
2   72
3   65
4   62
5  101
;

SubProb = -4062.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 118
MasterProb = 67836.7

s [*] :=
1  63
2  93
3  40
4  32
5  84
;

SubProb = -2668.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 119
MasterProb = 67510.5

s [*] :=
1  59
2  22
3  89
4   2
5  65
;

SubProb = -528.557
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 120
MasterProb = 67504.9

s [*] :=
1   69
2  100
3   59
4   66
5   39
;

SubProb = -556.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 121
MasterProb = 67480.9

s [*] :=
1  22
2  65
3  81
4  82
5  45
;

SubProb = -894.544
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4015

Iter 122
MasterProb = 67444.2

s [*] :=
1  33
2  54
3  38
4  29
5  87
;

SubProb = -1722.68
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 123
MasterProb = 67269.1

s [*] :=
1   1
2   2
3  69
4   3
5  92
;

SubProb = -882.093
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 124
MasterProb = 67228.3

s [*] :=
1   3
2  87
3  80
4  31
5  18
;

SubProb = -1877.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 125
MasterProb = 66583.7

s [*] :=
1   8
2  90
3  82
4  69
5  75
;

SubProb = -1500.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 126
MasterProb = 66532.9

s [*] :=
1  33
2  34
3  69
4  18
5  61
;

SubProb = -957.014
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 127
MasterProb = 66446.9

s [*] :=
1  84
2  71
3  75
4  92
5  59
;

SubProb = -3612.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 128
MasterProb = 65883.9

s [*] :=
1   4
2  84
3  94
4  25
5  52
;

SubProb = -3018.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 129
MasterProb = 64985.7

s [*] :=
1  23
2  38
3  51
4  64
5  63
;

SubProb = -2125.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 130
MasterProb = 64757.7

s [*] :=
1   5
2   1
3   3
4   8
5  80
;

SubProb = -268.423
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 131
MasterProb = 64755

s [*] :=
1  82
2  40
3  51
4  21
5  42
;

SubProb = -2050.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 132
MasterProb = 64477.2

s [*] :=
1  13
2   6
3  10
4  98
5  21
;

SubProb = -1239.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 133
MasterProb = 64345.5

s [*] :=
1   32
2   71
3  101
4  102
5  103
;

SubProb = -1080.53
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 134
MasterProb = 64092

s [*] :=
1  92
2  36
3  69
4  82
5   5
;

SubProb = -2170.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 135
MasterProb = 63835.3

s [*] :=
1  53
2  98
3  93
4  95
5  99
;

SubProb = 635.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Problema Entero
MasterProb = 82799

fo1 = 48520
fo2 = 34279

x[j] [*] :=
  3  1
 70  1
 71  1
 86  1
118  1
132  1
151  1
181  1
239  1
261  1
268  1
271  1
276  1
280  1
284  1
302  1
305  1
308  1
313  1
330  1
;

aa[i,j] [*,*]
:     3  70  71  86 118 132 151 181 239 261 268 271 276 280 284 302 305 308 313 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
3     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
7     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
15    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
22    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
24    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
33    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
39    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
46    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
63    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
66    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
76    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
97    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:   330    :=
1     0
2     0
3     0
4     0
5     1
6     0
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    1
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    1
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    1
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    1
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
;

vi[i] [*] :=
 1  1
 9  1
10  1
11  1
12  1
13  1
16  1
25  1
26  1
35  1
40  1
42  1
43  1
44  1
47  1
48  1
55  1
56  1
60  1
67  1
68  1
74  1
76  1
79  1
85  1
87  1
90  1
99  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
3     1       0       0        0
70    1       0       0        0
71    1       0       0        0
86    1       0       0        0
118   1    3570    3410      160
132   1    1925    1925        0
151   1     880     880        0
181   1    3905    3905        0
239   1    1595    1595        0
261   1     880     880        0
268   1    3190    3190        0
271   1    3520    3520        0
276   1    2145    2145        0
280   1    5350    4950      400
284   1    3520    3520        0
302   1    3520    3520        0
305   1    3410    3410        0
308   1    3795    3795        0
313   1    2915    2915        0
330   1    4400    4400        0
;

