Iter 102
MasterProb = 75388.6

s [*] :=
1  21
2  52
3  93
4  94
5  59
;

SubProb = -4401.73
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 103
MasterProb = 73832.1

s [*] :=
1  22
2  96
3   7
4  80
5   6
;

SubProb = -5487.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4510

Iter 104
MasterProb = 72331.8

s [*] :=
1   2
2  73
3  61
4  23
5  96
;

SubProb = -4747.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 105
MasterProb = 71613

s [*] :=
1  74
2  20
3  84
4  48
5  51
;

SubProb = -3582.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 106
MasterProb = 70293.5

s [*] :=
1  26
2  84
3  10
4  96
5  56
;

SubProb = -3739.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 107
MasterProb = 69550.7

s [*] :=
1  93
2  73
3  19
4  65
5  81
;

SubProb = -1255.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 108
MasterProb = 69538.9

s [*] :=
1  36
2  77
3  16
4  94
5  97
;

SubProb = -4328.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 109
MasterProb = 68240

s [*] :=
1   95
2   81
3  102
4  103
5  104
;

SubProb = -2535
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Iter 110
MasterProb = 67455.3

s [*] :=
1  86
2  67
3  18
4  35
5  84
;

SubProb = -870.662
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 111
MasterProb = 67432.1

s [*] :=
1  19
2  23
3   1
4  59
5  38
;

SubProb = -2203.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 112
MasterProb = 67113.8

s [*] :=
1  41
2   6
3  13
4  54
5  73
;

SubProb = -1817.13
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 113
MasterProb = 66818.5

s [*] :=
1  81
2  89
3  44
4  96
5  40
;

SubProb = -2370.36
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 114
MasterProb = 66487.2

s [*] :=
1  85
2  59
3  67
4  29
5  73
;

SubProb = -2305.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 115
MasterProb = 66083.2

s [*] :=
1  61
2   4
3  33
4   8
5  94
;

SubProb = -2143.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 116
MasterProb = 65741.6

s [*] :=
1  54
2  84
3  21
4  83
5  26
;

SubProb = -1898.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 117
MasterProb = 65460

s [*] :=
1   4
2  88
3  21
4  80
5  23
;

SubProb = -1734.42
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 118
MasterProb = 65065.1

s [*] :=
1   3
2  44
3  50
4  61
5  31
;

SubProb = -494.996
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 119
MasterProb = 65029.5

s [*] :=
1   2
2  44
3  65
4  77
5  33
;

SubProb = -2784.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 120
MasterProb = 64791

s [*] :=
1   6
2  23
3  74
4  99
5  52
;

SubProb = -2367.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 121
MasterProb = 64412.2

s [*] :=
1  21
2  61
3  47
4   1
5  49
;

SubProb = -907.252
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 122
MasterProb = 64337

s [*] :=
1   11
2   37
3  102
4  103
5  104
;

SubProb = -1326.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 123
MasterProb = 63215.6

s [*] :=
1  50
2   2
3  25
4  40
5  65
;

SubProb = -823.259
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 124
MasterProb = 63173.9

s [*] :=
1  33
2  79
3   7
4  54
5  81
;

SubProb = -1654.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 125
MasterProb = 63025.8

s [*] :=
1   2
2   1
3  44
4  75
5  58
;

SubProb = -354.551
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 126
MasterProb = 63024.3

s [*] :=
1   1
2   2
3   3
4  84
5   7
;

SubProb = -436.066
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 127
MasterProb = 62997.8

s [*] :=
1   2
2   1
3  72
4  84
5  23
;

SubProb = -585.501
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 128
MasterProb = 62954.2

s [*] :=
1   1
2   4
3  88
4  16
5  33
;

SubProb = -698.489
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 129
MasterProb = 62916

s [*] :=
1   71
2    7
3    6
4   72
5  102
;

SubProb = -2402.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 130
MasterProb = 62479.3

s [*] :=
1  25
2  65
3  61
4  57
5  68
;

SubProb = -1622.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 131
MasterProb = 62412.1

s [*] :=
1  47
2  40
3  49
4  29
5  19
;

SubProb = -932.758
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 132
MasterProb = 62381.6

s [*] :=
1   5
2  24
3  96
4  31
5  47
;

SubProb = -1529.12
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 133
MasterProb = 62324.3

s [*] :=
1   9
2  79
3  83
4  90
5  86
;

SubProb = -588.185
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 134
MasterProb = 62266.1

s [*] :=
1   1
2  99
3  25
4  65
5   7
;

SubProb = -1581.55
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 135
MasterProb = 61967.7

s [*] :=
1  33
2  18
3  59
4  76
5  23
;

SubProb = -1572.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 136
MasterProb = 61790.1

s [*] :=
1   95
2   23
3   24
4   81
5  102
;

SubProb = -359.083
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 137
MasterProb = 61773.9

s [*] :=
1  51
2  38
3  12
4  10
5  34
;

SubProb = -1082.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 138
MasterProb = 61738.9

s [*] :=
1  81
2  88
3   2
4  96
5  99
;

SubProb = -1949.47
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 139
MasterProb = 60994.7

s [*] :=
1  62
2  42
3  75
4  63
5  59
;

SubProb = -884.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 140
MasterProb = 60948.1

s [*] :=
1   3
2   1
3   2
4  25
5  47
;

SubProb = -830.869
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 141
MasterProb = 60928

s [*] :=
1    5
2   44
3    8
4  102
5  103
;

SubProb = -350.639
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 142
MasterProb = 60892.7

s [*] :=
1  47
2  21
3  25
4  28
5   7
;

SubProb = -1058.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 143
MasterProb = 60730.9

s [*] :=
1  38
2  10
3   5
4   8
5  25
;

SubProb = -1825.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 144
MasterProb = 60578.8

s [*] :=
1  91
2  61
3  81
4  44
5  56
;

SubProb = -678.829
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 145
MasterProb = 60578.3

s [*] :=
1   97
2    7
3    1
4   99
5  102
;

SubProb = -820.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 146
MasterProb = 60410.5

s [*] :=
1   26
2   28
3  102
4  103
5  104
;

SubProb = -617.403
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 147
MasterProb = 60199.6

s [*] :=
1  50
2   8
3  32
4  86
5  26
;

SubProb = -1130.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 148
MasterProb = 60151.9

s [*] :=
1  81
2  34
3  83
4  43
5  29
;

SubProb = 79.7708
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Problema Entero
MasterProb = 70107

fo1 = 44190
fo2 = 25917

x[j] [*] :=
 12  1
 33  1
 51  1
 64  1
 95  1
106  1
111  1
113  1
115  1
121  1
163  1
165  1
210  1
213  1
217  1
224  1
257  1
263  1
287  1
291  1
;

aa[i,j] [*,*]
:    12  33  51  64  95 106 111 113 115 121 163 165 210 213 217 224 257 263 287 :=
1     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
3     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
10    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
12    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
24    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
33    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
49    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
60    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
68    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
74    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
76    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
78    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
95    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   291    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     1
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    1
22    0
23    0
24    0
25    1
26    0
27    0
28    1
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    1
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
;

vi[i] [*] :=
 14  1
 15  1
 17  1
 18  1
 19  1
 27  1
 30  1
 35  1
 37  1
 41  1
 44  1
 45  1
 46  1
 55  1
 58  1
 62  1
 70  1
 82  1
 83  1
 84  1
 86  1
 87  1
 89  1
 90  1
 91  1
 92  1
 93  1
 98  1
100  1
101  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
12    1       0       0        0
33    1       0       0        0
51    1       0       0        0
64    1       0       0        0
95    1       0       0        0
106   1    4070    4070        0
111   1    3135    3135        0
113   1    3520    3520        0
115   1    3300    3300        0
121   1    3355    3355        0
163   1    3025    3025        0
165   1    1155    1155        0
210   1    3520    3520        0
213   1    2640    2640        0
217   1     880     880        0
224   1    2750    2750        0
257   1    3245    3245        0
263   1    3520    3520        0
287   1    2830    2750       80
291   1    3245    3245        0
;

