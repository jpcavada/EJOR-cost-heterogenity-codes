Iter 122
MasterProb = 104702

s [*] :=
1  117
2   40
3  104
4   88
5  119
;

SubProb = -5490.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 123
MasterProb = 101297

s [*] :=
1   26
2   12
3   52
4   25
5  119
;

SubProb = -7155.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5225

Iter 124
MasterProb = 99698.4

s [*] :=
1   49
2   10
3    2
4    1
5  122
;

SubProb = -3418.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 125
MasterProb = 98896

s [*] :=
1   69
2    1
3  109
4   34
5  117
;

SubProb = -5282.5
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 126
MasterProb = 97253.4

s [*] :=
1   74
2   58
3   12
4   11
5  122
;

SubProb = -2435.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 127
MasterProb = 97099.8

s [*] :=
1  75
2  85
3  74
4  47
5  92
;

SubProb = -3081.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 128
MasterProb = 95894.4

s [*] :=
1  89
2  42
3  59
4  65
5  74
;

SubProb = -2360.51
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 129
MasterProb = 95509.6

s [*] :=
1   2
2  60
3  83
4   3
5  34
;

SubProb = -3135.1
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 130
MasterProb = 94953.3

s [*] :=
1   64
2    1
3    3
4    2
5  122
;

SubProb = -718
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 131
MasterProb = 94894.9

s [*] :=
1   16
2   19
3   42
4    7
5  104
;

SubProb = -820.427
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 132
MasterProb = 94841.6

s [*] :=
1    2
2    9
3   33
4   25
5  104
;

SubProb = -5594.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 133
MasterProb = 93237.9

s [*] :=
1  37
2  52
3  80
4  58
5  92
;

SubProb = -3346.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 134
MasterProb = 92804.6

s [*] :=
1   3
2  48
3  80
4   8
5  61
;

SubProb = -2789.54
d = 47

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 135
MasterProb = 92421.3

s [*] :=
1  104
2  117
3   85
4  103
5   13
;

SubProb = -3702.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 136
MasterProb = 91946.7

s [*] :=
1   1
2   2
3  69
4   7
5  38
;

SubProb = -3224.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 137
MasterProb = 91773.3

s [*] :=
1  114
2  112
3   39
4   30
5  119
;

SubProb = -2839.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 138
MasterProb = 89590.2

s [*] :=
1  67
2  69
3   2
4   1
5   8
;

SubProb = -1543.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 139
MasterProb = 89513.9

s [*] :=
1  44
2  90
3  89
4  66
5  72
;

SubProb = -2411.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 140
MasterProb = 89361.5

s [*] :=
1    1
2   15
3   82
4   92
5  119
;

SubProb = -4677.83
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 141
MasterProb = 89074.5

s [*] :=
1   8
2   2
3  14
4  43
5  59
;

SubProb = -1787.94
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 142
MasterProb = 88885.7

s [*] :=
1  85
2  89
3  91
4  52
5   5
;

SubProb = -983.578
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 143
MasterProb = 88835.6

s [*] :=
1  70
2  19
3  98
4  66
5  25
;

SubProb = -644.637
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 144
MasterProb = 88772

s [*] :=
1   66
2    6
3  104
4   37
5  114
;

SubProb = -1314.18
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 145
MasterProb = 88548.8

s [*] :=
1  39
2  71
3  56
4  34
5  49
;

SubProb = -2160.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 146
MasterProb = 88309.7

s [*] :=
1  37
2   8
3  96
4  89
5  80
;

SubProb = -43.6156
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4620

Iter 147
MasterProb = 88308.8

s [*] :=
1  92
2  80
3  37
4  18
5  35
;

SubProb = -1337.88
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 148
MasterProb = 88196.1

s [*] :=
1    9
2    2
3   38
4   81
5  122
;

SubProb = -577.027
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 149
MasterProb = 88126.6

s [*] :=
1   67
2   62
3   10
4   49
5  119
;

SubProb = -3790
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 150
MasterProb = 87625

s [*] :=
1  90
2  37
3  25
4  40
5  60
;

SubProb = -3496.67
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 151
MasterProb = 87087.8

s [*] :=
1  86
2  60
3  66
4  90
5  59
;

SubProb = -1923.02
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 152
MasterProb = 86921.1

s [*] :=
1  63
2   1
3  69
4   8
5  40
;

SubProb = -2602.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 153
MasterProb = 86725.9

s [*] :=
1   99
2   92
3   74
4  122
5  123
;

SubProb = -2379.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 154
MasterProb = 86286.4

s [*] :=
1   48
2   16
3    3
4  114
5  122
;

SubProb = -855.061
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 155
MasterProb = 86035.8

s [*] :=
1   67
2   16
3  117
4   59
5   57
;

SubProb = -1056.05
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 156
MasterProb = 85878.7

s [*] :=
1  84
2  67
3  66
4  92
5  82
;

SubProb = -1203.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 157
MasterProb = 85714.5

s [*] :=
1  114
2   33
3   74
4   52
5    9
;

SubProb = -662.847
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 158
MasterProb = 85699.6

s [*] :=
1  106
2   17
3   27
4   39
5   90
;

SubProb = -667.224
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 159
MasterProb = 85694.2

s [*] :=
1  72
2  32
3  15
4  80
5  61
;

SubProb = -2311.75
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 160
MasterProb = 84900.9

s [*] :=
1  69
2  76
3  59
4  12
5  33
;

SubProb = -645.752
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 161
MasterProb = 84875.2

s [*] :=
1  11
2  37
3  71
4   7
5  70
;

SubProb = -1685.3
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 162
MasterProb = 84789.6

s [*] :=
1  63
2  58
3   7
4  59
5  13
;

SubProb = -380.141
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 163
MasterProb = 84776.9

s [*] :=
1   51
2   60
3    7
4  119
5  117
;

SubProb = -3445.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 164
MasterProb = 84013.1

s [*] :=
1   1
2  10
3  69
4   8
5  92
;

SubProb = -675.46
d = 27

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 165
MasterProb = 83989.1

s [*] :=
1  114
2   33
3   25
4    7
5   70
;

SubProb = -2089.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 166
MasterProb = 83786.1

s [*] :=
1  25
2  27
3  33
4   8
5  38
;

SubProb = -1392.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4840

Iter 167
MasterProb = 83691.8

s [*] :=
1   38
2   15
3   37
4   66
5  117
;

SubProb = -2693.36
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 168
MasterProb = 83338.9

s [*] :=
1   39
2   11
3   51
4  119
5   95
;

SubProb = -2565.71
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 169
MasterProb = 83045

s [*] :=
1    8
2   92
3  114
4  122
5  123
;

SubProb = 180.568
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2200

Problema Entero
MasterProb = 95641

fo1 = 54535
fo2 = 41106

x[j] [*] :=
  5  1
 14  1
 73  1
167  1
240  1
246  1
247  1
289  1
319  1
338  1
340  1
347  1
364  1
398  1
408  1
409  1
424  1
430  1
431  1
442  1
;

aa[i,j] [*,*]
:     5  14  73 167 240 246 247 289 319 338 340 347 364 398 408 409 424 430 431 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
10    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
14    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
26    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
34    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
43    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
53    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
55    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
62    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
71    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
73    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
75    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
76    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
87    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
89    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
114   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
115   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
116   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
117   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
118   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
119   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
120   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
121   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   442    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    1
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    1
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    1
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    1
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
113   0
114   0
115   0
116   0
117   0
118   0
119   1
120   0
121   0
;

vi[i] [*] :=
  4  1
 16  1
 17  1
 19  1
 21  1
 22  1
 23  1
 24  1
 28  1
 30  1
 36  1
 41  1
 44  1
 45  1
 46  1
 47  1
 50  1
 57  1
 59  1
 63  1
 68  1
 77  1
 78  1
 81  1
 83  1
 91  1
 93  1
 94  1
 96  1
 97  1
 98  1
 99  1
100  1
101  1
102  1
105  1
106  1
107  1
108  1
109  1
110  1
111  1
112  1
113  1
115  1
116  1
118  1
120  1
121  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
5     1       0       0         0
14    1       0       0         0
73    1       0       0         0
167   1    6070    4070      2000
240   1    4070    4070         0
246   1     880     880         0
247   1     660     660         0
289   1     605     605         0
319   1     605     605         0
338   1    3520    3520         0
340   1    2585    2585         0
347   1    2465    2145       320
364   1    1815    1815         0
398   1    2915    2915         0
408   1    7445    3685      3760
409   1    3795    3795         0
424   1    4675    4675         0
430   1    3960    3960         0
431   1    4950    4950         0
442   1    3520    3520         0
;

