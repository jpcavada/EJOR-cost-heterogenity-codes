Iter 113
MasterProb = 102410

s [*] :=
1  97
2  48
3  80
4  44
5  96
;

SubProb = -15751.7
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 114
MasterProb = 97697.3

s [*] :=
1   26
2   88
3   59
4  104
5   12
;

SubProb = -9254.64
d = 34

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 115
MasterProb = 94882.3

s [*] :=
1   28
2  106
3   44
4   92
5  102
;

SubProb = -3727.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5610

Iter 116
MasterProb = 94483.8

s [*] :=
1   73
2  102
3   93
4  100
5   49
;

SubProb = -8806.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 117
MasterProb = 89077.6

s [*] :=
1   84
2  106
3   12
4   93
5  113
;

SubProb = -2916.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 118
MasterProb = 88695.1

s [*] :=
1    1
2   21
3   81
4  106
5    5
;

SubProb = -6571.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 119
MasterProb = 85627.3

s [*] :=
1  81
2  13
3  54
4  97
5  79
;

SubProb = -4172.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 120
MasterProb = 84911.5

s [*] :=
1  93
2  92
3  88
4   9
5   2
;

SubProb = -2238.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 121
MasterProb = 84446.9

s [*] :=
1   16
2   32
3   23
4  100
5   25
;

SubProb = -2465.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 122
MasterProb = 84020.4

s [*] :=
1  94
2  97
3  31
4  66
5  96
;

SubProb = -939.292
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 123
MasterProb = 83973.1

s [*] :=
1   34
2   94
3  101
4   38
5  113
;

SubProb = -2141.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 124
MasterProb = 83971.2

s [*] :=
1   38
2   92
3    6
4   51
5  104
;

SubProb = -4704
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 125
MasterProb = 82269.6

s [*] :=
1  108
2    8
3   80
4   22
5    7
;

SubProb = -2532.77
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 126
MasterProb = 81934.1

s [*] :=
1   96
2  102
3   56
4  108
5  100
;

SubProb = -4395
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 127
MasterProb = 80345.7

s [*] :=
1   58
2   49
3   41
4   88
5  102
;

SubProb = -1352.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 128
MasterProb = 80045.5

s [*] :=
1   76
2   29
3  108
4   19
5   25
;

SubProb = -2565.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 129
MasterProb = 79510.5

s [*] :=
1  105
2  104
3   59
4    1
5  106
;

SubProb = -2384.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 130
MasterProb = 79119.7

s [*] :=
1   84
2   86
3  110
4    5
5   85
;

SubProb = -564.313
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 131
MasterProb = 78884.3

s [*] :=
1  86
2  83
3  29
4  52
5  37
;

SubProb = -1121.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 132
MasterProb = 78649.3

s [*] :=
1   79
2   83
3    6
4  110
5  107
;

SubProb = -625.057
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 133
MasterProb = 78587.1

s [*] :=
1   76
2   66
3   96
4  109
5   31
;

SubProb = -1203.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 134
MasterProb = 78545.1

s [*] :=
1  56
2  40
3  91
4  85
5   8
;

SubProb = -625.965
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 135
MasterProb = 78463.2

s [*] :=
1  18
2  16
3  32
4  73
5  88
;

SubProb = -2078.59
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 136
MasterProb = 78148.6

s [*] :=
1   37
2  105
3   92
4    8
5   77
;

SubProb = -2179.76
d = 15

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 137
MasterProb = 77973.3

s [*] :=
1  61
2   2
3  91
4  80
5  25
;

SubProb = -2863.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 138
MasterProb = 77454

s [*] :=
1  21
2  59
3  88
4  93
5  49
;

SubProb = -3243.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 139
MasterProb = 76947.4

s [*] :=
1    1
2   83
3  107
4   28
5   59
;

SubProb = -2167.79
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 140
MasterProb = 76707.3

s [*] :=
1   26
2   92
3   41
4  108
5   33
;

SubProb = -1760.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 141
MasterProb = 76600.5

s [*] :=
1   81
2   34
3   71
4   93
5  104
;

SubProb = -1620.18
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 142
MasterProb = 76539.2

s [*] :=
1   81
2  110
3    6
4   23
5   96
;

SubProb = -1894.27
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 143
MasterProb = 76401.4

s [*] :=
1  105
2   10
3   61
4  106
5   31
;

SubProb = -1255.3
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 144
MasterProb = 76276.1

s [*] :=
1  29
2  59
3   6
4  93
5  52
;

SubProb = -809.005
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 145
MasterProb = 76254.4

s [*] :=
1  102
2    5
3  105
4   48
5  104
;

SubProb = -703.515
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 146
MasterProb = 76222.1

s [*] :=
1   67
2   85
3    2
4  105
5   65
;

SubProb = -1200.99
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 147
MasterProb = 76034.8

s [*] :=
1   71
2   41
3   73
4   74
5  100
;

SubProb = -1579.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 148
MasterProb = 75668.3

s [*] :=
1  109
2    8
3   64
4   34
5   68
;

SubProb = -1322.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 149
MasterProb = 75336.5

s [*] :=
1   53
2   83
3  103
4    9
5   67
;

SubProb = -893.704
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 150
MasterProb = 75234.5

s [*] :=
1   44
2   80
3   51
4   29
5  113
;

SubProb = -657.547
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 151
MasterProb = 75183.3

s [*] :=
1  25
2  26
3   7
4  40
5  33
;

SubProb = -1823.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 152
MasterProb = 75134.4

s [*] :=
1   85
2   40
3  105
4   23
5  107
;

SubProb = -1559.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 153
MasterProb = 74741.4

s [*] :=
1  107
2  104
3   37
4   77
5   75
;

SubProb = -1280.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 154
MasterProb = 74581

s [*] :=
1  84
2  29
3  80
4  28
5  15
;

SubProb = -1147.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 155
MasterProb = 74484.5

s [*] :=
1    8
2   18
3    7
4   19
5  107
;

SubProb = -1766.32
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 156
MasterProb = 74202.5

s [*] :=
1   13
2   28
3  107
4   59
5   10
;

SubProb = -1546.58
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 157
MasterProb = 73870

s [*] :=
1  102
2   52
3   25
4    8
5  109
;

SubProb = -1194.08
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 158
MasterProb = 73799.1

s [*] :=
1  106
2   85
3   72
4   73
5   36
;

SubProb = -746.359
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4180

Iter 159
MasterProb = 73798.9

s [*] :=
1   1
2  38
3  79
4  75
5  22
;

SubProb = -590.639
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 160
MasterProb = 73793

s [*] :=
1   25
2  105
3  113
4  114
5  115
;

SubProb = -376.399
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 660

Iter 161
MasterProb = 73780.6

s [*] :=
1   67
2   92
3   89
4  105
5   81
;

SubProb = -1759.88
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 162
MasterProb = 73738.8

s [*] :=
1  104
2    4
3   42
4    8
5   26
;

SubProb = -1465.31
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 163
MasterProb = 73690.8

s [*] :=
1  20
2  10
3  67
4  48
5  73
;

SubProb = -1445.14
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 164
MasterProb = 73636.6

s [*] :=
1  104
2   87
3   75
4   93
5  107
;

SubProb = 203.493
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Problema Entero
MasterProb = 84295

fo1 = 55360
fo2 = 28935

x[j] [*] :=
 49  1
 52  1
101  1
124  1
131  1
161  1
175  1
196  1
218  1
235  1
253  1
268  1
269  1
275  1
278  1
279  1
297  1
299  1
300  1
312  1
;

aa[i,j] [*,*]
:    49  52 101 124 131 161 175 196 218 235 253 268 269 275 278 279 297 299 300 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
6     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
12    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
26    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
41    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
52    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
57    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
60    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
65    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
76    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
81    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
101   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   312    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    1
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    1
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    1
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    1
68    0
69    0
70    0
71    0
72    0
73    1
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
;

vi[i] [*] :=
  3  1
 14  1
 17  1
 18  1
 19  1
 27  1
 28  1
 30  1
 35  1
 37  1
 45  1
 46  1
 53  1
 55  1
 58  1
 62  1
 69  1
 70  1
 78  1
 82  1
 83  1
 87  1
 89  1
 90  1
 91  1
 94  1
 95  1
 98  1
 99  1
103  1
107  1
111  1
112  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
49    1       0       0        0
52    1       0       0        0
101   1       0       0        0
124   1    3520    3520        0
131   1    3410    3410        0
161   1    2970    2970        0
175   1     660     660        0
196   1    3795    3795        0
218   1    3575    3575        0
235   1    2750    2750        0
253   1     660     660        0
268   1    3795    3795        0
269   1    3795    3795        0
275   1    3685    3685        0
278   1    3795    3795        0
279   1    5475    4675      800
297   1    3135    3135        0
299   1    2970    2970        0
300   1    3850    3850        0
312   1    3520    3520        0
;

