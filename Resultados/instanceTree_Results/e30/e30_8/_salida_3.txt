Iter 108
MasterProb = 79108.7

s [*] :=
1   81
2    7
3  100
4   52
5  103
;

SubProb = -8386.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 109
MasterProb = 77203.1

s [*] :=
1   91
2   99
3  108
4  109
5  110
;

SubProb = -2787
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1265

Iter 110
MasterProb = 75907.7

s [*] :=
1  100
2   61
3   65
4   37
5   80
;

SubProb = -4185.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 111
MasterProb = 74870.8

s [*] :=
1   44
2    1
3   92
4  102
5  105
;

SubProb = -2706.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 112
MasterProb = 74032

s [*] :=
1  102
2   32
3   47
4   25
5   91
;

SubProb = -2607.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 113
MasterProb = 73757.2

s [*] :=
1  80
2   1
3  21
4   2
5  59
;

SubProb = -3431.17
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 114
MasterProb = 73466.1

s [*] :=
1   20
2   59
3   19
4  102
5   51
;

SubProb = -2895.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 115
MasterProb = 72773.2

s [*] :=
1   73
2    2
3  101
4   23
5  100
;

SubProb = -2334.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 116
MasterProb = 72176.7

s [*] :=
1   40
2  101
3   36
4   81
5   48
;

SubProb = -2520.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 117
MasterProb = 71238.6

s [*] :=
1  10
2   8
3   2
4  42
5  60
;

SubProb = -655.833
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 118
MasterProb = 71212.8

s [*] :=
1  47
2  57
3  10
4  62
5  81
;

SubProb = -511.322
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 119
MasterProb = 71154.7

s [*] :=
1  48
2  25
3  80
4  26
5  67
;

SubProb = -1881.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 120
MasterProb = 70913.6

s [*] :=
1   29
2   10
3   31
4   25
5  101
;

SubProb = -1760.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 121
MasterProb = 70848.6

s [*] :=
1  56
2  25
3  34
4  74
5  60
;

SubProb = -1724.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 122
MasterProb = 70695.2

s [*] :=
1   37
2   11
3   61
4  108
5  109
;

SubProb = -1241
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1540

Iter 123
MasterProb = 70086.8

s [*] :=
1  91
2  21
3  25
4  92
5  34
;

SubProb = -389.146
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 124
MasterProb = 70038.4

s [*] :=
1   24
2    3
3   50
4   49
5  100
;

SubProb = -659.581
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 125
MasterProb = 69941.9

s [*] :=
1  25
2  88
3   5
4  92
5  67
;

SubProb = -1470.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 126
MasterProb = 69466

s [*] :=
1   86
2  102
3   76
4   16
5   80
;

SubProb = -1905.92
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 127
MasterProb = 69246.5

s [*] :=
1   8
2  32
3  54
4  26
5   1
;

SubProb = -517.693
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 128
MasterProb = 69211.3

s [*] :=
1    1
2    4
3  101
4    8
5   22
;

SubProb = -1071.27
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 129
MasterProb = 69098.1

s [*] :=
1  33
2  28
3  48
4  80
5   8
;

SubProb = -1727.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 130
MasterProb = 68739.8

s [*] :=
1   87
2  100
3   86
4   73
5   59
;

SubProb = -2065.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 131
MasterProb = 68324.6

s [*] :=
1  100
2    4
3   21
4   77
5   12
;

SubProb = -879.658
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 132
MasterProb = 68212.5

s [*] :=
1  52
2   3
3   1
4   2
5  92
;

SubProb = -710.483
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 133
MasterProb = 68204.3

s [*] :=
1   35
2   13
3  103
4   85
5   56
;

SubProb = -811
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 134
MasterProb = 68149.8

s [*] :=
1  56
2  44
3  77
4   8
5  91
;

SubProb = -922.102
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 135
MasterProb = 67989.8

s [*] :=
1  101
2   88
3   51
4   41
5   87
;

SubProb = -1675
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 136
MasterProb = 67590.9

s [*] :=
1   23
2  100
3   28
4   85
5   81
;

SubProb = -1082
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 137
MasterProb = 67461.4

s [*] :=
1  29
2   1
3  48
4  86
5  28
;

SubProb = -898.061
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 138
MasterProb = 67432.2

s [*] :=
1   29
2  100
3   65
4   37
5    3
;

SubProb = -813.435
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 139
MasterProb = 67432.2

s [*] :=
1   2
2  91
3   1
4   3
5  85
;

SubProb = -872.375
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2750

Iter 140
MasterProb = 67284.5

s [*] :=
1   5
2  28
3  79
4  51
5  85
;

SubProb = -766.413
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 141
MasterProb = 67150.8

s [*] :=
1  80
2  50
3  36
4  91
5  85
;

SubProb = -1066.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3080

Iter 142
MasterProb = 67015.3

s [*] :=
1  62
2  48
3  72
4  29
5  85
;

SubProb = -691.302
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4235

Iter 143
MasterProb = 66945.7

s [*] :=
1   74
2   54
3   95
4   49
5  108
;

SubProb = -612.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2640

Iter 144
MasterProb = 66763

s [*] :=
1  88
2  65
3  76
4   7
5  85
;

SubProb = -105.964
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4785

Iter 145
MasterProb = 66763

s [*] :=
1    2
2   21
3    1
4    7
5  102
;

SubProb = -569.721
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 146
MasterProb = 66740.2

s [*] :=
1    2
2   13
3   38
4   89
5  108
;

SubProb = -702.601
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 147
MasterProb = 66667.8

s [*] :=
1  88
2  86
3   5
4   6
5   4
;

SubProb = -412.903
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 148
MasterProb = 66630.7

s [*] :=
1   7
2  73
3  76
4  84
5  87
;

SubProb = -1576.64
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 149
MasterProb = 66448.4

s [*] :=
1   6
2  89
3  51
4  34
5  47
;

SubProb = -922.823
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 150
MasterProb = 66326.2

s [*] :=
1   79
2  103
3    6
4   23
5   38
;

SubProb = -2036.56
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 151
MasterProb = 66107.6

s [*] :=
1  65
2   3
3   2
4  33
5  75
;

SubProb = -470.616
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 152
MasterProb = 66105.3

s [*] :=
1   7
2  10
3  51
4  64
5   8
;

SubProb = 376.408
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Problema Entero
MasterProb = 72568

fo1 = 44825
fo2 = 27743

x[j] [*] :=
 12  1
 38  1
 64  1
 71  1
 81  1
 99  1
121  1
128  1
129  1
158  1
168  1
169  1
170  1
224  1
263  1
264  1
271  1
272  1
278  1
296  1
;

aa[i,j] [*,*]
:    12  38  64  71  81  99 121 128 129 158 168 169 170 224 263 264 271 272 278 :=
1     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
3     0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
9     0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
14    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
22    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
26    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
29    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
35    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
38    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
49    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
52    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
55    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
60    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
62    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
64    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
71    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
74    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
78    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
81    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   296    :=
1     0
2     0
3     0
4     1
5     1
6     1
7     0
8     0
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    1
87    0
88    1
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
;

vi[i] [*] :=
 15  1
 17  1
 18  1
 30  1
 35  1
 39  1
 41  1
 44  1
 45  1
 46  1
 53  1
 55  1
 62  1
 66  1
 67  1
 69  1
 70  1
 72  1
 82  1
 83  1
 84  1
 85  1
 87  1
 89  1
 90  1
 93  1
 94  1
 95  1
 96  1
 97  1
 98  1
103  1
104  1
105  1
106  1
107  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
12    1       0       0       0
38    1       0       0       0
64    1       0       0       0
71    1       0       0       0
81    1       0       0       0
99    1       0       0       0
121   1    3300    3300       0
128   1    3355    3355       0
129   1    3520    3520       0
158   1    3520    3520       0
168   1    3795    3795       0
169   1    3025    3025       0
170   1     660     660       0
224   1    3520    3520       0
263   1    3520    3520       0
264   1    3850    3850       0
271   1    1540    1540       0
272   1    3575    3575       0
278   1    3850    3850       0
296   1    3795    3795       0
;

