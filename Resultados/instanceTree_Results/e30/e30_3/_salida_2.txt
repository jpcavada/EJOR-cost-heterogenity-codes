Iter 120
MasterProb = 108873

s [*] :=
1  60
2  65
3  74
4  79
5  39
;

SubProb = -6301.24
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 121
MasterProb = 107524

s [*] :=
1    2
2   62
3    3
4  105
5    4
;

SubProb = -7539.12
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 122
MasterProb = 106155

s [*] :=
1   13
2    8
3   38
4   11
5  106
;

SubProb = -3964.09
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 123
MasterProb = 105901

s [*] :=
1  103
2  105
3   15
4  110
5  106
;

SubProb = -6564
d = 123

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 124
MasterProb = 102966

s [*] :=
1   34
2   27
3   91
4  120
5  121
;

SubProb = -5562.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2090

Iter 125
MasterProb = 99859.2

s [*] :=
1  69
2   1
3   6
4   2
5  90
;

SubProb = -7061.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 126
MasterProb = 97290

s [*] :=
1  74
2  29
3  33
4  80
5   8
;

SubProb = -3191.06
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 127
MasterProb = 96447.6

s [*] :=
1   40
2   88
3  104
4    1
5   79
;

SubProb = -2283.39
d = 43

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 128
MasterProb = 96310.4

s [*] :=
1   62
2  110
3   25
4   55
5   32
;

SubProb = -5022.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 129
MasterProb = 95843.1

s [*] :=
1   19
2  103
3  117
4  104
5   83
;

SubProb = -3219.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4950

Iter 130
MasterProb = 94477.1

s [*] :=
1   89
2   10
3  110
4   79
5   52
;

SubProb = -6123.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 131
MasterProb = 93237.7

s [*] :=
1  103
2   56
3   52
4  117
5   43
;

SubProb = -1158.34
d = 10

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 132
MasterProb = 93038.5

s [*] :=
1   53
2   66
3    9
4  120
5  121
;

SubProb = -4929.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2035

Iter 133
MasterProb = 91924.6

s [*] :=
1  107
2   48
3  105
4   72
5  104
;

SubProb = -5736.16
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 134
MasterProb = 91313.7

s [*] :=
1  110
2    6
3   29
4   82
5   39
;

SubProb = -3678.68
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 135
MasterProb = 90980.7

s [*] :=
1  105
2  111
3   59
4   93
5   70
;

SubProb = -3942.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5005

Iter 136
MasterProb = 90254.7

s [*] :=
1   8
2   1
3  42
4   3
5  14
;

SubProb = -4542.63
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 137
MasterProb = 89956.2

s [*] :=
1  33
2   2
3  91
4   1
5  42
;

SubProb = -2267.53
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 138
MasterProb = 89840.3

s [*] :=
1   98
2  105
3   74
4  110
5   20
;

SubProb = -3333.37
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 139
MasterProb = 88984.8

s [*] :=
1   27
2   90
3  109
4    6
5   60
;

SubProb = -1109.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 140
MasterProb = 88907.4

s [*] :=
1  77
2   6
3  89
4   2
5  67
;

SubProb = -1808.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 141
MasterProb = 88552.2

s [*] :=
1   75
2   33
3  117
4   26
5   91
;

SubProb = -3345.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 142
MasterProb = 88493

s [*] :=
1   29
2  104
3   79
4  105
5   84
;

SubProb = -3859.53
d = 6

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 143
MasterProb = 87347.5

s [*] :=
1   51
2   25
3   96
4  120
5  121
;

SubProb = -918.368
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1760

Iter 144
MasterProb = 87293

s [*] :=
1    3
2   84
3    1
4    2
5  120
;

SubProb = -1389.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3190

Iter 145
MasterProb = 87164

s [*] :=
1   38
2  103
3  110
4   59
5   35
;

SubProb = -2732.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 146
MasterProb = 87097.4

s [*] :=
1    2
2   98
3  105
4   13
5  120
;

SubProb = -2018.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 147
MasterProb = 86694.3

s [*] :=
1  2
2  3
3  7
4  1
5  6
;

SubProb = -2165.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 148
MasterProb = 86606

s [*] :=
1    7
2    5
3  117
4   90
5   35
;

SubProb = -1606.47
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 149
MasterProb = 86526.5

s [*] :=
1  103
2   25
3    2
4    1
5  105
;

SubProb = -1162.57
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 150
MasterProb = 86388

s [*] :=
1  117
2   64
3  109
4   74
5   24
;

SubProb = -1221.86
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 151
MasterProb = 86290

s [*] :=
1  75
2  48
3  62
4  16
5  69
;

SubProb = -2195.6
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 152
MasterProb = 86105.4

s [*] :=
1  117
2  110
3   74
4   12
5   89
;

SubProb = -2773.65
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 153
MasterProb = 85820.1

s [*] :=
1  106
2   77
3  120
4  121
5  122
;

SubProb = 1047
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1155

Problema Entero
MasterProb = 97991

fo1 = 48375
fo2 = 49616

x[j] [*] :=
  5  1
 14  1
 25  1
 73  1
146  1
185  1
187  1
229  1
244  1
245  1
248  1
253  1
271  1
318  1
338  1
370  1
396  1
398  1
416  1
426  1
;

aa[i,j] [*,*]
:     5  14  25  73 146 185 187 229 244 245 248 253 271 318 338 370 396 398 416 :=
1     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
2     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
6     0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
9     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
10    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
14    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
19    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
26    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
30    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
33    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
34    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
35    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
39    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
41    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
48    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
52    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
53    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
55    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
59    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
61    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
62    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
67    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
71    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
73    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
76    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
77    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
80    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
85    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
90    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
105   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
114   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
115   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
116   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
117   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
118   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
119   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   426    :=
1     0
2     0
3     0
4     0
5     0
6     0
7     0
8     0
9     0
10    0
11    0
12    1
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    0
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    0
73    0
74    1
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    0
86    0
87    0
88    0
89    1
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   1
111   0
112   0
113   0
114   0
115   0
116   0
117   1
118   0
119   0
;

vi[i] [*] :=
  2  1
  4  1
 16  1
 17  1
 19  1
 21  1
 22  1
 23  1
 24  1
 28  1
 32  1
 36  1
 43  1
 44  1
 45  1
 46  1
 47  1
 49  1
 50  1
 57  1
 63  1
 64  1
 68  1
 77  1
 78  1
 81  1
 83  1
 86  1
 88  1
 92  1
 93  1
 94  1
 95  1
 96  1
 97  1
 98  1
 99  1
100  1
101  1
102  1
103  1
107  1
108  1
109  1
111  1
112  1
113  1
114  1
115  1
116  1
118  1
119  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
5     1       0       0         0
14    1       0       0         0
25    1       0       0         0
73    1       0       0         0
146   1    3960    3960         0
185   1    4950    4950         0
187   1    5115    5115         0
229   1    3355    3355         0
244   1     880     880         0
245   1     660     660         0
248   1    3520    3520         0
253   1    4500    3300      1200
271   1     660     660         0
318   1    1760    1760         0
338   1    2585    2585         0
370   1    1595    1595         0
396   1    4565    4565         0
398   1    2090    2090         0
416   1    4385    3905       480
426   1    3795    3795         0
;

