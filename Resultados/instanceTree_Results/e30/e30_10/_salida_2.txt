Iter 123
MasterProb = 110571

s [*] :=
1  105
2    2
3   93
4   51
5  123
;

SubProb = -11373.1
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 124
MasterProb = 104195

s [*] :=
1    8
2   15
3   46
4  104
5  123
;

SubProb = -6164.91
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 125
MasterProb = 102378

s [*] :=
1  90
2  40
3   3
4  93
5  34
;

SubProb = -8901.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 126
MasterProb = 101184

s [*] :=
1   25
2   26
3  105
4  117
5   14
;

SubProb = -4667.75
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 127
MasterProb = 100150

s [*] :=
1   33
2    2
3  105
4   10
5   74
;

SubProb = -7668.5
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 128
MasterProb = 98624

s [*] :=
1  108
2   69
3   56
4   74
5  112
;

SubProb = -6722.87
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 129
MasterProb = 95854

s [*] :=
1   66
2   23
3   90
4   13
5  108
;

SubProb = -8800.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 130
MasterProb = 94370.7

s [*] :=
1   7
2   1
3  80
4   2
5   3
;

SubProb = -3055.76
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 131
MasterProb = 93863.6

s [*] :=
1  118
2   62
3  123
4  124
5  125
;

SubProb = -2344
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 132
MasterProb = 93863.6

s [*] :=
1   33
2   77
3   40
4   92
5  109
;

SubProb = -748.245
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3465

Iter 133
MasterProb = 93820.9

s [*] :=
1  109
2   97
3   66
4   60
5    1
;

SubProb = -1704.15
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 134
MasterProb = 93510.3

s [*] :=
1  105
2    7
3   31
4   74
5   66
;

SubProb = -3098.53
d = 1

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 135
MasterProb = 93443.9

s [*] :=
1   89
2   58
3   71
4   52
5  104
;

SubProb = -3052.95
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2860

Iter 136
MasterProb = 92801.6

s [*] :=
1  25
2  89
3  93
4  13
5  27
;

SubProb = -3656.83
d = 9

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 137
MasterProb = 92613.2

s [*] :=
1  118
2   97
3  123
4  124
5  125
;

SubProb = -1222
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 138
MasterProb = 91712.8

s [*] :=
1  92
2  78
3  90
4  66
5  27
;

SubProb = -464.397
d = 11

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4455

Iter 139
MasterProb = 91702.4

s [*] :=
1  109
2    8
3  104
4   98
5  105
;

SubProb = -2995.19
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 140
MasterProb = 91051.8

s [*] :=
1  64
2   7
3  10
4  14
5   2
;

SubProb = -3456.37
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 141
MasterProb = 90412.6

s [*] :=
1  94
2  38
3  11
4  69
5  65
;

SubProb = -3946.82
d = 14

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 142
MasterProb = 90053.8

s [*] :=
1  109
2   60
3   93
4    3
5   94
;

SubProb = -1468.21
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 143
MasterProb = 89916.5

s [*] :=
1    1
2   11
3  108
4   15
5   80
;

SubProb = -3744.98
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 144
MasterProb = 89600.8

s [*] :=
1   34
2   97
3   95
4   65
5  100
;

SubProb = -864.498
d = 19

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 145
MasterProb = 89551.2

s [*] :=
1   60
2   80
3   58
4    1
5  123
;

SubProb = -273.895
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 146
MasterProb = 89532.8

s [*] :=
1   2
2  26
3  60
4  42
5  38
;

SubProb = -4503.72
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 147
MasterProb = 88559.9

s [*] :=
1  10
2  90
3   1
4  94
5  25
;

SubProb = -886.225
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 148
MasterProb = 88515.9

s [*] :=
1  32
2  25
3  10
4  74
5  65
;

SubProb = -2047.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 149
MasterProb = 88078.3

s [*] :=
1  108
2   79
3    2
4   35
5   67
;

SubProb = -3169.61
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 150
MasterProb = 87666

s [*] :=
1  47
2  40
3  60
4   5
5  38
;

SubProb = -986.167
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 151
MasterProb = 87584.6

s [*] :=
1   59
2  102
3    8
4   71
5   64
;

SubProb = -3645.4
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3740

Iter 152
MasterProb = 87337.8

s [*] :=
1  90
2  33
3  98
4  34
5  69
;

SubProb = -1786.52
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 153
MasterProb = 87098

s [*] :=
1   92
2   54
3  104
4  123
5  124
;

SubProb = -2836.82
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1870

Iter 154
MasterProb = 85734.7

s [*] :=
1  66
2   7
3   1
4  10
5  12
;

SubProb = -1679.44
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 155
MasterProb = 85545.2

s [*] :=
1    5
2   15
3  100
4   84
5  123
;

SubProb = -3087.66
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2970

Iter 156
MasterProb = 84108.5

s [*] :=
1    5
2   70
3  123
4  124
5  125
;

SubProb = -1823.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 605

Iter 157
MasterProb = 83395.3

s [*] :=
1   97
2   51
3   18
4  100
5   35
;

SubProb = -766.739
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 158
MasterProb = 83322.7

s [*] :=
1   25
2   12
3   14
4  105
5  123
;

SubProb = -876.526
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2915

Iter 159
MasterProb = 83141.3

s [*] :=
1  85
2  48
3   6
4  72
5   8
;

SubProb = -1371
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 160
MasterProb = 83004.9

s [*] :=
1   3
2  33
3  60
4  72
5  56
;

SubProb = -2933.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 161
MasterProb = 82528.1

s [*] :=
1    2
2   69
3   12
4   80
5  123
;

SubProb = -3004.96
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 162
MasterProb = 81721.2

s [*] :=
1  114
2   10
3   39
4   40
5  109
;

SubProb = -1189.41
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 163
MasterProb = 81649.6

s [*] :=
1   37
2  119
3   72
4   14
5   93
;

SubProb = -3286.39
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 164
MasterProb = 81191.6

s [*] :=
1  35
2  79
3  89
4   6
5  95
;

SubProb = -2312.84
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 165
MasterProb = 80973.6

s [*] :=
1  12
2  32
3  26
4  11
5  58
;

SubProb = -1894.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 166
MasterProb = 80781

s [*] :=
1   38
2   99
3   25
4  123
5  124
;

SubProb = 265.114
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 1870

Problema Entero
MasterProb = 95099

fo1 = 52190
fo2 = 42909

x[j] [*] :=
 71  1
 73  1
137  1
141  1
199  1
227  1
236  1
247  1
255  1
271  1
278  1
287  1
339  1
408  1
410  1
411  1
417  1
424  1
427  1
433  1
;

aa[i,j] [*,*]
:    71  73 137 141 199 227 236 247 255 271 278 287 339 408 410 411 417 424 427 :=
1     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
2     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
3     0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
4     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
6     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7     0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
8     0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
9     0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
11    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
12    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
13    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
14    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
15    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
16    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
17    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
18    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
19    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
20    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
22    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
23    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
24    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
25    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
26    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
28    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
29    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
31    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
32    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
33    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
34    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
36    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
37    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
38    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
39    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
40    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
41    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
42    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
43    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
45    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
46    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
48    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
50    0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
51    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
53    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
54    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
55    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
56    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
57    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
59    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
60    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
61    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
62    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
64    0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
65    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
66    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
67    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
68    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
69    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
70    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
71    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
72    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
73    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
74    0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
75    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
76    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
77    0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
78    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
79    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
80    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
81    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
82    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
83    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
84    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
85    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
86    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
87    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
88    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
89    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
90    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
91    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
92    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
93    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
94    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
95    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
96    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
97    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
98    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
99    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
100   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
101   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
102   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
103   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
104   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
105   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
106   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
107   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
108   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
109   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
110   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
111   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
112   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
113   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
114   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
115   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
116   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
117   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
118   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
119   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
120   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
121   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
122   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0

:   433    :=
1     0
2     0
3     0
4     0
5     0
6     1
7     0
8     1
9     0
10    0
11    0
12    0
13    0
14    0
15    0
16    0
17    0
18    0
19    0
20    0
21    0
22    0
23    0
24    0
25    0
26    0
27    0
28    0
29    0
30    0
31    0
32    0
33    0
34    0
35    0
36    0
37    0
38    0
39    0
40    0
41    0
42    0
43    0
44    0
45    0
46    0
47    0
48    1
49    0
50    0
51    0
52    0
53    0
54    0
55    0
56    0
57    0
58    0
59    0
60    0
61    0
62    0
63    0
64    0
65    0
66    0
67    0
68    0
69    0
70    0
71    0
72    1
73    0
74    0
75    0
76    0
77    0
78    0
79    0
80    0
81    0
82    0
83    0
84    0
85    1
86    0
87    0
88    0
89    0
90    0
91    0
92    0
93    0
94    0
95    0
96    0
97    0
98    0
99    0
100   0
101   0
102   0
103   0
104   0
105   0
106   0
107   0
108   0
109   0
110   0
111   0
112   0
113   0
114   0
115   0
116   0
117   0
118   0
119   0
120   0
121   0
122   0
;

vi[i] [*] :=
  4  1
 16  1
 17  1
 20  1
 21  1
 22  1
 23  1
 28  1
 30  1
 36  1
 41  1
 43  1
 44  1
 45  1
 46  1
 49  1
 57  1
 59  1
 63  1
 68  1
 78  1
 81  1
 86  1
 88  1
 91  1
 94  1
 95  1
 96  1
 98  1
 99  1
100  1
101  1
102  1
103  1
106  1
107  1
109  1
110  1
111  1
112  1
113  1
114  1
115  1
116  1
117  1
119  1
120  1
121  1
122  1
;

:   x[i]   c[i] travel[i] delay[i]    :=
71    1       0       0         0
73    1       0       0         0
137   1    3520    3520         0
141   1    3245    3245         0
199   1    3135    3135         0
227   1    2090    2090         0
236   1    4345    4345         0
247   1     880     880         0
255   1     880     880         0
271   1    3300    3300         0
278   1     605     605         0
287   1    1760    1760         0
339   1    3520    3520         0
408   1    3435    3355        80
410   1    5065    4345       720
411   1     880     880         0
417   1    4125    4125         0
424   1    5575    3575      2000
427   1    1870    1870         0
433   1    3960    3960         0
;

