Iter 78
MasterProb = 279975

s [*] :=
1  77
2  74
3  73
4  76
5  75
;

SubProb = -176463
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 79
MasterProb = 134998

s [*] :=
1  71
2  77
3  76
4  74
5  72
;

SubProb = -133829
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 80
MasterProb = 134503

s [*] :=
1  73
2  74
3  75
4  72
5  76
;

SubProb = -118733
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 81
MasterProb = 134503

s [*] :=
1  77
2  71
3  72
4  74
5  75
;

SubProb = -118513
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 82
MasterProb = 134503

s [*] :=
1  77
2  73
3  72
4  75
5  76
;

SubProb = -115253
d = 38

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4565

Iter 83
MasterProb = 106650

s [*] :=
1  69
2  42
3  30
4  26
5  36
;

SubProb = -14866.7
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 84
MasterProb = 101133

s [*] :=
1   1
2  59
3  22
4  71
5  69
;

SubProb = -32503.8
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 85
MasterProb = 90973

s [*] :=
1  44
2  45
3   2
4   9
5  52
;

SubProb = -17891.3
d = 89

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4895

Iter 86
MasterProb = 86874.2

s [*] :=
1  39
2  59
3  16
4   5
5   9
;

SubProb = -13243.2
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 87
MasterProb = 85139.7

s [*] :=
1  71
2  28
3  77
4  17
5  36
;

SubProb = -31949.8
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 88
MasterProb = 79567.6

s [*] :=
1  59
2  51
3  62
4  64
5  74
;

SubProb = -12461.9
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 89
MasterProb = 77061.8

s [*] :=
1  41
2  15
3  60
4  37
5  61
;

SubProb = -12736.6
d = 109

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3795

Iter 90
MasterProb = 74323.7

s [*] :=
1  12
2  22
3  39
4  28
5   7
;

SubProb = -8007.49
d = 22

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3410

Iter 91
MasterProb = 73600

s [*] :=
1  67
2  21
3  65
4  23
5  61
;

SubProb = -12844.3
d = 65

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 92
MasterProb = 72157.9

s [*] :=
1  10
2   9
3  40
4   4
5  31
;

SubProb = -12182.5
d = 44

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3245

Iter 93
MasterProb = 67566.4

s [*] :=
1  30
2  59
3  34
4  67
5  49
;

SubProb = -6630.01
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 94
MasterProb = 67093.8

s [*] :=
1  16
2  44
3  23
4  15
5   9
;

SubProb = -10059
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4730

Iter 95
MasterProb = 66695.7

s [*] :=
1  15
2  68
3  64
4  50
5  73
;

SubProb = -5153.9
d = 124

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3520

Iter 96
MasterProb = 66520.8

s [*] :=
1   9
2  42
3  36
4  21
5  53
;

SubProb = -6417.34
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3300

Iter 97
MasterProb = 66137.5

s [*] :=
1   2
2  11
3  49
4  26
5  15
;

SubProb = -5826.06
d = 26

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 98
MasterProb = 65494.2

s [*] :=
1  24
2   9
3  32
4  31
5  61
;

SubProb = -9724.27
d = 33

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4290

Iter 99
MasterProb = 63594.3

s [*] :=
1  15
2  73
3  31
4  46
5  39
;

SubProb = -7769.49
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3630

Iter 100
MasterProb = 62966.5

s [*] :=
1  72
2  59
3  75
4  61
5  15
;

SubProb = -8151.58
d = 5

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 101
MasterProb = 62354.4

s [*] :=
1  33
2  29
3   9
4  68
5  60
;

SubProb = -3365.97
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3905

Iter 102
MasterProb = 62165.2

s [*] :=
1   1
2   7
3  32
4  39
5  11
;

SubProb = -8134.38
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 103
MasterProb = 60778.6

s [*] :=
1  17
2  26
3  34
4  43
5  51
;

SubProb = -5269.28
d = 40

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4400

Iter 104
MasterProb = 60729.6

s [*] :=
1  40
2  76
3  69
4  18
5  64
;

SubProb = -6481.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 105
MasterProb = 60109

s [*] :=
1  37
2  59
3  12
4  74
5  47
;

SubProb = -5693.9
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 106
MasterProb = 59431.4

s [*] :=
1  23
2  19
3  16
4  77
5  78
;

SubProb = -7822.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3025

Iter 107
MasterProb = 58561.8

s [*] :=
1  75
2  41
3  63
4  18
5  31
;

SubProb = -4701.94
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 108
MasterProb = 58175.8

s [*] :=
1  42
2   2
3  48
4  78
5  79
;

SubProb = -4777.69
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 2530

Iter 109
MasterProb = 57742.1

s [*] :=
1  50
2  73
3  78
4  79
5  80
;

SubProb = -4718.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 110
MasterProb = 57373.7

s [*] :=
1   4
2   3
3  12
4  51
5  20
;

SubProb = -5324.96
d = 25

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4675

Iter 111
MasterProb = 56995.8

s [*] :=
1   4
2  23
3  41
4  16
5  74
;

SubProb = -3374.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3135

Iter 112
MasterProb = 56529.7

s [*] :=
1  12
2  51
3  62
4  65
5  74
;

SubProb = -2573.99
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 113
MasterProb = 56337.1

s [*] :=
1  17
2  11
3  49
4  27
5  15
;

SubProb = -1547.25
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 114
MasterProb = 56270.7

s [*] :=
1  69
2  22
3  21
4  26
5  36
;

SubProb = -2223.29
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 115
MasterProb = 56199.6

s [*] :=
1  12
2  51
3  62
4  64
5  74
;

SubProb = -835.842
d = 7

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 116
MasterProb = 56108.6

s [*] :=
1  48
2  60
3  56
4  67
5  38
;

SubProb = -125.372
d = 17

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 117
MasterProb = 56108

s [*] :=
1  64
2  51
3  22
4  17
5  43
;

SubProb = -2273.43
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4345

Iter 118
MasterProb = 56002.1

s [*] :=
1  12
2   2
3  16
4   4
5  11
;

SubProb = -3065.62
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3850

Iter 119
MasterProb = 55918.9

s [*] :=
1  69
2  42
3  32
4   5
5  61
;

SubProb = -3745.2
d = 4

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 120
MasterProb = 55762.5

s [*] :=
1  27
2  48
3  78
4  79
5  80
;

SubProb = -779.427
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Iter 121
MasterProb = 55664.1

s [*] :=
1  10
2  44
3  40
4  75
5  64
;

SubProb = -463.225
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4125

Iter 122
MasterProb = 55622.6

s [*] :=
1  54
2   2
3  34
4  36
5  67
;

SubProb = -1933.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3960

Iter 123
MasterProb = 55493.2

s [*] :=
1  75
2  76
3   6
4  21
5  11
;

SubProb = -1859.37
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 4070

Iter 124
MasterProb = 55392.3

s [*] :=
1  21
2  74
3  25
4  60
5  78
;

SubProb = -1165.85
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3685

Iter 125
MasterProb = 55382.4

s [*] :=
1  12
2  51
3  62
4  65
5  38
;

SubProb = -45.9133
d = 2

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 5060

Iter 126
MasterProb = 55381.8

s [*] :=
1   9
2  74
3  32
4   1
5  18
;

SubProb = -614.085
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 127
MasterProb = 55359.4

s [*] :=
1  10
2  17
3   1
4  39
5   9
;

SubProb = -2213.45
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3575

Iter 128
MasterProb = 55054.1

s [*] :=
1  31
2  52
3  49
4  40
5  74
;

SubProb = -3690.61
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 3355

Iter 129
MasterProb = 54705.2

s [*] :=
1  27
2  48
3  78
4  79
5  80
;

SubProb = 0
d = 0

distanceCost*(sum{l in 1 .. Lcap - 1} t[l]) = 880

Problema Entero
MasterProb = 142528

fo1 = 84240
fo2 = 58288

x[j] [*] :=
 31  1
 87  1
117  1
119  1
126  1
138  1
144  1
147  1
148  1
168  1
199  1
201  1
227  1
233  1
245  1
261  1
265  1
272  1
276  1
295  1
;

aa[i,j] [*,*]
:   31  87 117 119 126 138 144 147 148 168 199 201 227 233 245 261 265 272 276 :=
1    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
2    0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
3    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
4    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
5    0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
6    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
7    0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
8    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
9    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
10   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
11   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
13   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
14   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
15   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
16   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
17   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
19   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
20   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
21   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
22   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
23   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
24   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
25   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
27   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
28   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
29   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
30   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
31   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
32   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
33   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
34   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
35   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
36   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
37   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
38   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
39   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
40   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
41   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
42   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
43   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
44   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
45   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
46   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
47   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
48   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
49   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
50   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
51   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
52   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
53   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
54   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
55   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
56   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
57   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
58   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
59   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
60   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
61   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
62   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
63   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
64   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
65   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
66   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
67   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
68   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
69   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
70   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
71   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
72   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
73   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
74   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
75   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
76   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
77   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0

:  295    :=
1    0
2    0
3    1
4    1
5    0
6    0
7    0
8    0
9    0
10   0
11   0
12   1
13   0
14   0
15   0
16   0
17   0
18   0
19   0
20   1
21   0
22   0
23   0
24   0
25   0
26   0
27   0
28   0
29   0
30   0
31   0
32   0
33   0
34   0
35   0
36   0
37   0
38   0
39   0
40   0
41   0
42   0
43   0
44   0
45   0
46   0
47   0
48   0
49   0
50   0
51   1
52   0
53   0
54   0
55   0
56   0
57   0
58   0
59   0
60   0
61   0
62   0
63   0
64   0
65   0
66   0
67   0
68   0
69   0
70   0
71   0
72   0
73   0
74   0
75   0
76   0
77   0
;

vi[i] [*] :=
 9  1
13  1
26  1
;

:   x[i]   c[i]  travel[i] delay[i]    :=
31    1        0       0         0
87    1     4345    4345         0
117   1    22570    5610     16960
119   1     3575    3575         0
126   1     4195    2035      2160
138   1     2200    2200         0
144   1      660     660         0
147   1     1155    1155         0
148   1     2640    2640         0
168   1     3410    3410         0
199   1     3135    3135         0
201   1     1155    1155         0
227   1     5680    2640      3040
233   1      880     880         0
245   1     2915    2915         0
261   1      495     495         0
265   1     4345    4345         0
272   1     4665    4345       320
276   1     9545    4345      5200
295   1     6675    4675      2000
;

